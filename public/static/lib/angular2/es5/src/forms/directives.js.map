{"version":3,"sources":["directives.js"],"names":[],"mappings":"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","file":"src/forms/directives.js","sourceRoot":"/Users/yamaguchi/Desktop/mean-edge/node_modules/angular2/es6/dev/","sourcesContent":["import {Directive,\n  onChange} from 'angular2/src/core/annotations_impl/annotations';\nimport {Ancestor} from 'angular2/src/core/annotations_impl/visibility';\nimport {ElementRef} from 'angular2/src/core/compiler/element_ref';\nimport {Optional} from 'angular2/src/di/annotations_impl';\nimport {Renderer} from 'angular2/src/render/api';\nimport {isPresent,\n  isString,\n  CONST_EXPR} from 'angular2/src/facade/lang';\nimport {ListWrapper} from 'angular2/src/facade/collection';\nimport {ControlGroup} from './model';\nimport {Validators} from './validators';\nexport class DefaultValueAccessor {\n  constructor() {\n    this.onChange = (_) => {};\n  }\n  writeValue(value) {\n    this.value = value;\n  }\n}\nObject.defineProperty(DefaultValueAccessor, \"annotations\", {get: function() {\n    return [new Directive({\n      selector: '[control]',\n      hostListeners: {\n        'change': 'onChange($event.target.value)',\n        'input': 'onChange($event.target.value)'\n      },\n      hostProperties: {'value': 'value'}\n    })];\n  }});\nexport class CheckboxControlValueAccessor {\n  constructor(cd, elementRef, renderer) {\n    this.onChange = (_) => {};\n    this._elementRef = elementRef;\n    this._renderer = renderer;\n    cd.valueAccessor = this;\n  }\n  writeValue(value) {\n    this._renderer.setElementProperty(this._elementRef.parentView.render, this._elementRef.boundElementIndex, 'checked', value);\n  }\n}\nObject.defineProperty(CheckboxControlValueAccessor, \"annotations\", {get: function() {\n    return [new Directive({\n      selector: 'input[type=checkbox][control]',\n      hostListeners: {'change': 'onChange($event.target.checked)'},\n      hostProperties: {'checked': 'checked'}\n    })];\n  }});\nObject.defineProperty(CheckboxControlValueAccessor, \"parameters\", {get: function() {\n    return [[ControlDirective], [ElementRef], [Renderer]];\n  }});\nexport class ControlDirective {\n  constructor(groupDirective, valueAccessor) {\n    this._groupDirective = groupDirective;\n    this.controlOrName = null;\n    this.valueAccessor = valueAccessor;\n    this.validator = Validators.nullValidator;\n  }\n  onChange(_) {\n    this._initialize();\n  }\n  _initialize() {\n    if (isPresent(this._groupDirective)) {\n      this._groupDirective.addDirective(this);\n    }\n    var c = this._control();\n    c.validator = Validators.compose([c.validator, this.validator]);\n    this._updateDomValue();\n    this._setUpUpdateControlValue();\n  }\n  _updateDomValue() {\n    this.valueAccessor.writeValue(this._control().value);\n  }\n  _setUpUpdateControlValue() {\n    this.valueAccessor.onChange = (newValue) => this._control().updateValue(newValue);\n  }\n  _control() {\n    if (isString(this.controlOrName)) {\n      return this._groupDirective.findControl(this.controlOrName);\n    } else {\n      return this.controlOrName;\n    }\n  }\n}\nObject.defineProperty(ControlDirective, \"annotations\", {get: function() {\n    return [new Directive({\n      lifecycle: [onChange],\n      selector: '[control]',\n      properties: {'controlOrName': 'control'}\n    })];\n  }});\nObject.defineProperty(ControlDirective, \"parameters\", {get: function() {\n    return [[ControlGroupDirective, new Optional(), new Ancestor()], [DefaultValueAccessor]];\n  }});\nexport class ControlGroupDirective {\n  constructor(groupDirective) {\n    this._groupDirective = groupDirective;\n    this._directives = ListWrapper.create();\n  }\n  set controlGroup(controlGroup) {\n    if (isString(controlGroup)) {\n      this._controlGroupName = controlGroup;\n    } else {\n      this._controlGroup = controlGroup;\n    }\n    this._updateDomValue();\n  }\n  _updateDomValue() {\n    ListWrapper.forEach(this._directives, (cd) => cd._updateDomValue());\n  }\n  addDirective(c) {\n    ListWrapper.push(this._directives, c);\n  }\n  findControl(name) {\n    return this._getControlGroup().controls[name];\n  }\n  _getControlGroup() {\n    if (isPresent(this._controlGroupName)) {\n      return this._groupDirective.findControl(this._controlGroupName);\n    } else {\n      return this._controlGroup;\n    }\n  }\n}\nObject.defineProperty(ControlGroupDirective, \"annotations\", {get: function() {\n    return [new Directive({\n      selector: '[control-group]',\n      properties: {'controlGroup': 'control-group'}\n    })];\n  }});\nObject.defineProperty(ControlGroupDirective, \"parameters\", {get: function() {\n    return [[ControlGroupDirective, new Optional(), new Ancestor()]];\n  }});\nObject.defineProperty(ControlGroupDirective.prototype.addDirective, \"parameters\", {get: function() {\n    return [[ControlDirective]];\n  }});\nObject.defineProperty(ControlGroupDirective.prototype.findControl, \"parameters\", {get: function() {\n    return [[assert.type.string]];\n  }});\nexport const formDirectives = CONST_EXPR([ControlGroupDirective, ControlDirective, CheckboxControlValueAccessor, DefaultValueAccessor]);\n//# sourceMappingURL=directives.js.map\n\n//# sourceMappingURL=./directives.map"]}