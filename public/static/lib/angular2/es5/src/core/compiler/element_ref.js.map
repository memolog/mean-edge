{"version":3,"sources":["element_ref.js"],"names":[],"mappings":"AAAA,KAAK,SAAS,AAAC,iHAAoB,UAAS,SAAQ;;;;;;;AAApD,OAAO;AACD,UAAM,GADZ,SAAS,IAAG,CAAG;AAAf,UAAoB,KAAG,IAAkB,CAAC;IAElC,CAFR,UAAS,IAAG,CAAG;AAAf,qBAAoB,KAAG,eAAkB,CAAC;IAElC,CAFR,UAAS,IAAG,CAAG;AAAf,cAAoB,KAAG,QAAkB,CAAC;IAElC,CAFR,UAAS,IAAG,CAAG;AAAf,6BAAoB,KAAG,uBAAkB,CAAC;IAElC,CADuB;AACzB,UAAM;AAFZ,mBAAA,SAAQ,AAAC;AAIF,eAAM,WAAS,CACR,UAAS,CAAG,CAAA,iBAAgB,CAAG;AACzC,aAAG,WAAW,EAAI,WAAS,CAAC;AAC5B,aAAG,kBAAkB,EAAI,kBAAgB,CAAC;QAC5C;AANQ,AAaV,aAbiB,CAAA,CAAC,eAAc,YAAY,CAAC,AAAC;AAO5C,YAAI,WAAS,EAAI;AACf,iBAAO,CAAA,sBAAqB,AAAC,CAAC,IAAG,WAAW,OAAO,CAAC,cAAc,CAAE,IAAG,kBAAkB,CAAC,CAAC;UAC7F;AACA,qBAAW,CAAX,UAAa,IAAG,CAAG;AACjB,iBAAO,CAAA,cAAa,AAAC,CAAC,GAAE,aAAa,AAAC,CAAC,IAAG,WAAW,CAAG,KAAG,CAAC,CAAC,CAAC;UAChE;AAAA,aAX8D,CAAC;MACzD,AAAC,EAAC,CAJ0B,CAAA;AAApC,cAAQ,AAAC,0BAAqC,CAAA;AAgB9C,WAAK,eAAe,AAAC,CAAC,UAAS,CAAG,aAAW,CAAG,EAAC,GAAE,CAAG,UAAQ,AAAC,CAAE;AAC7D,eAAO,EAAC,CAAC,OAAM,CAAC,CAAG,EAAC,MAAK,KAAK,OAAO,CAAC,CAAC,CAAC;QAC1C,CAAC,CAAC,CAAC;AACL,WAAK,eAAe,AAAC,CAAC,UAAS,UAAU,aAAa,CAAG,aAAW,CAAG,EAAC,GAAE,CAAG,UAAQ,AAAC,CAAE;AACpF,eAAO,EAAC,CAAC,MAAK,KAAK,OAAO,CAAC,CAAC,CAAC;QAC/B,CAAC,CAAC,CAAC;IAnB0B;EAC3B,CAAA;AADI,CAAC,CAAC;AAsB2B","file":"src/core/compiler/element_ref.js","sourceRoot":"/Users/yamaguchi/Desktop/mean-edge/node_modules/angular2/es6/dev/","sourcesContent":["import {DOM} from 'angular2/src/dom/dom_adapter';\nimport {normalizeBlank} from 'angular2/src/facade/lang';\nimport {ViewRef} from './view_ref';\nimport {resolveInternalDomView} from 'angular2/src/render/dom/view/view';\nexport class ElementRef {\n  constructor(parentView, boundElementIndex) {\n    this.parentView = parentView;\n    this.boundElementIndex = boundElementIndex;\n  }\n  get domElement() {\n    return resolveInternalDomView(this.parentView.render).boundElements[this.boundElementIndex];\n  }\n  getAttribute(name) {\n    return normalizeBlank(DOM.getAttribute(this.domElement, name));\n  }\n}\nObject.defineProperty(ElementRef, \"parameters\", {get: function() {\n    return [[ViewRef], [assert.type.number]];\n  }});\nObject.defineProperty(ElementRef.prototype.getAttribute, \"parameters\", {get: function() {\n    return [[assert.type.string]];\n  }});\n//# sourceMappingURL=element_ref.js.map\n\n//# sourceMappingURL=./element_ref.map"]}