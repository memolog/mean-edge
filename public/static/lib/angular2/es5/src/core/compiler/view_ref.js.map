{"version":3,"sources":["view_ref.js"],"names":[],"mappings":"AAAA,KAAK,SAAS,AAAC,mEAAoB,UAAS,SAAQ;;;;;;;AAG7C,SAAS,aAAW,CAAE,OAAM,CAAG;AACpC,SAAO,CAAA,OAAM,MAAM,CAAC;EACtB;AAAA,AAIO,SAAS,kBAAgB,CAAE,YAAW,CAAG;AAC9C,SAAO,CAAA,SAAQ,AAAC,CAAC,YAAW,CAAC,CAAA,CAAI,CAAA,YAAW,WAAW,EAAI,KAAG,CAAC;EACjE;AAXA,AAWA,UAXQ,AAAC,8BAAqC,CAAA;AAA9C,UAAQ,AAAC,wCAAqC,CAAA;AAA9C,OAAO;AACD,UAAM,GADZ,SAAS,IAAG,CAAG;AAAf,gBAAoB,KAAG,UAAkB,CAAC;IAElC,CAFR,UAAS,IAAG,CAAG;AAAf,iBAAoB,KAAG,CAAC;IAEhB,CAFR,UAAS,IAAG,CAAG;AAAf,oBAAoB,KAAG,cAAkB,CAAC;IAElC,CADuB;AACzB,UAAM;AAIZ,WAAK,eAAe,AAAC,CAAC,YAAW,CAAG,aAAW,CAAG,EAAC,GAAE,CAAG,UAAQ,AAAC,CAAE;AAC/D,eAAO,EAAC,CAAC,OAAM,CAAC,CAAC,CAAC;QACpB,CAAC,CAAC,CAAC;AAIL,WAAK,eAAe,AAAC,CAAC,iBAAgB,CAAG,aAAW,CAAG,EAAC,GAAE,CAAG,UAAQ,AAAC,CAAE;AACpE,eAAO,EAAC,CAAC,YAAW,CAAC,CAAC,CAAC;QACzB,CAAC,CAAC,CAAC;AAdL,gBAAA,SAAQ,AAAC;AAeF,eAAM,QAAM,CACL,IAAG,CAAG;AAChB,aAAG,MAAM,EAAI,KAAG,CAAC;QACnB;AAhBQ,AAuBV,aAvBiB,CAAA,CAAC,eAAc,YAAY,CAAC,AAAC;AAiB5C,YAAI,OAAK,EAAI;AACX,iBAAO,CAAA,IAAG,MAAM,OAAO,CAAC;UAC1B;AACA,iBAAO,CAAP,UAAS,WAAU,CAAG,CAAA,KAAI,CAAG;AAC3B,eAAG,MAAM,SAAS,AAAC,CAAC,WAAU,CAAG,MAAI,CAAC,CAAC;UACzC;AAAA,aArB8D,CAAC;MACzD,AAAC,EAAC,CAJ0B,CAAA;AAApC,cAAQ,AAAC,oBAAqC,CAAA;AA0B9C,WAAK,eAAe,AAAC,CAAC,OAAM,CAAG,aAAW,CAAG,EAAC,GAAE,CAAG,UAAQ,AAAC,CAAE;AAC1D,eAAO,EAAC,CAAC,UAAS,QAAQ,CAAC,CAAC,CAAC;QAC/B,CAAC,CAAC,CAAC;AACL,WAAK,eAAe,AAAC,CAAC,OAAM,UAAU,SAAS,CAAG,aAAW,CAAG,EAAC,GAAE,CAAG,UAAQ,AAAC,CAAE;AAC7E,eAAO,EAAC,CAAC,MAAK,KAAK,OAAO,CAAC,CAAG,EAAC,MAAK,KAAK,IAAI,CAAC,CAAC,CAAC;QAClD,CAAC,CAAC,CAAC;AA/BL,qBAAA,SAAQ,AAAC,CAAE;AAgCJ,eAAM,aAAW,CACV,SAAQ,CAAG;AACrB,aAAG,WAAW,EAAI,UAAQ,CAAC;QAC7B;AAjCQ,AAkCV,aAlCiB,CAAA,CAAC,eAAc,YAAY,CAAC,AAAC,sBACkB,CAAC;MACzD,AAAC,EAAC,CAJ0B,CAAA;AAApC,cAAQ,AAAC,8BAAqC,CAAA;IAEf;EAC3B,CAAA;AADI,CAAC,CAAC;AAqCwB","file":"src/core/compiler/view_ref.js","sourceRoot":"/Users/yamaguchi/Desktop/mean-edge/node_modules/angular2/es6/dev/","sourcesContent":["import {isPresent} from 'angular2/src/facade/lang';\nimport * as viewModule from './view';\nimport {RenderViewRef} from 'angular2/src/render/api';\nexport function internalView(viewRef) {\n  return viewRef._view;\n}\nObject.defineProperty(internalView, \"parameters\", {get: function() {\n    return [[ViewRef]];\n  }});\nexport function internalProtoView(protoViewRef) {\n  return isPresent(protoViewRef) ? protoViewRef._protoView : null;\n}\nObject.defineProperty(internalProtoView, \"parameters\", {get: function() {\n    return [[ProtoViewRef]];\n  }});\nexport class ViewRef {\n  constructor(view) {\n    this._view = view;\n  }\n  get render() {\n    return this._view.render;\n  }\n  setLocal(contextName, value) {\n    this._view.setLocal(contextName, value);\n  }\n}\nObject.defineProperty(ViewRef, \"parameters\", {get: function() {\n    return [[viewModule.AppView]];\n  }});\nObject.defineProperty(ViewRef.prototype.setLocal, \"parameters\", {get: function() {\n    return [[assert.type.string], [assert.type.any]];\n  }});\nexport class ProtoViewRef {\n  constructor(protoView) {\n    this._protoView = protoView;\n  }\n}\n//# sourceMappingURL=view_ref.js.map\n\n//# sourceMappingURL=./view_ref.map"]}