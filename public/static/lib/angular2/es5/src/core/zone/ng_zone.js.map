{"version":3,"sources":["ng_zone.js"],"names":[],"mappings":"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","file":"src/core/zone/ng_zone.js","sourceRoot":"/Users/yamaguchi/Desktop/mean-edge/node_modules/angular2/es6/dev/","sourcesContent":["import {List,\n  ListWrapper,\n  StringMapWrapper} from 'angular2/src/facade/collection';\nimport {normalizeBlank,\n  isPresent,\n  global} from 'angular2/src/facade/lang';\nexport class NgZone {\n  constructor({enableLongStackTrace}) {\n    this._onTurnStart = null;\n    this._onTurnDone = null;\n    this._onErrorHandler = null;\n    this._pendingMicrotasks = 0;\n    this._hasExecutedCodeInInnerZone = false;\n    this._nestedRun = 0;\n    this._mountZone = global.zone;\n    this._innerZone = this._createInnerZone(this._mountZone, enableLongStackTrace);\n  }\n  initCallbacks({onTurnStart,\n    onTurnDone,\n    onErrorHandler} = {}) {\n    this._onTurnStart = normalizeBlank(onTurnStart);\n    this._onTurnDone = normalizeBlank(onTurnDone);\n    this._onErrorHandler = normalizeBlank(onErrorHandler);\n  }\n  run(fn) {\n    return this._innerZone.run(fn);\n  }\n  runOutsideAngular(fn) {\n    return this._mountZone.run(fn);\n  }\n  _createInnerZone(zone, enableLongStackTrace) {\n    var ngZone = this;\n    var errorHandling;\n    if (enableLongStackTrace) {\n      errorHandling = StringMapWrapper.merge(Zone.longStackTraceZone, {onError: function(e) {\n          ngZone._onError(this, e);\n        }});\n    } else {\n      errorHandling = {onError: function(e) {\n          ngZone._onError(this, e);\n        }};\n    }\n    return zone.fork(errorHandling).fork({\n      '$run': function(parentRun) {\n        return function() {\n          try {\n            ngZone._nestedRun++;\n            if (!ngZone._hasExecutedCodeInInnerZone) {\n              ngZone._hasExecutedCodeInInnerZone = true;\n              if (ngZone._onTurnStart) {\n                parentRun.call(ngZone._innerZone, ngZone._onTurnStart);\n              }\n            }\n            return parentRun.apply(this, arguments);\n          } finally {\n            ngZone._nestedRun--;\n            if (ngZone._pendingMicrotasks == 0 && ngZone._nestedRun == 0) {\n              if (ngZone._onTurnDone && ngZone._hasExecutedCodeInInnerZone) {\n                try {\n                  parentRun.call(ngZone._innerZone, ngZone._onTurnDone);\n                } finally {\n                  ngZone._hasExecutedCodeInInnerZone = false;\n                }\n              }\n            }\n          }\n        };\n      },\n      '$scheduleMicrotask': function(parentScheduleMicrotask) {\n        return function(fn) {\n          ngZone._pendingMicrotasks++;\n          var microtask = function() {\n            try {\n              fn();\n            } finally {\n              ngZone._pendingMicrotasks--;\n            }\n          };\n          parentScheduleMicrotask.call(this, microtask);\n        };\n      },\n      _innerZone: true\n    });\n  }\n  _onError(zone, e) {\n    if (isPresent(this._onErrorHandler)) {\n      var trace = [normalizeBlank(e.stack)];\n      while (zone && zone.constructedAtException) {\n        trace.push(zone.constructedAtException.get());\n        zone = zone.parent;\n      }\n      this._onErrorHandler(e, trace);\n    } else {\n      console.log('## _onError ##');\n      console.log(e.stack);\n      throw e;\n    }\n  }\n}\n//# sourceMappingURL=ng_zone.es6.map\n\n//# sourceMappingURL=./ng_zone.map"]}