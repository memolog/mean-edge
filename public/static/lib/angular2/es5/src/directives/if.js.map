{"version":3,"sources":["if.js"],"names":[],"mappings":"AAAA,KAAK,SAAS,AAAC,wKAAoB,UAAS,SAAQ;;;;;;;AAApD,OAAO;AACD,UAAM,GADZ,SAAS,IAAG,CAAG;AAAf,gBAAoB,KAAG,UAAkB,CAAC;IAElC,CAFR,UAAS,IAAG,CAAG;AAAf,uBAAoB,KAAG,iBAAkB,CAAC;IAElC,CAFR,UAAS,IAAG,CAAG;AAAf,mBAAoB,KAAG,aAAkB,CAAC;IAElC,CAFR,UAAS,IAAG,CAAG;AAAf,cAAoB,KAAG,QAAkB,CAAC;IAElC,CADuB;AACzB,UAAM;AAFZ,WAAA,SAAQ,AAAC,CAAE;AAIJ,eAAM,GAAC,CACA,aAAY,CAAG,CAAA,YAAW,CAAG;AACvC,aAAG,cAAc,EAAI,cAAY,CAAC;AAClC,aAAG,cAAc,EAAI,KAAG,CAAC;AACzB,aAAG,aAAa,EAAI,aAAW,CAAC;QAClC;AAPQ,AAiBV,aAjBiB,CAAA,CAAC,eAAc,YAAY,CAAC,AAAC,MAQ5C,GAAI,UAAQ,CAAE,YAAW,CAAG;AAC1B,eAAI,YAAW,GAAK,EAAC,OAAM,AAAC,CAAC,IAAG,cAAc,CAAC,CAAA,EAAK,EAAC,IAAG,cAAc,CAAC,CAAG;AACxE,iBAAG,cAAc,EAAI,KAAG,CAAC;AACzB,iBAAG,cAAc,OAAO,AAAC,CAAC,IAAG,aAAa,CAAC,CAAC;YAC9C,KAAO,KAAI,CAAC,YAAW,CAAA,EAAK,EAAC,OAAM,AAAC,CAAC,IAAG,cAAc,CAAC,CAAA,EAAK,CAAA,IAAG,cAAc,CAAC,CAAG;AAC/E,iBAAG,cAAc,EAAI,MAAI,CAAC;AAC1B,iBAAG,cAAc,MAAM,AAAC,EAAC,CAAC;YAC5B;AAAA,UACF,MAf8D,CAAC;MACzD,AAAC,EAAC,CAJ0B,CAAA;AAApC,cAAQ,AAAC,UAAqC,CAAA;AAoB9C,WAAK,eAAe,AAAC,CAAC,EAAC,CAAG,cAAY,CAAG,EAAC,GAAE,CAAG,UAAQ,AAAC,CAAE;AACtD,eAAO,EAAC,GAAI,UAAQ,AAAC,CAAC;AACpB,mBAAO,CAAG,OAAK;AACf,qBAAS,CAAG,EAAC,WAAU,CAAG,KAAG,CAAC;AAAA,UAChC,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;AACL,WAAK,eAAe,AAAC,CAAC,EAAC,CAAG,aAAW,CAAG,EAAC,GAAE,CAAG,UAAQ,AAAC,CAAE;AACrD,eAAO,EAAC,CAAC,gBAAe,CAAC,CAAG,EAAC,YAAW,CAAC,CAAC,CAAC;QAC7C,CAAC,CAAC,CAAC;IA1B0B;EAC3B,CAAA;AADI,CAAC,CAAC;AA6BkB","file":"src/directives/if.js","sourceRoot":"/Users/yamaguchi/Desktop/mean-edge/node_modules/angular2/es6/dev/","sourcesContent":["import {Directive} from 'angular2/src/core/annotations_impl/annotations';\nimport {ViewContainerRef} from 'angular2/src/core/compiler/view_container_ref';\nimport {ProtoViewRef} from 'angular2/src/core/compiler/view_ref';\nimport {isBlank} from 'angular2/src/facade/lang';\nexport class If {\n  constructor(viewContainer, protoViewRef) {\n    this.viewContainer = viewContainer;\n    this.prevCondition = null;\n    this.protoViewRef = protoViewRef;\n  }\n  set condition(newCondition) {\n    if (newCondition && (isBlank(this.prevCondition) || !this.prevCondition)) {\n      this.prevCondition = true;\n      this.viewContainer.create(this.protoViewRef);\n    } else if (!newCondition && (isBlank(this.prevCondition) || this.prevCondition)) {\n      this.prevCondition = false;\n      this.viewContainer.clear();\n    }\n  }\n}\nObject.defineProperty(If, \"annotations\", {get: function() {\n    return [new Directive({\n      selector: '[if]',\n      properties: {'condition': 'if'}\n    })];\n  }});\nObject.defineProperty(If, \"parameters\", {get: function() {\n    return [[ViewContainerRef], [ProtoViewRef]];\n  }});\n//# sourceMappingURL=if.js.map\n\n//# sourceMappingURL=./if.map"]}