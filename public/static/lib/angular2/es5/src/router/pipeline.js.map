{"version":3,"sources":["pipeline.js"],"names":[],"mappings":"AAAA,KAAK,SAAS,AAAC,kFAAoB,UAAS,SAAQ;;;;;;;;AAApD,OAAO;AACD,UAAM,GADZ,SAAS,IAAG;AAAZ,cAAoB,KAAG,QAAkB,CAAC;AAA1C,qBAAoB,KAAG,eAAkB,CAAC;IAElC,CAFR,UAAS,IAAG;AAAZ,WAAoB,KAAG,KAAkB,CAAC;AAA1C,kBAAoB,KAAG,YAAkB,CAAC;IAElC,CAFR,UAAS,IAAG,CAAG;AAAf,kBAAoB,KAAG,YAAkB,CAAC;IAElC,CADuB;AACzB,UAAM;AAFZ,iBAAA,SAAQ,AAAC;AAKF,eAAM,SAAO,CACP,AAAC;AACV,aAAG,MAAM,EAAI,GAAC,SAAC,WAAU;iBAAM,CAAA,WAAU,aAAa,AAAC,EAAC,SAAC,iBAAgB,CAAG,CAAA,gBAAe,CAAM;AAC/F,6BAAe,OAAO,EAAI,CAAA,iBAAgB,OAAO,YAAY,AAAC,CAAC,gBAAe,UAAU,CAAC,CAAC;YAC5F,EAAC;UAAA,IAAG,SAAC,WAAU;iBAAM,CAAA,WAAU,OAAO,gBAAgB,AAAC,EAAC,SAAC,MAAK,CAAG,CAAA,IAAG,CAAM;AACxE,mBAAO,CAAA,MAAK,cAAc,AAAC,CAAC,WAAU,oBAAoB,AAAC,CAAC,IAAG,CAAC,CAAC,CAAC;YACpE,EAAC;UAAA,IAAG,SAAC,WAAU;iBAAM,CAAA,WAAU,OAAO,gBAAgB,AAAC,EAAC,SAAC,MAAK,CAAG,CAAA,IAAG,CAAM;AACxE,mBAAO,CAAA,MAAK,YAAY,AAAC,CAAC,WAAU,oBAAoB,AAAC,CAAC,IAAG,CAAC,CAAC,CAAC;YAClE,EAAC;UAAA,IAAG,SAAC,WAAU;iBAAM,CAAA,WAAU,OAAO,gBAAgB,AAAC,CAAC,WAAU,CAAC;UAAA,EAAC,CAAC;QAkBzE;AA7BU,aAAO,CAAA,CAAC,eAAc,YAAY,CAAC,AAAC,YAa5C,OAAM,CAAN,UAAQ,WAAU;AAChB,AAAI,cAAA,CAAA,KAAI,EAAI,CAAA,IAAG,MAAM;AACjB,0BAAU,EAAI,EAAA,CAAC;AACnB,mBAAS,WAAS,CAAE,AAAY,CAAG;gBAAf,OAAK,6CAAI,KAAG;AAC9B,iBAAI,WAAU,GAAK,CAAA,KAAI,OAAO,CAAG;AAC/B,qBAAO,CAAA,cAAa,QAAQ,AAAC,CAAC,MAAK,CAAC,CAAC;cACvC;AAAA,AACI,gBAAA,CAAA,IAAG,EAAI,CAAA,KAAI,CAAE,WAAU,CAAC,CAAC;AAC7B,wBAAU,GAAK,EAAA,CAAC;AAChB,mBAAO,CAAA,cAAa,QAAQ,AAAC,CAAC,IAAG,AAAC,CAAC,WAAU,CAAC,CAAC,KAAK,AAAC,CAAC,UAAS,CAAC,CAAC;YACnE;AAAA,AACA,iBAAK,eAAe,AAAC,CAAC,UAAS,CAAG,aAAW,CAAG,EAAC,GAAE,CAAG,UAAQ,AAAC,CAAE;AAC7D,qBAAO,EAAC,CAAC,MAAK,KAAK,IAAI,CAAC,CAAC,CAAC;cAC5B,CAAC,CAAC,CAAC;AACL,iBAAO,CAAA,UAAS,AAAC,EAAC,CAAC;UACrB,MA3B8D,CAAC;MACzD,AAAC,EAAC,CAJ0B,CAAA;AAApC,cAAQ,AAAC,sBAAqC,CAAA;AAgC9C,WAAK,eAAe,AAAC,CAAC,QAAO,UAAU,QAAQ,CAAG,aAAW,CAAG,EAAC,GAAE,CAAG,UAAQ,AAAC,CAAE;AAC7E,eAAO,EAAC,CAAC,WAAU,CAAC,CAAC,CAAC;QACxB,CAAC,CAAC,CAAC;IAhC0B;EAC3B,CAAA;AADI,CAAC,CAAC;AAmCwB","file":"src/router/pipeline.js","sourceRoot":"/Users/yamaguchi/Desktop/mean-edge/node_modules/angular2/es6/dev/","sourcesContent":["import {Promise,\n  PromiseWrapper} from 'angular2/src/facade/async';\nimport {List,\n  ListWrapper} from 'angular2/src/facade/collection';\nimport {Instruction} from './instruction';\nexport class Pipeline {\n  constructor() {\n    this.steps = [(instruction) => instruction.traverseSync((parentInstruction, childInstruction) => {\n      childInstruction.router = parentInstruction.router.childRouter(childInstruction.component);\n    }), (instruction) => instruction.router.traverseOutlets((outlet, name) => {\n      return outlet.canDeactivate(instruction.getChildInstruction(name));\n    }), (instruction) => instruction.router.traverseOutlets((outlet, name) => {\n      return outlet.canActivate(instruction.getChildInstruction(name));\n    }), (instruction) => instruction.router.activateOutlets(instruction)];\n  }\n  process(instruction) {\n    var steps = this.steps,\n        currentStep = 0;\n    function processOne(result = true) {\n      if (currentStep >= steps.length) {\n        return PromiseWrapper.resolve(result);\n      }\n      var step = steps[currentStep];\n      currentStep += 1;\n      return PromiseWrapper.resolve(step(instruction)).then(processOne);\n    }\n    Object.defineProperty(processOne, \"parameters\", {get: function() {\n        return [[assert.type.any]];\n      }});\n    return processOne();\n  }\n}\nObject.defineProperty(Pipeline.prototype.process, \"parameters\", {get: function() {\n    return [[Instruction]];\n  }});\n//# sourceMappingURL=pipeline.js.map\n\n//# sourceMappingURL=./pipeline.map"]}