{"version":3,"sources":["router_link.js"],"names":[],"mappings":"AAAA,KAAK,SAAS,AAAC,+KAAoB,UAAS,SAAQ;;;;;;;;;;;AAApD,OAAO;AACD,UAAM,GADZ,SAAS,IAAG;AAAZ,gBAAoB,KAAG,UAAkB,CAAC;AAA1C,uBAAoB,KAAG,iBAAkB,CAAC;IAElC,CAFR,UAAS,IAAG,CAAG;AAAf,iBAAoB,KAAG,WAAkB,CAAC;IAElC,CAFR,UAAS,IAAG;AAAZ,gBAAoB,KAAG,UAAkB,CAAC;AAA1C,uBAAoB,KAAG,iBAAkB,CAAC;IAElC,CAFR,UAAS,IAAG,CAAG;AAAf,gBAAoB,KAAG,UAAkB,CAAC;IAElC,CAFR,UAAS,IAAG,CAAG;AAAf,UAAoB,KAAG,IAAkB,CAAC;IAElC,CAFR,UAAS,IAAG,CAAG;AAAf,aAAoB,KAAG,OAAkB,CAAC;IAElC,CADuB;AACzB,UAAM;AAFZ,mBAAA,SAAQ,AAAC;AAQF,eAAM,WAAS,CACR,UAAS,CAAG,CAAA,MAAK;;AAC3B,aAAG,OAAO,EAAI,CAAA,UAAS,WAAW,CAAC;AACnC,aAAG,QAAQ,EAAI,OAAK,CAAC;AACrB,aAAG,QAAQ,EAAI,CAAA,gBAAe,OAAO,AAAC,EAAC,CAAC;AACxC,YAAE,GAAG,AAAC,CAAC,IAAG,OAAO,CAAG,QAAM,GAAG,SAAC,GAAE,CAAM;AACpC,cAAE,eAAe,AAAC,EAAC,CAAC;AACpB,uBAAW,SAAS,AAAC,CAAC,UAAS,CAAC,CAAC;UACnC,EAAC,CAAC;QAeN;AA7BU,aAAO,CAAA,CAAC,eAAc,YAAY,CAAC,AAAC;AAgB5C,YAAI,MAAI,CAAE,OAAM,CAAG;AACjB,eAAG,OAAO,EAAI,QAAM,CAAC;UACvB;AACA,YAAI,OAAK,CAAE,OAAM,CAAG;AAClB,eAAG,QAAQ,EAAI,QAAM,CAAC;UACxB;AACA,yBAAe,CAAf,UAAgB,AAAC,CAAE;AACjB,eAAI,SAAQ,AAAC,CAAC,IAAG,OAAO,CAAC,CAAA,EAAK,CAAA,SAAQ,AAAC,CAAC,IAAG,QAAQ,CAAC,CAAG;AACrD,AAAI,gBAAA,CAAA,OAAM,EAAI,CAAA,IAAG,QAAQ,SAAS,AAAC,CAAC,IAAG,OAAO,CAAG,CAAA,IAAG,QAAQ,CAAC,CAAC;AAC9D,iBAAG,MAAM,EAAI,QAAM,CAAC;AACpB,gBAAE,aAAa,AAAC,CAAC,IAAG,OAAO,CAAG,OAAK,CAAG,QAAM,CAAC,CAAC;YAChD;AAAA,UACF;AAAA,aA3B8D,CAAC;MACzD,AAAC,EAAC,CAJ0B,CAAA;AAApC,cAAQ,AAAC,0BAAqC,CAAA;AAgC9C,WAAK,eAAe,AAAC,CAAC,UAAS,CAAG,cAAY,CAAG,EAAC,GAAE,CAAG,UAAQ,AAAC,CAAE;AAC9D,eAAO,EAAC,GAAI,UAAQ,AAAC,CAAC;AACpB,mBAAO,CAAG,gBAAc;AACxB,qBAAS,CAAG;AACV,oBAAM,CAAG,aAAW;AACpB,qBAAO,CAAG,eAAa;AAAA,YACzB;AACA,oBAAQ,CAAG,EAAC,gBAAe,CAAC;AAAA,UAC9B,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;AACL,WAAK,eAAe,AAAC,CAAC,UAAS,CAAG,aAAW,CAAG,EAAC,GAAE,CAAG,UAAQ,AAAC,CAAE;AAC7D,eAAO,EAAC,CAAC,UAAS,CAAC,CAAG,EAAC,MAAK,CAAC,CAAC,CAAC;QACjC,CAAC,CAAC,CAAC;IA1C0B;EAC3B,CAAA;AADI,CAAC,CAAC;AA6C2B","file":"src/router/router_link.js","sourceRoot":"/Users/yamaguchi/Desktop/mean-edge/node_modules/angular2/es6/dev/","sourcesContent":["import {Directive,\n  onAllChangesDone} from 'angular2/src/core/annotations_impl/annotations';\nimport {ElementRef} from 'angular2/core';\nimport {StringMap,\n  StringMapWrapper} from 'angular2/src/facade/collection';\nimport {isPresent} from 'angular2/src/facade/lang';\nimport {DOM} from 'angular2/src/dom/dom_adapter';\nimport {Router} from './router';\nexport class RouterLink {\n  constructor(elementRef, router) {\n    this._domEl = elementRef.domElement;\n    this._router = router;\n    this._params = StringMapWrapper.create();\n    DOM.on(this._domEl, 'click', (evt) => {\n      evt.preventDefault();\n      this._router.navigate(this._href);\n    });\n  }\n  set route(changes) {\n    this._route = changes;\n  }\n  set params(changes) {\n    this._params = changes;\n  }\n  onAllChangesDone() {\n    if (isPresent(this._route) && isPresent(this._params)) {\n      var newHref = this._router.generate(this._route, this._params);\n      this._href = newHref;\n      DOM.setAttribute(this._domEl, 'href', newHref);\n    }\n  }\n}\nObject.defineProperty(RouterLink, \"annotations\", {get: function() {\n    return [new Directive({\n      selector: '[router-link]',\n      properties: {\n        'route': 'routerLink',\n        'params': 'routerParams'\n      },\n      lifecycle: [onAllChangesDone]\n    })];\n  }});\nObject.defineProperty(RouterLink, \"parameters\", {get: function() {\n    return [[ElementRef], [Router]];\n  }});\n//# sourceMappingURL=router_link.js.map\n\n//# sourceMappingURL=./router_link.map"]}