{"version":3,"sources":["path_recognizer.js"],"names":[],"mappings":"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","file":"src/router/path_recognizer.js","sourceRoot":"/Users/yamaguchi/Desktop/mean-edge/node_modules/angular2/es6/dev/","sourcesContent":["import {RegExp,\n  RegExpWrapper,\n  RegExpMatcherWrapper,\n  StringWrapper,\n  isPresent,\n  isBlank,\n  BaseException} from 'angular2/src/facade/lang';\nimport {Map,\n  MapWrapper,\n  StringMap,\n  StringMapWrapper,\n  List,\n  ListWrapper} from 'angular2/src/facade/collection';\nimport {escapeRegex} from './url';\nclass StaticSegment {\n  constructor(string) {\n    this.string = string;\n    this.name = '';\n    this.regex = escapeRegex(string);\n  }\n  generate(params) {\n    return this.string;\n  }\n}\nObject.defineProperty(StaticSegment, \"parameters\", {get: function() {\n    return [[assert.type.string]];\n  }});\nclass DynamicSegment {\n  constructor(name) {\n    this.name = name;\n    this.regex = \"([^/]+)\";\n  }\n  generate(params) {\n    if (!StringMapWrapper.contains(params, this.name)) {\n      throw new BaseException(`Route generator for '${this.name}' was not included in parameters passed.`);\n    }\n    return StringMapWrapper.get(params, this.name);\n  }\n}\nObject.defineProperty(DynamicSegment, \"parameters\", {get: function() {\n    return [[assert.type.string]];\n  }});\nObject.defineProperty(DynamicSegment.prototype.generate, \"parameters\", {get: function() {\n    return [[StringMap]];\n  }});\nclass StarSegment {\n  constructor(name) {\n    this.name = name;\n    this.regex = \"(.+)\";\n  }\n  generate(params) {\n    return StringMapWrapper.get(params, this.name);\n  }\n}\nObject.defineProperty(StarSegment, \"parameters\", {get: function() {\n    return [[assert.type.string]];\n  }});\nObject.defineProperty(StarSegment.prototype.generate, \"parameters\", {get: function() {\n    return [[StringMap]];\n  }});\nvar paramMatcher = RegExpWrapper.create(\"^:([^\\/]+)$\");\nvar wildcardMatcher = RegExpWrapper.create(\"^\\\\*([^\\/]+)$\");\nfunction parsePathString(route) {\n  if (route[0] === \"/\") {\n    route = StringWrapper.substring(route, 1);\n  }\n  var segments = splitBySlash(route);\n  var results = ListWrapper.create();\n  for (var i = 0; i < segments.length; i++) {\n    var segment = segments[i],\n        match;\n    if (isPresent(match = RegExpWrapper.firstMatch(paramMatcher, segment))) {\n      ListWrapper.push(results, new DynamicSegment(match[1]));\n    } else if (isPresent(match = RegExpWrapper.firstMatch(wildcardMatcher, segment))) {\n      ListWrapper.push(results, new StarSegment(match[1]));\n    } else if (segment.length > 0) {\n      ListWrapper.push(results, new StaticSegment(segment));\n    }\n  }\n  return results;\n}\nObject.defineProperty(parsePathString, \"parameters\", {get: function() {\n    return [[assert.type.string]];\n  }});\nvar SLASH_RE = RegExpWrapper.create('/');\nfunction splitBySlash(url) {\n  return StringWrapper.split(url, SLASH_RE);\n}\nObject.defineProperty(splitBySlash, \"parameters\", {get: function() {\n    return [[assert.type.string]];\n  }});\nexport class PathRecognizer {\n  constructor(path, handler) {\n    this.handler = handler;\n    this.segments = ListWrapper.create();\n    var segments = parsePathString(path);\n    var regexString = '^';\n    ListWrapper.forEach(segments, (segment) => {\n      regexString += '/' + segment.regex;\n    });\n    this.regex = RegExpWrapper.create(regexString);\n    this.segments = segments;\n  }\n  parseParams(url) {\n    var params = StringMapWrapper.create();\n    var urlPart = url;\n    for (var i = 0; i < this.segments.length; i++) {\n      var segment = this.segments[i];\n      var match = RegExpWrapper.firstMatch(RegExpWrapper.create('/' + segment.regex), urlPart);\n      urlPart = StringWrapper.substring(urlPart, match[0].length);\n      if (segment.name.length > 0) {\n        StringMapWrapper.set(params, segment.name, match[1]);\n      }\n    }\n    return params;\n  }\n  generate(params) {\n    return ListWrapper.join(ListWrapper.map(this.segments, (segment) => '/' + segment.generate(params)), '');\n  }\n}\nObject.defineProperty(PathRecognizer, \"parameters\", {get: function() {\n    return [[assert.type.string], [assert.type.any]];\n  }});\nObject.defineProperty(PathRecognizer.prototype.parseParams, \"parameters\", {get: function() {\n    return [[assert.type.string]];\n  }});\nObject.defineProperty(PathRecognizer.prototype.generate, \"parameters\", {get: function() {\n    return [[StringMap]];\n  }});\n//# sourceMappingURL=path_recognizer.js.map\n\n//# sourceMappingURL=./path_recognizer.map"]}