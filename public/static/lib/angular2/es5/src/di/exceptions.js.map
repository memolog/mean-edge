{"version":3,"sources":["exceptions.js"],"names":[],"mappings":"AAAA,KAAK,SAAS,AAAC,gEAAoB,UAAS,SAAQ;;;;;;;;;;;;AAEpD,SAAS,qBAAmB,CAAE,IAAG,CAAG;AAChC,AAAI,MAAA,CAAA,GAAE,EAAI,GAAC,CAAC;AACZ,QAAS,GAAA,CAAA,CAAA,EAAI,EAAA,CAAG,CAAA,CAAA,EAAI,CAAA,IAAG,OAAO,CAAG,GAAE,CAAA,CAAG;AAClC,SAAI,WAAU,SAAS,AAAC,CAAC,GAAE,CAAG,CAAA,IAAG,CAAE,CAAA,CAAC,CAAC,CAAG;AACpC,kBAAU,KAAK,AAAC,CAAC,GAAE,CAAG,CAAA,IAAG,CAAE,CAAA,CAAC,CAAC,CAAC;AAC9B,aAAO,IAAE,CAAC;MACd,KACK;AACD,kBAAU,KAAK,AAAC,CAAC,GAAE,CAAG,CAAA,IAAG,CAAE,CAAA,CAAC,CAAC,CAAC;MAClC;AAAA,IACJ;AAAA,AACA,SAAO,IAAE,CAAC;EACd;AAAA,AACA,SAAS,uBAAqB,CAAE,IAAG;AAC/B,OAAI,IAAG,OAAO,EAAI,EAAA,CAAG;AACjB,AAAI,QAAA,CAAA,QAAO,EAAI,CAAA,oBAAmB,AAAC,CAAC,WAAU,SAAS,AAAC,CAAC,IAAG,CAAC,CAAC,CAAC;AAC/D,AAAI,QAAA,CAAA,SAAQ,EAAI,CAAA,WAAU,IAAI,AAAC,CAAC,QAAO,GAAG,SAAC,CAAA;aAAM,CAAA,SAAQ,AAAC,CAAC,CAAA,MAAM,CAAC;MAAA,EAAC,CAAC;AACpE,WAAO,CAAA,IAAG,EAAI,CAAA,SAAQ,KAAK,AAAC,CAAC,MAAK,CAAC,CAAA,CAAI,IAAE,CAAC;IAC9C,KACK;AACD,WAAO,GAAC,CAAC;IACb;AAAA,EACJ;AAxBA,OAAO;AACD,UAAM,GADZ,SAAS,IAAG,CAAG;AAAf,kBAAoB,KAAG,YAAkB,CAAC;IAElC,CAFR,UAAS,IAAG;AAAZ,gBAAoB,KAAG,UAAkB,CAAC;AAA1C,oBAAoB,KAAG,cAAkB,CAAC;IAElC,CADuB;AACzB,UAAM;AAFZ,6BAAA,SAAS,QAAO;AA8BT,eAAM,qBAAmB,CAEhB,GAAE,CAAG,CAAA,yBAAwB,CAAG;AAhChD,AAiCQ,wBAjCM,iBAAiB,AAAC,sBAAkB,KAAK,MAAmB,CAiC3D;AACP,aAAG,KAAK,EAAI,EAAC,GAAE,CAAC,CAAC;AACjB,aAAG,0BAA0B,EAAI,0BAAwB,CAAC;AAC1D,aAAG,QAAQ,EAAI,CAAA,IAAG,0BAA0B,AAAC,CAAC,IAAG,KAAK,CAAC,CAAC;QAC5D;AAnCM,AA0CV,aA1CiB,CAAA,CAAC,eAAc,YAAY,CAAC,AAAC;AAqC1C,eAAK,CAAL,UAAO,GAAE,CAAG;AACR,sBAAU,KAAK,AAAC,CAAC,IAAG,KAAK,CAAG,IAAE,CAAC,CAAC;AAChC,eAAG,QAAQ,EAAI,CAAA,IAAG,0BAA0B,AAAC,CAAC,IAAG,KAAK,CAAC,CAAC;UAC5D;AACA,iBAAO,CAAP,UAAQ,AAAC,CAAE;AAAE,iBAAO,CAAA,IAAG,QAAQ,CAAC;UAAE;AAAA,aAxC4B,SAAO,CAAC,CAAC;MACnE,AAAC,CA0BiC,aAAY,CA1B3B,CAJS,CAAA;AAApC,cAAQ,AAAC,8CAAqC,CAAA;AAA9C,uBAAA,SAAS,QAAO,CAAG;AAmDZ,eAAM,eAAa,CAEV,GAAE,CAAG;AArDrB,AAsDQ,wBAtDM,iBAAiB,AAAC,gBAAkB,KAAK,MAsDzC,IAAE,CAAG,UAAU,IAAG,CAAG;AACvB,AAAI,cAAA,CAAA,KAAI,EAAI,CAAA,SAAQ,AAAC,CAAC,WAAU,MAAM,AAAC,CAAC,IAAG,CAAC,MAAM,CAAC,CAAC;AACpD,mBAAO,kBAAkB,EAAC,MAAI,EAAC,IAAG,EAAC,CAAA,sBAAqB,AAAC,CAAC,IAAG,CAAC,EAAG;UACrE,CAzDkE,CAyDhE;QACN;AAxDM,AAyDV,aAzDiB,CAAA,CAAC,eAAc,YAAY,CAAC,AAAC,wBACoB,SAAO,CAAC,CAAC;MACnE,AAAC,CA+C2B,oBAAmB,CA/C5B,CAJS,CAAA;AAApC,cAAQ,AAAC,kCAAqC,CAAA;AAA9C,0BAAA,SAAS,QAAO,CAAG;AAoFZ,eAAM,kBAAgB,CAEb,GAAE,CAAG;AAtFrB,AAuFQ,wBAvFM,iBAAiB,AAAC,mBAAkB,KAAK,MAuFzC,IAAE,CAAG,UAAU,IAAG,CAAG;AACvB,AAAI,cAAA,CAAA,KAAI,EAAI,CAAA,SAAQ,AAAC,CAAC,WAAU,MAAM,AAAC,CAAC,IAAG,CAAC,MAAM,CAAC,CAAC;AACpD,mBAAO,qBAAqB,EAAC,MAAI,EAAC,+CAA8C,EAAC,CAAA,sBAAqB,AAAC,CAAC,IAAG,CAAC,EAAG;UACnH,CA1FkE,CA0FhE;QACN;AAzFM,AA0FV,aA1FiB,CAAA,CAAC,eAAc,YAAY,CAAC,AAAC,2BACoB,SAAO,CAAC,CAAC;MACnE,AAAC,CAgF8B,oBAAmB,CAhF/B,CAJS,CAAA;AAApC,cAAQ,AAAC,wCAAqC,CAAA;AAA9C,8BAAA,SAAS,QAAO,CAAG;AA+GZ,eAAM,sBAAoB,CAEjB,GAAE,CAAG;AAjHrB,AAkHQ,wBAlHM,iBAAiB,AAAC,uBAAkB,KAAK,MAkHzC,IAAE,CAAG,UAAU,IAAG,CAAG;AACvB,mBAAO,uCAAuC,EAAC,CAAA,sBAAqB,AAAC,CAAC,IAAG,CAAC,EAAG;UACjF,CApHkE,CAoHhE;QACN;AAnHM,AAoHV,aApHiB,CAAA,CAAC,eAAc,YAAY,CAAC,AAAC,+BACoB,SAAO,CAAC,CAAC;MACnE,AAAC,CA2GkC,oBAAmB,CA3GnC,CAJS,CAAA;AAApC,cAAQ,AAAC,gDAAqC,CAAA;AAA9C,2BAAA,SAAS,QAAO,CAAG;AA+HZ,eAAM,mBAAiB,CAEd,KAAI,CAAG,CAAA,GAAE,CAAG;AAjI5B,AAkIQ,wBAlIM,iBAAiB,AAAC,oBAAkB,KAAK,MAkIzC,IAAE,CAAG,UAAU,IAAG,CAAG;AACvB,AAAI,cAAA,CAAA,KAAI,EAAI,CAAA,SAAQ,AAAC,CAAC,WAAU,MAAM,AAAC,CAAC,IAAG,CAAC,MAAM,CAAC,CAAC;AACpD,mBAAO,gCAAgC,EAAC,MAAI,EAAC,IAAG,EAAC,CAAA,sBAAqB,AAAC,CAAC,IAAG,CAAC,CAAA,CAAC,qBAAoB,EAAC,MAAI,EAAG;UAC7G,CArIkE,CAqIhE;AACF,aAAG,MAAM,EAAI,MAAI,CAAC;AAClB,aAAG,SAAS,EAAI,IAAE,CAAC;QACvB;AAtIM,AAuIV,aAvIiB,CAAA,CAAC,eAAc,YAAY,CAAC,AAAC,4BACoB,SAAO,CAAC,CAAC;MACnE,AAAC,CA2H+B,oBAAmB,CA3HhC,CAJS,CAAA;AAApC,cAAQ,AAAC,0CAAqC,CAAA;AAA9C,4BAAA,SAAS,QAAO;AAgJT,eAAM,oBAAkB,CACf,OAAM,CAAG;AAjJzB,AAkJQ,wBAlJM,iBAAiB,AAAC,qBAAkB,KAAK,MAAmB,CAkJ3D;AACP,aAAG,QAAQ,EAAI,CAAA,yEAAwE,EACnF,CAAA,OAAM,SAAS,AAAC,EAAC,CAAC;QAC1B;AAnJM,AAqJV,aArJiB,CAAA,CAAC,eAAc,YAAY,CAAC,AAAC,uBAoJ1C,QAAO,CAAP,UAAQ,AAAC,CAAE;AAAE,iBAAO,CAAA,IAAG,QAAQ,CAAC;UAAE,MAnJ4B,SAAO,CAAC,CAAC;MACnE,AAAC,CA4IgC,aAAY,CA5I1B,CAJS,CAAA;AAApC,cAAQ,AAAC,4CAAqC,CAAA;AAA9C,0BAAA,SAAS,QAAO;AAgKT,eAAM,kBAAgB,CACb,UAAS,CAAG;AAjK5B,AAkKQ,wBAlKM,iBAAiB,AAAC,mBAAkB,KAAK,MAAmB,CAkK3D;AACP,aAAG,QAAQ,EAAI,CAAA,oCAAmC,EAAI,CAAA,SAAQ,AAAC,CAAC,UAAS,CAAC,CAAA,CAAI,KAAG,CAAA,CAC7E,qDAAmD,CAAC;QAC5D;AAnKM,AAqKV,aArKiB,CAAA,CAAC,eAAc,YAAY,CAAC,AAAC,qBAoK1C,QAAO,CAAP,UAAQ,AAAC,CAAE;AAAE,iBAAO,CAAA,IAAG,QAAQ,CAAC;UAAE,MAnK4B,SAAO,CAAC,CAAC;MACnE,AAAC,CA4J8B,aAAY,CA5JxB,CAJS,CAAA;AAApC,cAAQ,AAAC,wCAAqC,CAAA;IAEf;EAC3B,CAAA;AADI,CAAC,CAAC;AAsK2B","file":"src/di/exceptions.js","sourceRoot":"/Users/yamaguchi/Desktop/mean-edge/node_modules/angular2/es6/dev/","sourcesContent":["import { ListWrapper } from 'angular2/src/facade/collection';\r\nimport { stringify, BaseException } from 'angular2/src/facade/lang';\r\nfunction findFirstClosedCycle(keys) {\r\n    var res = [];\r\n    for (var i = 0; i < keys.length; ++i) {\r\n        if (ListWrapper.contains(res, keys[i])) {\r\n            ListWrapper.push(res, keys[i]);\r\n            return res;\r\n        }\r\n        else {\r\n            ListWrapper.push(res, keys[i]);\r\n        }\r\n    }\r\n    return res;\r\n}\r\nfunction constructResolvingPath(keys) {\r\n    if (keys.length > 1) {\r\n        var reversed = findFirstClosedCycle(ListWrapper.reversed(keys));\r\n        var tokenStrs = ListWrapper.map(reversed, (k) => stringify(k.token));\r\n        return \" (\" + tokenStrs.join(' -> ') + \")\";\r\n    }\r\n    else {\r\n        return \"\";\r\n    }\r\n}\r\n/**\r\n * Base class for all errors arising from misconfigured bindings.\r\n *\r\n * @exportedAs angular2/di_errors\r\n */\r\nexport class AbstractBindingError extends BaseException {\r\n    // TODO(tbosch): Can't do key:Key as this results in a circular dependency!\r\n    constructor(key, constructResolvingMessage) {\r\n        super();\r\n        this.keys = [key];\r\n        this.constructResolvingMessage = constructResolvingMessage;\r\n        this.message = this.constructResolvingMessage(this.keys);\r\n    }\r\n    // TODO(tbosch): Can't do key:Key as this results in a circular dependency!\r\n    addKey(key) {\r\n        ListWrapper.push(this.keys, key);\r\n        this.message = this.constructResolvingMessage(this.keys);\r\n    }\r\n    toString() { return this.message; }\r\n}\r\n/**\r\n * Thrown when trying to retrieve a dependency by `Key` from {@link Injector}, but the\r\n * {@link Injector} does not have a {@link Binding} for {@link Key}.\r\n *\r\n * @exportedAs angular2/di_errors\r\n */\r\nexport class NoBindingError extends AbstractBindingError {\r\n    // TODO(tbosch): Can't do key:Key as this results in a circular dependency!\r\n    constructor(key) {\r\n        super(key, function (keys) {\r\n            var first = stringify(ListWrapper.first(keys).token);\r\n            return `No provider for ${first}!${constructResolvingPath(keys)}`;\r\n        });\r\n    }\r\n}\r\n/**\r\n * Thrown when trying to retrieve an async {@link Binding} using the sync API.\r\n *\r\n * ## Example\r\n *\r\n * ```javascript\r\n * var injector = Injector.resolveAndCreate([\r\n *   bind(Number).toAsyncFactory(() => {\r\n *     return new Promise((resolve) => resolve(1 + 2));\r\n *   }),\r\n *   bind(String).toFactory((v) => { return \"Value: \" + v; }, [String])\r\n * ]);\r\n *\r\n * injector.asyncGet(String).then((v) => expect(v).toBe('Value: 3'));\r\n * expect(() => {\r\n *   injector.get(String);\r\n * }).toThrowError(AsycBindingError);\r\n * ```\r\n *\r\n * The above example throws because `String` depends on `Number` which is async. If any binding in\r\n * the dependency graph is async then the graph can only be retrieved using the `asyncGet` API.\r\n *\r\n * @exportedAs angular2/di_errors\r\n */\r\nexport class AsyncBindingError extends AbstractBindingError {\r\n    // TODO(tbosch): Can't do key:Key as this results in a circular dependency!\r\n    constructor(key) {\r\n        super(key, function (keys) {\r\n            var first = stringify(ListWrapper.first(keys).token);\r\n            return `Cannot instantiate ${first} synchronously. It is provided as a promise!${constructResolvingPath(keys)}`;\r\n        });\r\n    }\r\n}\r\n/**\r\n * Thrown when dependencies form a cycle.\r\n *\r\n * ## Example:\r\n *\r\n * ```javascript\r\n * class A {\r\n *   constructor(b:B) {}\r\n * }\r\n * class B {\r\n *   constructor(a:A) {}\r\n * }\r\n * ```\r\n *\r\n * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\r\n *\r\n * @exportedAs angular2/di_errors\r\n */\r\nexport class CyclicDependencyError extends AbstractBindingError {\r\n    // TODO(tbosch): Can't do key:Key as this results in a circular dependency!\r\n    constructor(key) {\r\n        super(key, function (keys) {\r\n            return `Cannot instantiate cyclic dependency!${constructResolvingPath(keys)}`;\r\n        });\r\n    }\r\n}\r\n/**\r\n * Thrown when a constructing type returns with an Error.\r\n *\r\n * The `InstantiationError` class contains the original error plus the dependency graph which caused\r\n * this object to be instantiated.\r\n *\r\n * @exportedAs angular2/di_errors\r\n */\r\nexport class InstantiationError extends AbstractBindingError {\r\n    // TODO(tbosch): Can't do key:Key as this results in a circular dependency!\r\n    constructor(cause, key) {\r\n        super(key, function (keys) {\r\n            var first = stringify(ListWrapper.first(keys).token);\r\n            return `Error during instantiation of ${first}!${constructResolvingPath(keys)}. ORIGINAL ERROR: ${cause}`;\r\n        });\r\n        this.cause = cause;\r\n        this.causeKey = key;\r\n    }\r\n}\r\n/**\r\n * Thrown when an object other then {@link Binding} (or `Type`) is passed to {@link Injector}\r\n * creation.\r\n *\r\n * @exportedAs angular2/di_errors\r\n */\r\nexport class InvalidBindingError extends BaseException {\r\n    constructor(binding) {\r\n        super();\r\n        this.message = \"Invalid binding - only instances of Binding and Type are allowed, got: \" +\r\n            binding.toString();\r\n    }\r\n    toString() { return this.message; }\r\n}\r\n/**\r\n * Thrown when the class has no annotation information.\r\n *\r\n * Lack of annotation information prevents the {@link Injector} from determining which dependencies\r\n * need to be injected into the constructor.\r\n *\r\n * @exportedAs angular2/di_errors\r\n */\r\nexport class NoAnnotationError extends BaseException {\r\n    constructor(typeOrFunc) {\r\n        super();\r\n        this.message = \"Cannot resolve all parameters for \" + stringify(typeOrFunc) + \". \" +\r\n            'Make sure they all have valid type or annotations.';\r\n    }\r\n    toString() { return this.message; }\r\n}\r\n//# sourceMappingURL=exceptions.js.map"]}