{"version":3,"sources":["ast.js"],"names":[],"mappings":"AAAA,KAAK,SAAS,AAAC,gEAAoB,UAAS,SAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuWpD,SAAS,SAAO,CAAE,OAAM,CAAG,CAAA,MAAK,CAAG,CAAA,IAAG,CAAG;AACrC,AAAI,MAAA,CAAA,MAAK,EAAI,CAAA,IAAG,OAAO,CAAC;AACxB,OAAI,MAAK,EAAI,GAAC,CAAG;AACb,UAAM,IAAI,cAAY,AAAC,CAAC,mCAAkC,CAAC,CAAC;IAChE;AAAA,AACI,MAAA,CAAA,MAAK,EAAI,CAAA,cAAa,CAAE,MAAK,CAAC,CAAC;AACnC,QAAS,GAAA,CAAA,CAAA,EAAI,EAAA,CAAG,CAAA,CAAA,EAAI,OAAK,CAAG,CAAA,CAAA,EAAE,CAAG;AAC7B,WAAK,CAAE,CAAA,CAAC,EAAI,CAAA,IAAG,CAAE,CAAA,CAAC,KAAK,AAAC,CAAC,OAAM,CAAG,OAAK,CAAC,CAAC;IAC7C;AAAA,AACA,SAAO,OAAK,CAAC;EACjB;AAjXA,AAiXA,OAjXO;AACD,UAAM,GADZ,SAAS,IAAG;AAAZ,gBAAoB,KAAG,UAAkB,CAAC;AAA1C,sBAAoB,KAAG,gBAAkB,CAAC;AAA1C,oBAAoB,KAAG,cAAkB,CAAC;IAElC,CAFR,UAAS,IAAG;AAAZ,kBAAoB,KAAG,YAAkB,CAAC;AAA1C,uBAAoB,KAAG,iBAAkB,CAAC;IAElC,CADuB;AACzB,UAAM;iBAGY,KAAG;AAL3B,cAAQ,AAAC,0BAAqC,CAAA;AAA9C,YAAA,SAAQ,AAAC;AAMF,eAAM,IAAE,KAMf;AAVU,aAAO,CAAA,CAAC,eAAc,YAAY,CAAC,AAAC;AAK1C,aAAG,CAAH,UAAK,OAAM,CAAG,CAAA,MAAK,CAAG;AAAE,gBAAM,IAAI,cAAY,AAAC,CAAC,eAAc,CAAC,CAAC;UAAE;AAClE,YAAI,aAAW,EAAI;AAAE,iBAAO,MAAI,CAAC;UAAE;AACnC,eAAK,CAAL,UAAO,OAAM,CAAG,CAAA,MAAK,CAAG,CAAA,KAAI,CAAG;AAAE,gBAAM,IAAI,cAAY,AAAC,CAAC,eAAc,CAAC,CAAC;UAAE;AAC3E,cAAI,CAAJ,UAAM,OAAM,CAAG;AAAE,iBAAO,KAAG,CAAC;UAAE;AAC9B,iBAAO,CAAP,UAAQ,AAAC,CAAE;AAAE,iBAAO,MAAI,CAAC;UAAE;AAAA,aARiC,CAAC;MACzD,AAAC,EAAC,CAJ0B,CAAA;AAApC,cAAQ,AAAC,YAAqC,CAAA;AAA9C,kBAAA,SAAS,QAAO;AAaT,eAAM,UAAQ;AAbrB,wBAAc,iBAAiB,AAAC,WACL,MAAM,AAAC,CAAC,IAAG,CAAG,UAAQ,CAAC,CAAA;QAiBlD;AAhBU,aAAO,CAAA,CAAC,eAAc,YAAY,CAAC,AAAC;AAY1C,aAAG,CAAH,UAAK,OAAM,CAAG,CAAA,MAAK,CAAG;AAAE,iBAAO,KAAG,CAAC;UAAE;AACrC,cAAI,CAAJ,UAAM,OAAM,CAAG,GAEf;AAAA,aAd8D,SAAO,CAAC,CAAC;MACnE,AAAC,CASsB,GAAE,CATN,CAJS,CAAA;AAApC,cAAQ,AAAC,wBAAqC,CAAA;AAA9C,yBAAA,SAAS,QAAO;AAmBT,eAAM,iBAAe;AAnB5B,wBAAc,iBAAiB,AAAC,kBACL,MAAM,AAAC,CAAC,IAAG,CAAG,UAAQ,CAAC,CAAA;QAqBlD;AApBU,aAAO,CAAA,CAAC,eAAc,YAAY,CAAC,AAAC;AAkB1C,aAAG,CAAH,UAAK,OAAM,CAAG,CAAA,MAAK,CAAG;AAAE,iBAAO,QAAM,CAAC;UAAE;AACxC,cAAI,CAAJ,UAAM,OAAM,CAAG;AAAE,iBAAO,CAAA,OAAM,sBAAsB,AAAC,CAAC,IAAG,CAAC,CAAC;UAAE;AAAA,aAlBC,SAAO,CAAC,CAAC;MACnE,AAAC,CAe6B,GAAE,CAfb,CAJS,CAAA;AAApC,cAAQ,AAAC,sCAAqC,CAAA;AAA9C,cAAA,SAAS,QAAO;AA0BT,eAAM,MAAI,CACD,WAAU,CAAG;AA3B7B,AA4BQ,wBA5BM,iBAAiB,AAAC,OAAkB,KAAK,MAAmB,CA4B3D;AACP,aAAG,YAAY,EAAI,YAAU,CAAC;QAClC;AA5BM,AAuCV,aAvCiB,CAAA,CAAC,eAAc,YAAY,CAAC,AAAC;AA6B1C,aAAG,CAAH,UAAK,OAAM,CAAG,CAAA,MAAK,CAAG;AAClB,AAAI,cAAA,CAAA,MAAK,CAAC;AACV,gBAAS,GAAA,CAAA,CAAA,EAAI,EAAA,CAAG,CAAA,CAAA,EAAI,CAAA,IAAG,YAAY,OAAO,CAAG,CAAA,CAAA,EAAE,CAAG;AAC9C,AAAI,gBAAA,CAAA,IAAG,EAAI,CAAA,IAAG,YAAY,CAAE,CAAA,CAAC,KAAK,AAAC,CAAC,OAAM,CAAG,OAAK,CAAC,CAAC;AACpD,iBAAI,SAAQ,AAAC,CAAC,IAAG,CAAC;AACd,qBAAK,EAAI,KAAG,CAAC;AAAA,YACrB;AAAA,AACA,iBAAO,OAAK,CAAC;UACjB;AACA,cAAI,CAAJ,UAAM,OAAM,CAAG;AAAE,iBAAO,CAAA,OAAM,WAAW,AAAC,CAAC,IAAG,CAAC,CAAC;UAAE;AAAA,aArCY,SAAO,CAAC,CAAC;MACnE,AAAC,CAsBkB,GAAE,CAtBF,CAJS,CAAA;AAApC,cAAQ,AAAC,gBAAqC,CAAA;AAA9C,oBAAA,SAAS,QAAO;AA0CT,eAAM,YAAU,CACP,SAAQ,CAAG,CAAA,OAAM,CAAG,CAAA,QAAO,CAAG;AA3C9C,AA4CQ,wBA5CM,iBAAiB,AAAC,aAAkB,KAAK,MAAmB,CA4C3D;AACP,aAAG,UAAU,EAAI,UAAQ,CAAC;AAC1B,aAAG,QAAQ,EAAI,QAAM,CAAC;AACtB,aAAG,SAAS,EAAI,SAAO,CAAC;QAC5B;AA9CM,AAwDV,aAxDiB,CAAA,CAAC,eAAc,YAAY,CAAC,AAAC;AA+C1C,aAAG,CAAH,UAAK,OAAM,CAAG,CAAA,MAAK,CAAG;AAClB,eAAI,IAAG,UAAU,KAAK,AAAC,CAAC,OAAM,CAAG,OAAK,CAAC,CAAG;AACtC,mBAAO,CAAA,IAAG,QAAQ,KAAK,AAAC,CAAC,OAAM,CAAG,OAAK,CAAC,CAAC;YAC7C,KACK;AACD,mBAAO,CAAA,IAAG,SAAS,KAAK,AAAC,CAAC,OAAM,CAAG,OAAK,CAAC,CAAC;YAC9C;AAAA,UACJ;AACA,cAAI,CAAJ,UAAM,OAAM,CAAG;AAAE,iBAAO,CAAA,OAAM,iBAAiB,AAAC,CAAC,IAAG,CAAC,CAAC;UAAE;AAAA,aAtDM,SAAO,CAAC,CAAC;MACnE,AAAC,CAsCwB,GAAE,CAtCR,CAJS,CAAA;AAApC,cAAQ,AAAC,4BAAqC,CAAA;AAA9C,qBAAA,SAAS,QAAO;AA2DT,eAAM,aAAW,CACR,QAAO,CAAG,CAAA,IAAG,CAAG,CAAA,MAAK,CAAG,CAAA,MAAK,CAAG;AA5DhD,AA6DQ,wBA7DM,iBAAiB,AAAC,cAAkB,KAAK,MAAmB,CA6D3D;AACP,aAAG,SAAS,EAAI,SAAO,CAAC;AACxB,aAAG,KAAK,EAAI,KAAG,CAAC;AAChB,aAAG,OAAO,EAAI,OAAK,CAAC;AACpB,aAAG,OAAO,EAAI,OAAK,CAAC;QACxB;AAhEM,AAuFV,aAvFiB,CAAA,CAAC,eAAc,YAAY,CAAC,AAAC;AAiE1C,aAAG,CAAH,UAAK,OAAM,CAAG,CAAA,MAAK,CAAG;AAClB,eAAI,IAAG,SAAS,WAAa,iBAAe,CAAA,EAAK,CAAA,SAAQ,AAAC,CAAC,MAAK,CAAC,CAAA,EAC7D,CAAA,MAAK,SAAS,AAAC,CAAC,IAAG,KAAK,CAAC,CAAG;AAC5B,mBAAO,CAAA,MAAK,IAAI,AAAC,CAAC,IAAG,KAAK,CAAC,CAAC;YAChC,KACK;AACD,AAAI,gBAAA,CAAA,iBAAgB,EAAI,CAAA,IAAG,SAAS,KAAK,AAAC,CAAC,OAAM,CAAG,OAAK,CAAC,CAAC;AAC3D,mBAAO,CAAA,IAAG,OAAO,AAAC,CAAC,iBAAgB,CAAC,CAAC;YACzC;AAAA,UACJ;AACA,YAAI,aAAW,EAAI;AAAE,iBAAO,KAAG,CAAC;UAAE;AAClC,eAAK,CAAL,UAAO,OAAM,CAAG,CAAA,MAAK,CAAG,CAAA,KAAI,CAAG;AAC3B,AAAI,cAAA,CAAA,gBAAe,EAAI,CAAA,IAAG,SAAS,KAAK,AAAC,CAAC,OAAM,CAAG,OAAK,CAAC,CAAC;AAC1D,eAAI,IAAG,SAAS,WAAa,iBAAe,CAAA,EAAK,CAAA,SAAQ,AAAC,CAAC,MAAK,CAAC,CAAA,EAC7D,CAAA,MAAK,SAAS,AAAC,CAAC,IAAG,KAAK,CAAC,CAAG;AAC5B,kBAAM,IAAI,cAAY,AAAC,EAAC,qCAAqC,EAAC,CAAA,IAAG,KAAK,EAAG,CAAC;YAC9E,KACK;AACD,mBAAO,CAAA,IAAG,OAAO,AAAC,CAAC,gBAAe,CAAG,MAAI,CAAC,CAAC;YAC/C;AAAA,UACJ;AACA,cAAI,CAAJ,UAAM,OAAM,CAAG;AAAE,iBAAO,CAAA,OAAM,kBAAkB,AAAC,CAAC,IAAG,CAAC,CAAC;UAAE;AAAA,aArFK,SAAO,CAAC,CAAC;MACnE,AAAC,CAuDyB,GAAE,CAvDT,CAJS,CAAA;AAApC,cAAQ,AAAC,8BAAqC,CAAA;AAA9C,oBAAA,SAAS,QAAO;AA0FT,eAAM,YAAU,CACP,GAAE,CAAG,CAAA,GAAE,CAAG;AA3F1B,AA4FQ,wBA5FM,iBAAiB,AAAC,aAAkB,KAAK,MAAmB,CA4F3D;AACP,aAAG,IAAI,EAAI,IAAE,CAAC;AACd,aAAG,IAAI,EAAI,IAAE,CAAC;QAClB;AA7FM,AA2GV,aA3GiB,CAAA,CAAC,eAAc,YAAY,CAAC,AAAC;AA8F1C,aAAG,CAAH,UAAK,OAAM,CAAG,CAAA,MAAK,CAAG;AAClB,AAAI,cAAA,CAAA,GAAE,EAAI,CAAA,IAAG,IAAI,KAAK,AAAC,CAAC,OAAM,CAAG,OAAK,CAAC,CAAC;AACxC,AAAI,cAAA,CAAA,GAAE,EAAI,CAAA,IAAG,IAAI,KAAK,AAAC,CAAC,OAAM,CAAG,OAAK,CAAC,CAAC;AACxC,iBAAO,CAAA,GAAE,CAAE,GAAE,CAAC,CAAC;UACnB;AACA,YAAI,aAAW,EAAI;AAAE,iBAAO,KAAG,CAAC;UAAE;AAClC,eAAK,CAAL,UAAO,OAAM,CAAG,CAAA,MAAK,CAAG,CAAA,KAAI,CAAG;AAC3B,AAAI,cAAA,CAAA,GAAE,EAAI,CAAA,IAAG,IAAI,KAAK,AAAC,CAAC,OAAM,CAAG,OAAK,CAAC,CAAC;AACxC,AAAI,cAAA,CAAA,GAAE,EAAI,CAAA,IAAG,IAAI,KAAK,AAAC,CAAC,OAAM,CAAG,OAAK,CAAC,CAAC;AACxC,cAAE,CAAE,GAAE,CAAC,EAAI,MAAI,CAAC;AAChB,iBAAO,MAAI,CAAC;UAChB;AACA,cAAI,CAAJ,UAAM,OAAM,CAAG;AAAE,iBAAO,CAAA,OAAM,iBAAiB,AAAC,CAAC,IAAG,CAAC,CAAC;UAAE;AAAA,aAzGM,SAAO,CAAC,CAAC;MACnE,AAAC,CAsFwB,GAAE,CAtFR,CAJS,CAAA;AAApC,cAAQ,AAAC,4BAAqC,CAAA;AAA9C,aAAA,SAAS,QAAO;AA8GT,eAAM,KAAG,CACA,GAAE,CAAG,CAAA,IAAG,CAAG,CAAA,IAAG,CAAG,CAAA,SAAQ,CAAG;AA/G5C,AAgHQ,wBAhHM,iBAAiB,AAAC,MAAkB,KAAK,MAAmB,CAgH3D;AACP,aAAG,IAAI,EAAI,IAAE,CAAC;AACd,aAAG,KAAK,EAAI,KAAG,CAAC;AAChB,aAAG,KAAK,EAAI,KAAG,CAAC;AAChB,aAAG,UAAU,EAAI,UAAQ,CAAC;QAC9B;AAnHM,AAqHV,aArHiB,CAAA,CAAC,eAAc,YAAY,CAAC,AAAC,QAoH1C,KAAI,CAAJ,UAAM,OAAM,CAAG;AAAE,iBAAO,CAAA,OAAM,UAAU,AAAC,CAAC,IAAG,CAAC,CAAC;UAAE,MAnHa,SAAO,CAAC,CAAC;MACnE,AAAC,CA0GiB,GAAE,CA1GD,CAJS,CAAA;AAApC,cAAQ,AAAC,cAAqC,CAAA;AAA9C,yBAAA,SAAS,QAAO;AAwHT,eAAM,iBAAe,CACZ,KAAI,CAAG;AAzHvB,AA0HQ,wBA1HM,iBAAiB,AAAC,kBAAkB,KAAK,MAAmB,CA0H3D;AACP,aAAG,MAAM,EAAI,MAAI,CAAC;QACtB;AA1HM,AA6HV,aA7HiB,CAAA,CAAC,eAAc,YAAY,CAAC,AAAC;AA2H1C,aAAG,CAAH,UAAK,OAAM,CAAG,CAAA,MAAK,CAAG;AAAE,iBAAO,CAAA,IAAG,MAAM,CAAC;UAAE;AAC3C,cAAI,CAAJ,UAAM,OAAM,CAAG;AAAE,iBAAO,CAAA,OAAM,sBAAsB,AAAC,CAAC,IAAG,CAAC,CAAC;UAAE;AAAA,aA3HC,SAAO,CAAC,CAAC;MACnE,AAAC,CAoH6B,GAAE,CApHb,CAJS,CAAA;AAApC,cAAQ,AAAC,sCAAqC,CAAA;AAA9C,qBAAA,SAAS,QAAO;AAgIT,eAAM,aAAW,CACR,WAAU,CAAG;AAjI7B,AAkIQ,wBAlIM,iBAAiB,AAAC,cAAkB,KAAK,MAAmB,CAkI3D;AACP,aAAG,YAAY,EAAI,YAAU,CAAC;QAClC;AAlIM,AAuIV,aAvIiB,CAAA,CAAC,eAAc,YAAY,CAAC,AAAC;AAmI1C,aAAG,CAAH,UAAK,OAAM,CAAG,CAAA,MAAK;AACf,iBAAO,CAAA,WAAU,IAAI,AAAC,CAAC,IAAG,YAAY,GAAG,SAAC,CAAA;mBAAM,CAAA,CAAA,KAAK,AAAC,CAAC,OAAM,CAAG,OAAK,CAAC;YAAA,EAAC,CAAC;UAC5E;AACA,cAAI,CAAJ,UAAM,OAAM,CAAG;AAAE,iBAAO,CAAA,OAAM,kBAAkB,AAAC,CAAC,IAAG,CAAC,CAAC;UAAE;AAAA,aArIK,SAAO,CAAC,CAAC;MACnE,AAAC,CA4HyB,GAAE,CA5HT,CAJS,CAAA;AAApC,cAAQ,AAAC,8BAAqC,CAAA;AAA9C,mBAAA,SAAS,QAAO;AA0IT,eAAM,WAAS,CACN,IAAG,CAAG,CAAA,MAAK,CAAG;AA3I9B,AA4IQ,wBA5IM,iBAAiB,AAAC,YAAkB,KAAK,MAAmB,CA4I3D;AACP,aAAG,KAAK,EAAI,KAAG,CAAC;AAChB,aAAG,OAAO,EAAI,OAAK,CAAC;QACxB;AA7IM,AAsJV,aAtJiB,CAAA,CAAC,eAAc,YAAY,CAAC,AAAC;AA8I1C,aAAG,CAAH,UAAK,OAAM,CAAG,CAAA,MAAK,CAAG;AAClB,AAAI,cAAA,CAAA,GAAE,EAAI,CAAA,gBAAe,OAAO,AAAC,EAAC,CAAC;AACnC,gBAAS,GAAA,CAAA,CAAA,EAAI,EAAA,CAAG,CAAA,CAAA,EAAI,CAAA,IAAG,KAAK,OAAO,CAAG,GAAE,CAAA,CAAG;AACvC,6BAAe,IAAI,AAAC,CAAC,GAAE,CAAG,CAAA,IAAG,KAAK,CAAE,CAAA,CAAC,CAAG,CAAA,IAAG,OAAO,CAAE,CAAA,CAAC,KAAK,AAAC,CAAC,OAAM,CAAG,OAAK,CAAC,CAAC,CAAC;YACjF;AAAA,AACA,iBAAO,IAAE,CAAC;UACd;AACA,cAAI,CAAJ,UAAM,OAAM,CAAG;AAAE,iBAAO,CAAA,OAAM,gBAAgB,AAAC,CAAC,IAAG,CAAC,CAAC;UAAE;AAAA,aApJO,SAAO,CAAC,CAAC;MACnE,AAAC,CAsIuB,GAAE,CAtIP,CAJS,CAAA;AAApC,cAAQ,AAAC,0BAAqC,CAAA;AAA9C,sBAAA,SAAS,QAAO;AAyJT,eAAM,cAAY,CACT,OAAM,CAAG,CAAA,WAAU,CAAG;AA1JtC,AA2JQ,wBA3JM,iBAAiB,AAAC,eAAkB,KAAK,MAAmB,CA2J3D;AACP,aAAG,QAAQ,EAAI,QAAM,CAAC;AACtB,aAAG,YAAY,EAAI,YAAU,CAAC;QAClC;AA5JM,AA+JV,aA/JiB,CAAA,CAAC,eAAc,YAAY,CAAC,AAAC;AA6J1C,aAAG,CAAH,UAAK,OAAM,CAAG,CAAA,MAAK,CAAG;AAAE,gBAAM,IAAI,cAAY,AAAC,CAAC,8CAA6C,CAAC,CAAC;UAAE;AACjG,cAAI,CAAJ,UAAM,OAAM,CAAG;AAAE,kBAAM,mBAAmB,AAAC,CAAC,IAAG,CAAC,CAAC;UAAE;AAAA,aA7JW,SAAO,CAAC,CAAC;MACnE,AAAC,CAqJ0B,GAAE,CArJV,CAJS,CAAA;AAApC,cAAQ,AAAC,gCAAqC,CAAA;AAA9C,eAAA,SAAS,QAAO;AAkKT,eAAM,OAAK,CACF,SAAQ,CAAG,CAAA,IAAG,CAAG,CAAA,KAAI,CAAG;AAnKxC,AAoKQ,wBApKM,iBAAiB,AAAC,QAAkB,KAAK,MAAmB,CAoK3D;AACP,aAAG,UAAU,EAAI,UAAQ,CAAC;AAC1B,aAAG,KAAK,EAAI,KAAG,CAAC;AAChB,aAAG,MAAM,EAAI,MAAI,CAAC;QACtB;AAtKM,AAmNV,aAnNiB,CAAA,CAAC,eAAc,YAAY,CAAC,AAAC;AAuK1C,aAAG,CAAH,UAAK,OAAM,CAAG,CAAA,MAAK,CAAG;AAClB,AAAI,cAAA,CAAA,IAAG,EAAI,CAAA,IAAG,KAAK,KAAK,AAAC,CAAC,OAAM,CAAG,OAAK,CAAC,CAAC;AAC1C,mBAAQ,IAAG,UAAU;AACjB,iBAAK,KAAG;AACJ,qBAAO,CAAA,IAAG,GAAK,CAAA,IAAG,MAAM,KAAK,AAAC,CAAC,OAAM,CAAG,OAAK,CAAC,CAAC;AAAA,AACnD,iBAAK,KAAG;AACJ,qBAAO,CAAA,IAAG,GAAK,CAAA,IAAG,MAAM,KAAK,AAAC,CAAC,OAAM,CAAG,OAAK,CAAC,CAAC;AAAA,YACvD;AACA,AAAI,cAAA,CAAA,KAAI,EAAI,CAAA,IAAG,MAAM,KAAK,AAAC,CAAC,OAAM,CAAG,OAAK,CAAC,CAAC;AAC5C,mBAAQ,IAAG,UAAU;AACjB,iBAAK,IAAE;AACH,qBAAO,CAAA,IAAG,EAAI,MAAI,CAAC;AAAA,AACvB,iBAAK,IAAE;AACH,qBAAO,CAAA,IAAG,EAAI,MAAI,CAAC;AAAA,AACvB,iBAAK,IAAE;AACH,qBAAO,CAAA,IAAG,EAAI,MAAI,CAAC;AAAA,AACvB,iBAAK,IAAE;AACH,qBAAO,CAAA,IAAG,EAAI,MAAI,CAAC;AAAA,AACvB,iBAAK,IAAE;AACH,qBAAO,CAAA,IAAG,EAAI,MAAI,CAAC;AAAA,AACvB,iBAAK,KAAG;AACJ,qBAAO,CAAA,IAAG,GAAK,MAAI,CAAC;AAAA,AACxB,iBAAK,KAAG;AACJ,qBAAO,CAAA,IAAG,GAAK,MAAI,CAAC;AAAA,AACxB,iBAAK,MAAI;AACL,qBAAO,CAAA,IAAG,IAAM,MAAI,CAAC;AAAA,AACzB,iBAAK,MAAI;AACL,qBAAO,CAAA,IAAG,IAAM,MAAI,CAAC;AAAA,AACzB,iBAAK,IAAE;AACH,qBAAO,CAAA,IAAG,EAAI,MAAI,CAAC;AAAA,AACvB,iBAAK,IAAE;AACH,qBAAO,CAAA,IAAG,EAAI,MAAI,CAAC;AAAA,AACvB,iBAAK,KAAG;AACJ,qBAAO,CAAA,IAAG,GAAK,MAAI,CAAC;AAAA,AACxB,iBAAK,KAAG;AACJ,qBAAO,CAAA,IAAG,GAAK,MAAI,CAAC;AAAA,AACxB,iBAAK,IAAE;AACH,qBAAO,CAAA,IAAG,EAAI,MAAI,CAAC;AAAA,AACvB,iBAAK,IAAE;AACH,qBAAO,CAAA,IAAG,EAAI,MAAI,CAAC;AAAA,YAC3B;AACA,gBAAM,0CAAwC,CAAC;UACnD;AACA,cAAI,CAAJ,UAAM,OAAM,CAAG;AAAE,iBAAO,CAAA,OAAM,YAAY,AAAC,CAAC,IAAG,CAAC,CAAC;UAAE;AAAA,aAjNW,SAAO,CAAC,CAAC;MACnE,AAAC,CA8JmB,GAAE,CA9JH,CAJS,CAAA;AAApC,cAAQ,AAAC,kBAAqC,CAAA;AAA9C,kBAAA,SAAS,QAAO;AAsNT,eAAM,UAAQ,CACL,UAAS,CAAG;AAvN5B,AAwNQ,wBAxNM,iBAAiB,AAAC,WAAkB,KAAK,MAAmB,CAwN3D;AACP,aAAG,WAAW,EAAI,WAAS,CAAC;QAChC;AAxNM,AA2NV,aA3NiB,CAAA,CAAC,eAAc,YAAY,CAAC,AAAC;AAyN1C,aAAG,CAAH,UAAK,OAAM,CAAG,CAAA,MAAK,CAAG;AAAE,iBAAO,EAAC,IAAG,WAAW,KAAK,AAAC,CAAC,OAAM,CAAG,OAAK,CAAC,CAAC;UAAE;AACvE,cAAI,CAAJ,UAAM,OAAM,CAAG;AAAE,iBAAO,CAAA,OAAM,eAAe,AAAC,CAAC,IAAG,CAAC,CAAC;UAAE;AAAA,aAzNQ,SAAO,CAAC,CAAC;MACnE,AAAC,CAkNsB,GAAE,CAlNN,CAJS,CAAA;AAApC,cAAQ,AAAC,wBAAqC,CAAA;AAA9C,mBAAA,SAAS,QAAO;AA8NT,eAAM,WAAS,CACN,MAAK,CAAG,CAAA,KAAI,CAAG;AA/N/B,AAgOQ,wBAhOM,iBAAiB,AAAC,YAAkB,KAAK,MAAmB,CAgO3D;AACP,aAAG,OAAO,EAAI,OAAK,CAAC;AACpB,aAAG,MAAM,EAAI,MAAI,CAAC;QACtB;AAjOM,AAsOV,aAtOiB,CAAA,CAAC,eAAc,YAAY,CAAC,AAAC;AAkO1C,aAAG,CAAH,UAAK,OAAM,CAAG,CAAA,MAAK,CAAG;AAClB,iBAAO,CAAA,IAAG,OAAO,OAAO,AAAC,CAAC,OAAM,CAAG,OAAK,CAAG,CAAA,IAAG,MAAM,KAAK,AAAC,CAAC,OAAM,CAAG,OAAK,CAAC,CAAC,CAAC;UAChF;AACA,cAAI,CAAJ,UAAM,OAAM,CAAG;AAAE,iBAAO,CAAA,OAAM,gBAAgB,AAAC,CAAC,IAAG,CAAC,CAAC;UAAE;AAAA,aApOO,SAAO,CAAC,CAAC;MACnE,AAAC,CA0NuB,GAAE,CA1NP,CAJS,CAAA;AAApC,cAAQ,AAAC,0BAAqC,CAAA;AAA9C,mBAAA,SAAS,QAAO;AAyOT,eAAM,WAAS,CACN,QAAO,CAAG,CAAA,IAAG,CAAG,CAAA,EAAC,CAAG,CAAA,IAAG,CAAG;AA1O1C,AA2OQ,wBA3OM,iBAAiB,AAAC,YAAkB,KAAK,MAAmB,CA2O3D;AACP,aAAG,SAAS,EAAI,SAAO,CAAC;AACxB,aAAG,KAAK,EAAI,KAAG,CAAC;AAChB,aAAG,GAAG,EAAI,GAAC,CAAC;AACZ,aAAG,KAAK,EAAI,KAAG,CAAC;QACpB;AA9OM,AA4PV,aA5PiB,CAAA,CAAC,eAAc,YAAY,CAAC,AAAC;AA+O1C,aAAG,CAAH,UAAK,OAAM,CAAG,CAAA,MAAK,CAAG;AAClB,AAAI,cAAA,CAAA,aAAY,EAAI,CAAA,QAAO,AAAC,CAAC,OAAM,CAAG,OAAK,CAAG,CAAA,IAAG,KAAK,CAAC,CAAC;AACxD,eAAI,IAAG,SAAS,WAAa,iBAAe,CAAA,EAAK,CAAA,SAAQ,AAAC,CAAC,MAAK,CAAC,CAAA,EAC7D,CAAA,MAAK,SAAS,AAAC,CAAC,IAAG,KAAK,CAAC,CAAG;AAC5B,AAAI,gBAAA,CAAA,EAAC,EAAI,CAAA,MAAK,IAAI,AAAC,CAAC,IAAG,KAAK,CAAC,CAAC;AAC9B,mBAAO,CAAA,eAAc,MAAM,AAAC,CAAC,EAAC,CAAG,cAAY,CAAC,CAAC;YACnD,KACK;AACD,AAAI,gBAAA,CAAA,iBAAgB,EAAI,CAAA,IAAG,SAAS,KAAK,AAAC,CAAC,OAAM,CAAG,OAAK,CAAC,CAAC;AAC3D,mBAAO,CAAA,IAAG,GAAG,AAAC,CAAC,iBAAgB,CAAG,cAAY,CAAC,CAAC;YACpD;AAAA,UACJ;AACA,cAAI,CAAJ,UAAM,OAAM,CAAG;AAAE,iBAAO,CAAA,OAAM,gBAAgB,AAAC,CAAC,IAAG,CAAC,CAAC;UAAE;AAAA,aA1PO,SAAO,CAAC,CAAC;MACnE,AAAC,CAqOuB,GAAE,CArOP,CAJS,CAAA;AAApC,cAAQ,AAAC,0BAAqC,CAAA;AAA9C,qBAAA,SAAS,QAAO;AA+PT,eAAM,aAAW,CACR,MAAK,CAAG,CAAA,IAAG,CAAG;AAhQ9B,AAiQQ,wBAjQM,iBAAiB,AAAC,cAAkB,KAAK,MAAmB,CAiQ3D;AACP,aAAG,OAAO,EAAI,OAAK,CAAC;AACpB,aAAG,KAAK,EAAI,KAAG,CAAC;QACpB;AAlQM,AA2QV,aA3QiB,CAAA,CAAC,eAAc,YAAY,CAAC,AAAC;AAmQ1C,aAAG,CAAH,UAAK,OAAM,CAAG,CAAA,MAAK,CAAG;AAClB,AAAI,cAAA,CAAA,GAAE,EAAI,CAAA,IAAG,OAAO,KAAK,AAAC,CAAC,OAAM,CAAG,OAAK,CAAC,CAAC;AAC3C,eAAI,CAAC,CAAC,GAAE,WAAa,SAAO,CAAC,CAAG;AAC5B,kBAAM,IAAI,cAAY,AAAC,EAAI,GAAE,EAAC,qBAAmB,EAAC,CAAC;YACvD;AAAA,AACA,iBAAO,CAAA,eAAc,MAAM,AAAC,CAAC,GAAE,CAAG,CAAA,QAAO,AAAC,CAAC,OAAM,CAAG,OAAK,CAAG,CAAA,IAAG,KAAK,CAAC,CAAC,CAAC;UAC3E;AACA,cAAI,CAAJ,UAAM,OAAM,CAAG;AAAE,iBAAO,CAAA,OAAM,kBAAkB,AAAC,CAAC,IAAG,CAAC,CAAC;UAAE;AAAA,aAzQK,SAAO,CAAC,CAAC;MACnE,AAAC,CA2PyB,GAAE,CA3PT,CAJS,CAAA;AAApC,cAAQ,AAAC,8BAAqC,CAAA;AAA9C,sBAAA,SAAS,QAAO;AA8QT,eAAM,cAAY,CACT,GAAE,CAAG,CAAA,MAAK,CAAG,CAAA,QAAO,CAAG;AA/QvC,AAgRQ,wBAhRM,iBAAiB,AAAC,eAAkB,KAAK,MAAmB,CAgR3D;AACP,aAAG,IAAI,EAAI,IAAE,CAAC;AACd,aAAG,OAAO,EAAI,OAAK,CAAC;AACpB,aAAG,SAAS,EAAI,SAAO,CAAC;QAC5B;AAlRM,AAwRV,aAxRiB,CAAA,CAAC,eAAc,YAAY,CAAC,AAAC;AAmR1C,aAAG,CAAH,UAAK,OAAM,CAAG,CAAA,MAAK,CAAG;AAAE,iBAAO,CAAA,IAAG,IAAI,KAAK,AAAC,CAAC,OAAM,CAAG,OAAK,CAAC,CAAC;UAAE;AAC/D,YAAI,aAAW,EAAI;AAAE,iBAAO,CAAA,IAAG,IAAI,aAAa,CAAC;UAAE;AACnD,eAAK,CAAL,UAAO,OAAM,CAAG,CAAA,MAAK,CAAG,CAAA,KAAI,CAAG;AAAE,iBAAO,CAAA,IAAG,IAAI,OAAO,AAAC,CAAC,OAAM,CAAG,OAAK,CAAG,MAAI,CAAC,CAAC;UAAE;AACjF,cAAI,CAAJ,UAAM,OAAM,CAAG;AAAE,iBAAO,CAAA,IAAG,IAAI,MAAM,AAAC,CAAC,OAAM,CAAC,CAAC;UAAE;AACjD,iBAAO,CAAP,UAAQ,AAAC,CAAE;AAAE,mBAAU,IAAG,OAAO,EAAC,OAAM,EAAC,CAAA,IAAG,SAAS,EAAG;UAAE;AAAA,aAtRI,SAAO,CAAC,CAAC;MACnE,AAAC,CA0Q0B,GAAE,CA1QV,CAJS,CAAA;AAApC,cAAQ,AAAC,gCAAqC,CAAA;AAA9C,wBAAA,SAAQ,AAAC,CAAE;AA2RJ,eAAM,gBAAc,CACX,GAAE,CAAG,CAAA,QAAO,CAAG,CAAA,IAAG,CAAG,CAAA,UAAS,CAAG;AACzC,aAAG,IAAI,EAAI,IAAE,CAAC;AACd,aAAG,SAAS,EAAI,SAAO,CAAC;AACxB,aAAG,KAAK,EAAI,KAAG,CAAC;AAChB,aAAG,WAAW,EAAI,WAAS,CAAC;QAChC;AA/RM,AAgSV,aAhSiB,CAAA,CAAC,eAAc,YAAY,CAAC,AAAC,yBACkB,CAAC;MACzD,AAAC,EAAC,CAJ0B,CAAA;AAApC,cAAQ,AAAC,oCAAqC,CAAA;AAA9C,mBAAA,SAAQ,AAAC;AAoSF,eAAM,WAAS,KAetB;AAjTU,aAAO,CAAA,CAAC,eAAc,YAAY,CAAC,AAAC;AAmS1C,0BAAgB,CAAhB,UAAkB,GAAE,CAAG,GAAE;AACzB,wBAAc,CAAd,UAAgB,GAAE,CAAG,GAAE;AACvB,oBAAU,CAAV,UAAY,GAAE,CAAG,GAAE;AACnB,mBAAS,CAAT,UAAW,GAAE,CAAG,GAAE;AAClB,yBAAe,CAAf,UAAiB,GAAE,CAAG,GAAE;AACxB,kBAAQ,CAAR,UAAU,GAAE,CAAG,GAAE;AACjB,0BAAgB,CAAhB,UAAkB,GAAE,CAAG,GAAE;AACzB,8BAAoB,CAApB,UAAsB,GAAE,CAAG,GAAE;AAC7B,yBAAe,CAAf,UAAiB,GAAE,CAAG,GAAE;AACxB,0BAAgB,CAAhB,UAAkB,GAAE,CAAG,GAAE;AACzB,wBAAc,CAAd,UAAgB,GAAE,CAAG,GAAE;AACvB,8BAAoB,CAApB,UAAsB,GAAE,CAAG,GAAE;AAC7B,wBAAc,CAAd,UAAgB,GAAE,CAAG,GAAE;AACvB,uBAAa,CAAb,UAAe,GAAE,CAAG,GAAE;AAAA,aA/SsC,CAAC;MACzD,AAAC,EAAC,CAJ0B,CAAA;AAApC,cAAQ,AAAC,0BAAqC,CAAA;AAA9C,uBAAA,SAAQ,AAAC;AAoTF,eAAM,eAAa,KAqC1B;AAvVU,aAAO,CAAA,CAAC,eAAc,YAAY,CAAC,AAAC;AAmT1C,8BAAoB,CAApB,UAAsB,GAAE,CAAG;AAAE,iBAAO,IAAE,CAAC;UAAE;AACzC,2BAAiB,CAAjB,UAAmB,GAAE,CAAG;AACpB,iBAAO,IAAI,cAAY,AAAC,CAAC,GAAE,QAAQ,CAAG,CAAA,IAAG,SAAS,AAAC,CAAC,GAAE,YAAY,CAAC,CAAC,CAAC;UACzE;AACA,8BAAoB,CAApB,UAAsB,GAAE,CAAG;AAAE,iBAAO,IAAI,iBAAe,AAAC,CAAC,GAAE,MAAM,CAAC,CAAC;UAAE;AACrE,0BAAgB,CAAhB,UAAkB,GAAE,CAAG;AACnB,iBAAO,IAAI,aAAW,AAAC,CAAC,GAAE,SAAS,MAAM,AAAC,CAAC,IAAG,CAAC,CAAG,CAAA,GAAE,KAAK,CAAG,CAAA,GAAE,OAAO,CAAG,CAAA,GAAE,OAAO,CAAC,CAAC;UACvF;AACA,wBAAc,CAAd,UAAgB,GAAE,CAAG;AACjB,iBAAO,IAAI,WAAS,AAAC,CAAC,GAAE,SAAS,MAAM,AAAC,CAAC,IAAG,CAAC,CAAG,CAAA,GAAE,KAAK,CAAG,CAAA,GAAE,GAAG,CAAG,CAAA,IAAG,SAAS,AAAC,CAAC,GAAE,KAAK,CAAC,CAAC,CAAC;UAC9F;AACA,0BAAgB,CAAhB,UAAkB,GAAE,CAAG;AACnB,iBAAO,IAAI,aAAW,AAAC,CAAC,GAAE,OAAO,MAAM,AAAC,CAAC,IAAG,CAAC,CAAG,CAAA,IAAG,SAAS,AAAC,CAAC,GAAE,KAAK,CAAC,CAAC,CAAC;UAC5E;AACA,0BAAgB,CAAhB,UAAkB,GAAE,CAAG;AAAE,iBAAO,IAAI,aAAW,AAAC,CAAC,IAAG,SAAS,AAAC,CAAC,GAAE,YAAY,CAAC,CAAC,CAAC;UAAE;AAClF,wBAAc,CAAd,UAAgB,GAAE,CAAG;AAAE,iBAAO,IAAI,WAAS,AAAC,CAAC,GAAE,KAAK,CAAG,CAAA,IAAG,SAAS,AAAC,CAAC,GAAE,OAAO,CAAC,CAAC,CAAC;UAAE;AACnF,oBAAU,CAAV,UAAY,GAAE,CAAG;AACb,iBAAO,IAAI,OAAK,AAAC,CAAC,GAAE,UAAU,CAAG,CAAA,GAAE,KAAK,MAAM,AAAC,CAAC,IAAG,CAAC,CAAG,CAAA,GAAE,MAAM,MAAM,AAAC,CAAC,IAAG,CAAC,CAAC,CAAC;UACjF;AACA,uBAAa,CAAb,UAAe,GAAE,CAAG;AAAE,iBAAO,IAAI,UAAQ,AAAC,CAAC,GAAE,WAAW,MAAM,AAAC,CAAC,IAAG,CAAC,CAAC,CAAC;UAAE;AACxE,yBAAe,CAAf,UAAiB,GAAE,CAAG;AAClB,iBAAO,IAAI,YAAU,AAAC,CAAC,GAAE,UAAU,MAAM,AAAC,CAAC,IAAG,CAAC,CAAG,CAAA,GAAE,QAAQ,MAAM,AAAC,CAAC,IAAG,CAAC,CAAG,CAAA,GAAE,SAAS,MAAM,AAAC,CAAC,IAAG,CAAC,CAAC,CAAC;UACxG;AACA,kBAAQ,CAAR,UAAU,GAAE,CAAG;AACX,iBAAO,IAAI,KAAG,AAAC,CAAC,GAAE,IAAI,MAAM,AAAC,CAAC,IAAG,CAAC,CAAG,CAAA,GAAE,KAAK,CAAG,CAAA,IAAG,SAAS,AAAC,CAAC,GAAE,KAAK,CAAC,CAAG,CAAA,GAAE,UAAU,CAAC,CAAC;UAC1F;AACA,yBAAe,CAAf,UAAiB,GAAE,CAAG;AAClB,iBAAO,IAAI,YAAU,AAAC,CAAC,GAAE,IAAI,MAAM,AAAC,CAAC,IAAG,CAAC,CAAG,CAAA,GAAE,IAAI,MAAM,AAAC,CAAC,IAAG,CAAC,CAAC,CAAC;UACpE;AACA,iBAAO,CAAP,UAAS,IAAG,CAAG;AACX,AAAI,cAAA,CAAA,GAAE,EAAI,CAAA,WAAU,gBAAgB,AAAC,CAAC,IAAG,OAAO,CAAC,CAAC;AAClD,gBAAS,GAAA,CAAA,CAAA,EAAI,EAAA,CAAG,CAAA,CAAA,EAAI,CAAA,IAAG,OAAO,CAAG,GAAE,CAAA,CAAG;AAClC,gBAAE,CAAE,CAAA,CAAC,EAAI,CAAA,IAAG,CAAE,CAAA,CAAC,MAAM,AAAC,CAAC,IAAG,CAAC,CAAC;YAChC;AAAA,AACA,iBAAO,IAAE,CAAC;UACd;AAAA,aArV4D,CAAC;MACzD,AAAC,EAAC,CAJ0B,CAAA;AAApC,cAAQ,AAAC,kCAAqC,CAAA;qBA0VzB,EACjB,EAAC,CACD,EAAC,CAAA,CAAC,CACF,EAAC,CAAA,CAAG,EAAA,CAAC,CACL,EAAC,CAAA,CAAG,EAAA,CAAG,EAAA,CAAC,CACR,EAAC,CAAA,CAAG,EAAA,CAAG,EAAA,CAAG,EAAA,CAAC,CACX,EAAC,CAAA,CAAG,EAAA,CAAG,EAAA,CAAG,EAAA,CAAG,EAAA,CAAC,CACd,EAAC,CAAA,CAAG,EAAA,CAAG,EAAA,CAAG,EAAA,CAAG,EAAA,CAAG,EAAA,CAAC,CACjB,EAAC,CAAA,CAAG,EAAA,CAAG,EAAA,CAAG,EAAA,CAAG,EAAA,CAAG,EAAA,CAAG,EAAA,CAAC,CACpB,EAAC,CAAA,CAAG,EAAA,CAAG,EAAA,CAAG,EAAA,CAAG,EAAA,CAAG,EAAA,CAAG,EAAA,CAAG,EAAA,CAAC,CACvB,EAAC,CAAA,CAAG,EAAA,CAAG,EAAA,CAAG,EAAA,CAAG,EAAA,CAAG,EAAA,CAAG,EAAA,CAAG,EAAA,CAAG,EAAA,CAAC,CAC1B,EAAC,CAAA,CAAG,EAAA,CAAG,EAAA,CAAG,EAAA,CAAG,EAAA,CAAG,EAAA,CAAG,EAAA,CAAG,EAAA,CAAG,EAAA,CAAC,CAC9B;IApW+B;EAC3B,CAAA;AADI,CAAC,CAAC;AAgXoB","file":"src/change_detection/parser/ast.js","sourceRoot":"/Users/yamaguchi/Desktop/mean-edge/node_modules/angular2/es6/dev/","sourcesContent":["import { isPresent, FunctionWrapper, BaseException } from \"angular2/src/facade/lang\";\r\nimport { ListWrapper, StringMapWrapper } from \"angular2/src/facade/collection\";\r\n// HACK: workaround for Traceur behavior.\r\n// It expects all transpiled modules to contain this marker.\r\n// TODO: remove this when we no longer use traceur\r\nexport var __esModule = true;\r\nexport class AST {\r\n    eval(context, locals) { throw new BaseException(\"Not supported\"); }\r\n    get isAssignable() { return false; }\r\n    assign(context, locals, value) { throw new BaseException(\"Not supported\"); }\r\n    visit(visitor) { return null; }\r\n    toString() { return \"AST\"; }\r\n}\r\nexport class EmptyExpr extends AST {\r\n    eval(context, locals) { return null; }\r\n    visit(visitor) {\r\n        // do nothing\r\n    }\r\n}\r\nexport class ImplicitReceiver extends AST {\r\n    eval(context, locals) { return context; }\r\n    visit(visitor) { return visitor.visitImplicitReceiver(this); }\r\n}\r\n/**\r\n * Multiple expressions separated by a semicolon.\r\n */\r\nexport class Chain extends AST {\r\n    constructor(expressions) {\r\n        super();\r\n        this.expressions = expressions;\r\n    }\r\n    eval(context, locals) {\r\n        var result;\r\n        for (var i = 0; i < this.expressions.length; i++) {\r\n            var last = this.expressions[i].eval(context, locals);\r\n            if (isPresent(last))\r\n                result = last;\r\n        }\r\n        return result;\r\n    }\r\n    visit(visitor) { return visitor.visitChain(this); }\r\n}\r\nexport class Conditional extends AST {\r\n    constructor(condition, trueExp, falseExp) {\r\n        super();\r\n        this.condition = condition;\r\n        this.trueExp = trueExp;\r\n        this.falseExp = falseExp;\r\n    }\r\n    eval(context, locals) {\r\n        if (this.condition.eval(context, locals)) {\r\n            return this.trueExp.eval(context, locals);\r\n        }\r\n        else {\r\n            return this.falseExp.eval(context, locals);\r\n        }\r\n    }\r\n    visit(visitor) { return visitor.visitConditional(this); }\r\n}\r\nexport class AccessMember extends AST {\r\n    constructor(receiver, name, getter, setter) {\r\n        super();\r\n        this.receiver = receiver;\r\n        this.name = name;\r\n        this.getter = getter;\r\n        this.setter = setter;\r\n    }\r\n    eval(context, locals) {\r\n        if (this.receiver instanceof ImplicitReceiver && isPresent(locals) &&\r\n            locals.contains(this.name)) {\r\n            return locals.get(this.name);\r\n        }\r\n        else {\r\n            var evaluatedReceiver = this.receiver.eval(context, locals);\r\n            return this.getter(evaluatedReceiver);\r\n        }\r\n    }\r\n    get isAssignable() { return true; }\r\n    assign(context, locals, value) {\r\n        var evaluatedContext = this.receiver.eval(context, locals);\r\n        if (this.receiver instanceof ImplicitReceiver && isPresent(locals) &&\r\n            locals.contains(this.name)) {\r\n            throw new BaseException(`Cannot reassign a variable binding ${this.name}`);\r\n        }\r\n        else {\r\n            return this.setter(evaluatedContext, value);\r\n        }\r\n    }\r\n    visit(visitor) { return visitor.visitAccessMember(this); }\r\n}\r\nexport class KeyedAccess extends AST {\r\n    constructor(obj, key) {\r\n        super();\r\n        this.obj = obj;\r\n        this.key = key;\r\n    }\r\n    eval(context, locals) {\r\n        var obj = this.obj.eval(context, locals);\r\n        var key = this.key.eval(context, locals);\r\n        return obj[key];\r\n    }\r\n    get isAssignable() { return true; }\r\n    assign(context, locals, value) {\r\n        var obj = this.obj.eval(context, locals);\r\n        var key = this.key.eval(context, locals);\r\n        obj[key] = value;\r\n        return value;\r\n    }\r\n    visit(visitor) { return visitor.visitKeyedAccess(this); }\r\n}\r\nexport class Pipe extends AST {\r\n    constructor(exp, name, args, inBinding) {\r\n        super();\r\n        this.exp = exp;\r\n        this.name = name;\r\n        this.args = args;\r\n        this.inBinding = inBinding;\r\n    }\r\n    visit(visitor) { return visitor.visitPipe(this); }\r\n}\r\nexport class LiteralPrimitive extends AST {\r\n    constructor(value) {\r\n        super();\r\n        this.value = value;\r\n    }\r\n    eval(context, locals) { return this.value; }\r\n    visit(visitor) { return visitor.visitLiteralPrimitive(this); }\r\n}\r\nexport class LiteralArray extends AST {\r\n    constructor(expressions) {\r\n        super();\r\n        this.expressions = expressions;\r\n    }\r\n    eval(context, locals) {\r\n        return ListWrapper.map(this.expressions, (e) => e.eval(context, locals));\r\n    }\r\n    visit(visitor) { return visitor.visitLiteralArray(this); }\r\n}\r\nexport class LiteralMap extends AST {\r\n    constructor(keys, values) {\r\n        super();\r\n        this.keys = keys;\r\n        this.values = values;\r\n    }\r\n    eval(context, locals) {\r\n        var res = StringMapWrapper.create();\r\n        for (var i = 0; i < this.keys.length; ++i) {\r\n            StringMapWrapper.set(res, this.keys[i], this.values[i].eval(context, locals));\r\n        }\r\n        return res;\r\n    }\r\n    visit(visitor) { return visitor.visitLiteralMap(this); }\r\n}\r\nexport class Interpolation extends AST {\r\n    constructor(strings, expressions) {\r\n        super();\r\n        this.strings = strings;\r\n        this.expressions = expressions;\r\n    }\r\n    eval(context, locals) { throw new BaseException(\"evaluating an Interpolation is not supported\"); }\r\n    visit(visitor) { visitor.visitInterpolation(this); }\r\n}\r\nexport class Binary extends AST {\r\n    constructor(operation, left, right) {\r\n        super();\r\n        this.operation = operation;\r\n        this.left = left;\r\n        this.right = right;\r\n    }\r\n    eval(context, locals) {\r\n        var left = this.left.eval(context, locals);\r\n        switch (this.operation) {\r\n            case '&&':\r\n                return left && this.right.eval(context, locals);\r\n            case '||':\r\n                return left || this.right.eval(context, locals);\r\n        }\r\n        var right = this.right.eval(context, locals);\r\n        switch (this.operation) {\r\n            case '+':\r\n                return left + right;\r\n            case '-':\r\n                return left - right;\r\n            case '*':\r\n                return left * right;\r\n            case '/':\r\n                return left / right;\r\n            case '%':\r\n                return left % right;\r\n            case '==':\r\n                return left == right;\r\n            case '!=':\r\n                return left != right;\r\n            case '===':\r\n                return left === right;\r\n            case '!==':\r\n                return left !== right;\r\n            case '<':\r\n                return left < right;\r\n            case '>':\r\n                return left > right;\r\n            case '<=':\r\n                return left <= right;\r\n            case '>=':\r\n                return left >= right;\r\n            case '^':\r\n                return left ^ right;\r\n            case '&':\r\n                return left & right;\r\n        }\r\n        throw 'Internal error [$operation] not handled';\r\n    }\r\n    visit(visitor) { return visitor.visitBinary(this); }\r\n}\r\nexport class PrefixNot extends AST {\r\n    constructor(expression) {\r\n        super();\r\n        this.expression = expression;\r\n    }\r\n    eval(context, locals) { return !this.expression.eval(context, locals); }\r\n    visit(visitor) { return visitor.visitPrefixNot(this); }\r\n}\r\nexport class Assignment extends AST {\r\n    constructor(target, value) {\r\n        super();\r\n        this.target = target;\r\n        this.value = value;\r\n    }\r\n    eval(context, locals) {\r\n        return this.target.assign(context, locals, this.value.eval(context, locals));\r\n    }\r\n    visit(visitor) { return visitor.visitAssignment(this); }\r\n}\r\nexport class MethodCall extends AST {\r\n    constructor(receiver, name, fn, args) {\r\n        super();\r\n        this.receiver = receiver;\r\n        this.name = name;\r\n        this.fn = fn;\r\n        this.args = args;\r\n    }\r\n    eval(context, locals) {\r\n        var evaluatedArgs = evalList(context, locals, this.args);\r\n        if (this.receiver instanceof ImplicitReceiver && isPresent(locals) &&\r\n            locals.contains(this.name)) {\r\n            var fn = locals.get(this.name);\r\n            return FunctionWrapper.apply(fn, evaluatedArgs);\r\n        }\r\n        else {\r\n            var evaluatedReceiver = this.receiver.eval(context, locals);\r\n            return this.fn(evaluatedReceiver, evaluatedArgs);\r\n        }\r\n    }\r\n    visit(visitor) { return visitor.visitMethodCall(this); }\r\n}\r\nexport class FunctionCall extends AST {\r\n    constructor(target, args) {\r\n        super();\r\n        this.target = target;\r\n        this.args = args;\r\n    }\r\n    eval(context, locals) {\r\n        var obj = this.target.eval(context, locals);\r\n        if (!(obj instanceof Function)) {\r\n            throw new BaseException(`${obj} is not a function`);\r\n        }\r\n        return FunctionWrapper.apply(obj, evalList(context, locals, this.args));\r\n    }\r\n    visit(visitor) { return visitor.visitFunctionCall(this); }\r\n}\r\nexport class ASTWithSource extends AST {\r\n    constructor(ast, source, location) {\r\n        super();\r\n        this.ast = ast;\r\n        this.source = source;\r\n        this.location = location;\r\n    }\r\n    eval(context, locals) { return this.ast.eval(context, locals); }\r\n    get isAssignable() { return this.ast.isAssignable; }\r\n    assign(context, locals, value) { return this.ast.assign(context, locals, value); }\r\n    visit(visitor) { return this.ast.visit(visitor); }\r\n    toString() { return `${this.source} in ${this.location}`; }\r\n}\r\nexport class TemplateBinding {\r\n    constructor(key, keyIsVar, name, expression) {\r\n        this.key = key;\r\n        this.keyIsVar = keyIsVar;\r\n        this.name = name;\r\n        this.expression = expression;\r\n    }\r\n}\r\n// INTERFACE\r\nexport class AstVisitor {\r\n    visitAccessMember(ast) { }\r\n    visitAssignment(ast) { }\r\n    visitBinary(ast) { }\r\n    visitChain(ast) { }\r\n    visitConditional(ast) { }\r\n    visitPipe(ast) { }\r\n    visitFunctionCall(ast) { }\r\n    visitImplicitReceiver(ast) { }\r\n    visitKeyedAccess(ast) { }\r\n    visitLiteralArray(ast) { }\r\n    visitLiteralMap(ast) { }\r\n    visitLiteralPrimitive(ast) { }\r\n    visitMethodCall(ast) { }\r\n    visitPrefixNot(ast) { }\r\n}\r\nexport class AstTransformer {\r\n    visitImplicitReceiver(ast) { return ast; }\r\n    visitInterpolation(ast) {\r\n        return new Interpolation(ast.strings, this.visitAll(ast.expressions));\r\n    }\r\n    visitLiteralPrimitive(ast) { return new LiteralPrimitive(ast.value); }\r\n    visitAccessMember(ast) {\r\n        return new AccessMember(ast.receiver.visit(this), ast.name, ast.getter, ast.setter);\r\n    }\r\n    visitMethodCall(ast) {\r\n        return new MethodCall(ast.receiver.visit(this), ast.name, ast.fn, this.visitAll(ast.args));\r\n    }\r\n    visitFunctionCall(ast) {\r\n        return new FunctionCall(ast.target.visit(this), this.visitAll(ast.args));\r\n    }\r\n    visitLiteralArray(ast) { return new LiteralArray(this.visitAll(ast.expressions)); }\r\n    visitLiteralMap(ast) { return new LiteralMap(ast.keys, this.visitAll(ast.values)); }\r\n    visitBinary(ast) {\r\n        return new Binary(ast.operation, ast.left.visit(this), ast.right.visit(this));\r\n    }\r\n    visitPrefixNot(ast) { return new PrefixNot(ast.expression.visit(this)); }\r\n    visitConditional(ast) {\r\n        return new Conditional(ast.condition.visit(this), ast.trueExp.visit(this), ast.falseExp.visit(this));\r\n    }\r\n    visitPipe(ast) {\r\n        return new Pipe(ast.exp.visit(this), ast.name, this.visitAll(ast.args), ast.inBinding);\r\n    }\r\n    visitKeyedAccess(ast) {\r\n        return new KeyedAccess(ast.obj.visit(this), ast.key.visit(this));\r\n    }\r\n    visitAll(asts) {\r\n        var res = ListWrapper.createFixedSize(asts.length);\r\n        for (var i = 0; i < asts.length; ++i) {\r\n            res[i] = asts[i].visit(this);\r\n        }\r\n        return res;\r\n    }\r\n}\r\nvar _evalListCache = [\r\n    [],\r\n    [0],\r\n    [0, 0],\r\n    [0, 0, 0],\r\n    [0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0]\r\n];\r\nfunction evalList(context, locals, exps) {\r\n    var length = exps.length;\r\n    if (length > 10) {\r\n        throw new BaseException(\"Cannot have more than 10 argument\");\r\n    }\r\n    var result = _evalListCache[length];\r\n    for (var i = 0; i < length; i++) {\r\n        result[i] = exps[i].eval(context, locals);\r\n    }\r\n    return result;\r\n}\r\n//# sourceMappingURL=ast.js.map"]}