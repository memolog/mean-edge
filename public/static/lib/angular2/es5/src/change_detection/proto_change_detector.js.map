{"version":3,"sources":["proto_change_detector.js"],"names":[],"mappings":"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","file":"src/change_detection/proto_change_detector.js","sourceRoot":"/Users/yamaguchi/Desktop/mean-edge/node_modules/angular2/es6/dev/","sourcesContent":["import { isPresent, isBlank, BaseException, isString } from 'angular2/src/facade/lang';\r\nimport { ListWrapper } from 'angular2/src/facade/collection';\r\nimport { ImplicitReceiver } from './parser/ast';\r\nimport { ProtoChangeDetector } from './interfaces';\r\nimport { ChangeDetectionUtil } from './change_detection_util';\r\nimport { DynamicChangeDetector } from './dynamic_change_detector';\r\nimport { ChangeDetectorJITGenerator } from './change_detection_jit_generator';\r\nimport { DirectiveIndex } from './directive_record';\r\nimport { coalesce } from './coalesce';\r\nimport { ProtoRecord, RECORD_TYPE_PROPERTY, RECORD_TYPE_LOCAL, RECORD_TYPE_INVOKE_METHOD, RECORD_TYPE_CONST, RECORD_TYPE_INVOKE_CLOSURE, RECORD_TYPE_PRIMITIVE_OP, RECORD_TYPE_KEYED_ACCESS, RECORD_TYPE_PIPE, RECORD_TYPE_BINDING_PIPE, RECORD_TYPE_INTERPOLATE } from './proto_record';\r\n// HACK: workaround for Traceur behavior.\r\n// It expects all transpiled modules to contain this marker.\r\n// TODO: remove this when we no longer use traceur\r\nexport var __esModule = true;\r\nexport class DynamicProtoChangeDetector extends ProtoChangeDetector {\r\n    constructor(_pipeRegistry, _bindingRecords, _variableBindings, _directiveRecords, _changeControlStrategy) {\r\n        super();\r\n        this._pipeRegistry = _pipeRegistry;\r\n        this._bindingRecords = _bindingRecords;\r\n        this._variableBindings = _variableBindings;\r\n        this._directiveRecords = _directiveRecords;\r\n        this._changeControlStrategy = _changeControlStrategy;\r\n    }\r\n    instantiate(dispatcher) {\r\n        this._createRecordsIfNecessary();\r\n        return new DynamicChangeDetector(this._changeControlStrategy, dispatcher, this._pipeRegistry, this._records, this._directiveRecords);\r\n    }\r\n    _createRecordsIfNecessary() {\r\n        if (isBlank(this._records)) {\r\n            var recordBuilder = new ProtoRecordBuilder();\r\n            ListWrapper.forEach(this._bindingRecords, (b) => { recordBuilder.addAst(b, this._variableBindings); });\r\n            this._records = coalesce(recordBuilder.records);\r\n        }\r\n    }\r\n}\r\nvar _jitProtoChangeDetectorClassCounter = 0;\r\nexport class JitProtoChangeDetector extends ProtoChangeDetector {\r\n    constructor(_pipeRegistry, _bindingRecords, _variableBindings, _directiveRecords, _changeControlStrategy) {\r\n        super();\r\n        this._pipeRegistry = _pipeRegistry;\r\n        this._bindingRecords = _bindingRecords;\r\n        this._variableBindings = _variableBindings;\r\n        this._directiveRecords = _directiveRecords;\r\n        this._changeControlStrategy = _changeControlStrategy;\r\n        this._factory = null;\r\n    }\r\n    instantiate(dispatcher) {\r\n        this._createFactoryIfNecessary();\r\n        return this._factory(dispatcher, this._pipeRegistry);\r\n    }\r\n    _createFactoryIfNecessary() {\r\n        if (isBlank(this._factory)) {\r\n            var recordBuilder = new ProtoRecordBuilder();\r\n            ListWrapper.forEach(this._bindingRecords, (b) => { recordBuilder.addAst(b, this._variableBindings); });\r\n            var c = _jitProtoChangeDetectorClassCounter++;\r\n            var records = coalesce(recordBuilder.records);\r\n            var typeName = `ChangeDetector${c}`;\r\n            this._factory = new ChangeDetectorJITGenerator(typeName, this._changeControlStrategy, records, this._directiveRecords)\r\n                .generate();\r\n        }\r\n    }\r\n}\r\nclass ProtoRecordBuilder {\r\n    constructor() {\r\n        this.records = [];\r\n    }\r\n    addAst(b, variableBindings = null) {\r\n        var last = ListWrapper.last(this.records);\r\n        if (isPresent(last) && last.bindingRecord.directiveRecord == b.directiveRecord) {\r\n            last.lastInDirective = false;\r\n        }\r\n        var pr = _ConvertAstIntoProtoRecords.convert(b, this.records.length, variableBindings);\r\n        if (!ListWrapper.isEmpty(pr)) {\r\n            var last = ListWrapper.last(pr);\r\n            last.lastInBinding = true;\r\n            last.lastInDirective = true;\r\n            this.records = ListWrapper.concat(this.records, pr);\r\n        }\r\n    }\r\n}\r\nclass _ConvertAstIntoProtoRecords {\r\n    constructor(bindingRecord, contextIndex, expressionAsString, variableBindings) {\r\n        this.bindingRecord = bindingRecord;\r\n        this.contextIndex = contextIndex;\r\n        this.expressionAsString = expressionAsString;\r\n        this.variableBindings = variableBindings;\r\n        this.protoRecords = [];\r\n    }\r\n    static convert(b, contextIndex, variableBindings) {\r\n        var c = new _ConvertAstIntoProtoRecords(b, contextIndex, b.ast.toString(), variableBindings);\r\n        b.ast.visit(c);\r\n        return c.protoRecords;\r\n    }\r\n    visitImplicitReceiver(ast) { return this.bindingRecord.implicitReceiver; }\r\n    visitInterpolation(ast) {\r\n        var args = this._visitAll(ast.expressions);\r\n        return this._addRecord(RECORD_TYPE_INTERPOLATE, \"interpolate\", _interpolationFn(ast.strings), args, ast.strings, 0);\r\n    }\r\n    visitLiteralPrimitive(ast) {\r\n        return this._addRecord(RECORD_TYPE_CONST, \"literal\", ast.value, [], null, 0);\r\n    }\r\n    visitAccessMember(ast) {\r\n        var receiver = ast.receiver.visit(this);\r\n        if (isPresent(this.variableBindings) && ListWrapper.contains(this.variableBindings, ast.name) &&\r\n            ast.receiver instanceof\r\n                ImplicitReceiver) {\r\n            return this._addRecord(RECORD_TYPE_LOCAL, ast.name, ast.name, [], null, receiver);\r\n        }\r\n        else {\r\n            return this._addRecord(RECORD_TYPE_PROPERTY, ast.name, ast.getter, [], null, receiver);\r\n        }\r\n    }\r\n    visitMethodCall(ast) {\r\n        ;\r\n        var receiver = ast.receiver.visit(this);\r\n        var args = this._visitAll(ast.args);\r\n        if (isPresent(this.variableBindings) && ListWrapper.contains(this.variableBindings, ast.name)) {\r\n            var target = this._addRecord(RECORD_TYPE_LOCAL, ast.name, ast.name, [], null, receiver);\r\n            return this._addRecord(RECORD_TYPE_INVOKE_CLOSURE, \"closure\", null, args, null, target);\r\n        }\r\n        else {\r\n            return this._addRecord(RECORD_TYPE_INVOKE_METHOD, ast.name, ast.fn, args, null, receiver);\r\n        }\r\n    }\r\n    visitFunctionCall(ast) {\r\n        var target = ast.target.visit(this);\r\n        var args = this._visitAll(ast.args);\r\n        return this._addRecord(RECORD_TYPE_INVOKE_CLOSURE, \"closure\", null, args, null, target);\r\n    }\r\n    visitLiteralArray(ast) {\r\n        var primitiveName = `arrayFn${ast.expressions.length}`;\r\n        return this._addRecord(RECORD_TYPE_PRIMITIVE_OP, primitiveName, _arrayFn(ast.expressions.length), this._visitAll(ast.expressions), null, 0);\r\n    }\r\n    visitLiteralMap(ast) {\r\n        return this._addRecord(RECORD_TYPE_PRIMITIVE_OP, _mapPrimitiveName(ast.keys), ChangeDetectionUtil.mapFn(ast.keys), this._visitAll(ast.values), null, 0);\r\n    }\r\n    visitBinary(ast) {\r\n        var left = ast.left.visit(this);\r\n        var right = ast.right.visit(this);\r\n        return this._addRecord(RECORD_TYPE_PRIMITIVE_OP, _operationToPrimitiveName(ast.operation), _operationToFunction(ast.operation), [left, right], null, 0);\r\n    }\r\n    visitPrefixNot(ast) {\r\n        var exp = ast.expression.visit(this);\r\n        return this._addRecord(RECORD_TYPE_PRIMITIVE_OP, \"operation_negate\", ChangeDetectionUtil.operation_negate, [exp], null, 0);\r\n    }\r\n    visitConditional(ast) {\r\n        var c = ast.condition.visit(this);\r\n        var t = ast.trueExp.visit(this);\r\n        var f = ast.falseExp.visit(this);\r\n        return this._addRecord(RECORD_TYPE_PRIMITIVE_OP, \"cond\", ChangeDetectionUtil.cond, [c, t, f], null, 0);\r\n    }\r\n    visitPipe(ast) {\r\n        var value = ast.exp.visit(this);\r\n        var type = ast.inBinding ? RECORD_TYPE_BINDING_PIPE : RECORD_TYPE_PIPE;\r\n        return this._addRecord(type, ast.name, ast.name, [], null, value);\r\n    }\r\n    visitKeyedAccess(ast) {\r\n        var obj = ast.obj.visit(this);\r\n        var key = ast.key.visit(this);\r\n        return this._addRecord(RECORD_TYPE_KEYED_ACCESS, \"keyedAccess\", ChangeDetectionUtil.keyedAccess, [key], null, obj);\r\n    }\r\n    _visitAll(asts) {\r\n        var res = ListWrapper.createFixedSize(asts.length);\r\n        for (var i = 0; i < asts.length; ++i) {\r\n            res[i] = asts[i].visit(this);\r\n        }\r\n        return res;\r\n    }\r\n    _addRecord(type, name, funcOrValue, args, fixedArgs, context) {\r\n        var selfIndex = ++this.contextIndex;\r\n        if (context instanceof DirectiveIndex) {\r\n            ListWrapper.push(this.protoRecords, new ProtoRecord(type, name, funcOrValue, args, fixedArgs, -1, context, selfIndex, this.bindingRecord, this.expressionAsString, false, false));\r\n        }\r\n        else {\r\n            ListWrapper.push(this.protoRecords, new ProtoRecord(type, name, funcOrValue, args, fixedArgs, context, null, selfIndex, this.bindingRecord, this.expressionAsString, false, false));\r\n        }\r\n        return selfIndex;\r\n    }\r\n}\r\nfunction _arrayFn(length) {\r\n    switch (length) {\r\n        case 0:\r\n            return ChangeDetectionUtil.arrayFn0;\r\n        case 1:\r\n            return ChangeDetectionUtil.arrayFn1;\r\n        case 2:\r\n            return ChangeDetectionUtil.arrayFn2;\r\n        case 3:\r\n            return ChangeDetectionUtil.arrayFn3;\r\n        case 4:\r\n            return ChangeDetectionUtil.arrayFn4;\r\n        case 5:\r\n            return ChangeDetectionUtil.arrayFn5;\r\n        case 6:\r\n            return ChangeDetectionUtil.arrayFn6;\r\n        case 7:\r\n            return ChangeDetectionUtil.arrayFn7;\r\n        case 8:\r\n            return ChangeDetectionUtil.arrayFn8;\r\n        case 9:\r\n            return ChangeDetectionUtil.arrayFn9;\r\n        default:\r\n            throw new BaseException(`Does not support literal maps with more than 9 elements`);\r\n    }\r\n}\r\nfunction _mapPrimitiveName(keys) {\r\n    var stringifiedKeys = ListWrapper.join(ListWrapper.map(keys, (k) => isString(k) ? `\"${k}\"` : `${k}`), \", \");\r\n    return `mapFn([${stringifiedKeys}])`;\r\n}\r\nfunction _operationToPrimitiveName(operation) {\r\n    switch (operation) {\r\n        case '+':\r\n            return \"operation_add\";\r\n        case '-':\r\n            return \"operation_subtract\";\r\n        case '*':\r\n            return \"operation_multiply\";\r\n        case '/':\r\n            return \"operation_divide\";\r\n        case '%':\r\n            return \"operation_remainder\";\r\n        case '==':\r\n            return \"operation_equals\";\r\n        case '!=':\r\n            return \"operation_not_equals\";\r\n        case '<':\r\n            return \"operation_less_then\";\r\n        case '>':\r\n            return \"operation_greater_then\";\r\n        case '<=':\r\n            return \"operation_less_or_equals_then\";\r\n        case '>=':\r\n            return \"operation_greater_or_equals_then\";\r\n        case '&&':\r\n            return \"operation_logical_and\";\r\n        case '||':\r\n            return \"operation_logical_or\";\r\n        default:\r\n            throw new BaseException(`Unsupported operation ${operation}`);\r\n    }\r\n}\r\nfunction _operationToFunction(operation) {\r\n    switch (operation) {\r\n        case '+':\r\n            return ChangeDetectionUtil.operation_add;\r\n        case '-':\r\n            return ChangeDetectionUtil.operation_subtract;\r\n        case '*':\r\n            return ChangeDetectionUtil.operation_multiply;\r\n        case '/':\r\n            return ChangeDetectionUtil.operation_divide;\r\n        case '%':\r\n            return ChangeDetectionUtil.operation_remainder;\r\n        case '==':\r\n            return ChangeDetectionUtil.operation_equals;\r\n        case '!=':\r\n            return ChangeDetectionUtil.operation_not_equals;\r\n        case '<':\r\n            return ChangeDetectionUtil.operation_less_then;\r\n        case '>':\r\n            return ChangeDetectionUtil.operation_greater_then;\r\n        case '<=':\r\n            return ChangeDetectionUtil.operation_less_or_equals_then;\r\n        case '>=':\r\n            return ChangeDetectionUtil.operation_greater_or_equals_then;\r\n        case '&&':\r\n            return ChangeDetectionUtil.operation_logical_and;\r\n        case '||':\r\n            return ChangeDetectionUtil.operation_logical_or;\r\n        default:\r\n            throw new BaseException(`Unsupported operation ${operation}`);\r\n    }\r\n}\r\nfunction s(v) {\r\n    return isPresent(v) ? `${v}` : '';\r\n}\r\nfunction _interpolationFn(strings) {\r\n    var length = strings.length;\r\n    var c0 = length > 0 ? strings[0] : null;\r\n    var c1 = length > 1 ? strings[1] : null;\r\n    var c2 = length > 2 ? strings[2] : null;\r\n    var c3 = length > 3 ? strings[3] : null;\r\n    var c4 = length > 4 ? strings[4] : null;\r\n    var c5 = length > 5 ? strings[5] : null;\r\n    var c6 = length > 6 ? strings[6] : null;\r\n    var c7 = length > 7 ? strings[7] : null;\r\n    var c8 = length > 8 ? strings[8] : null;\r\n    var c9 = length > 9 ? strings[9] : null;\r\n    switch (length - 1) {\r\n        case 1:\r\n            return (a1) => c0 + s(a1) + c1;\r\n        case 2:\r\n            return (a1, a2) => c0 + s(a1) + c1 + s(a2) + c2;\r\n        case 3:\r\n            return (a1, a2, a3) => c0 + s(a1) + c1 + s(a2) + c2 + s(a3) + c3;\r\n        case 4:\r\n            return (a1, a2, a3, a4) => c0 + s(a1) + c1 + s(a2) + c2 + s(a3) + c3 + s(a4) + c4;\r\n        case 5:\r\n            return (a1, a2, a3, a4, a5) => c0 + s(a1) + c1 + s(a2) + c2 + s(a3) + c3 + s(a4) + c4 + s(a5) + c5;\r\n        case 6:\r\n            return (a1, a2, a3, a4, a5, a6) => c0 + s(a1) + c1 + s(a2) + c2 + s(a3) + c3 + s(a4) + c4 + s(a5) + c5 + s(a6) + c6;\r\n        case 7:\r\n            return (a1, a2, a3, a4, a5, a6, a7) => c0 + s(a1) + c1 + s(a2) + c2 + s(a3) + c3 + s(a4) +\r\n                c4 + s(a5) + c5 + s(a6) + c6 + s(a7) + c7;\r\n        case 8:\r\n            return (a1, a2, a3, a4, a5, a6, a7, a8) => c0 + s(a1) + c1 + s(a2) + c2 + s(a3) + c3 + s(a4) +\r\n                c4 + s(a5) + c5 + s(a6) + c6 + s(a7) + c7 + s(a8) +\r\n                c8;\r\n        case 9:\r\n            return (a1, a2, a3, a4, a5, a6, a7, a8, a9) => c0 + s(a1) + c1 + s(a2) + c2 + s(a3) + c3 +\r\n                s(a4) + c4 + s(a5) + c5 + s(a6) + c6 + s(a7) +\r\n                c7 + s(a8) + c8 + s(a9) + c9;\r\n        default:\r\n            throw new BaseException(`Does not support more than 9 expressions`);\r\n    }\r\n}\r\n//# sourceMappingURL=proto_change_detector.js.map"]}