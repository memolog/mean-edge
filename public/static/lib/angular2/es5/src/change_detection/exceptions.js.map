{"version":3,"sources":["exceptions.js"],"names":[],"mappings":"AAAA,KAAK,SAAS,AAAC,8BAAoB,UAAS,SAAQ;;;;;;AAApD,OAAO;AACD,UAAM,GADZ,SAAS,IAAG,CAAG;AAAf,oBAAoB,KAAG,cAAkB,CAAC;IAElC,CADuB;AACzB,UAAM;iBAEY,KAAG;AAJ3B,cAAQ,AAAC,0BAAqC,CAAA;AAA9C,+CAAA,SAAS,QAAO;AAKT,eAAM,uCAAqC,CAClC,KAAI,CAAG,CAAA,MAAK,CAAG;AAN/B,AAOQ,wBAPM,iBAAiB,AAAC,wCAAkB,KAAK,MAAmB,CAO3D;AACP,aAAG,QAAQ,EACP,EAAA,cAAc,EAAC,CAAA,KAAI,mBAAmB,EAAC,uCAAqC,KACxE,mBAAmB,EAAC,CAAA,MAAK,cAAc,EAAC,sBAAqB,EAAC,CAAA,MAAK,aAAa,EAAC,IAAE,CAAA,CAAC;QAChG;AATM,AAWV,aAXiB,CAAA,CAAC,eAAc,YAAY,CAAC,AAAC,0CAU1C,QAAO,CAAP,UAAQ,AAAC,CAAE;AAAE,iBAAO,CAAA,IAAG,QAAQ,CAAC;UAAE,MAT4B,SAAO,CAAC,CAAC;MACnE,AAAC,CACmD,aAAY,CAD7C,CAJS,CAAA;AAApC,cAAQ,AAAC,kFAAqC,CAAA;AAA9C,6BAAA,SAAS,QAAO;AAcT,eAAM,qBAAmB,CAChB,KAAI,CAAG,CAAA,iBAAgB,CAAG;AAf1C,AAgBQ,wBAhBM,iBAAiB,AAAC,sBAAkB,KAAK,MAAmB,CAgB3D;AACP,aAAG,kBAAkB,EAAI,kBAAgB,CAAC;AAC1C,aAAG,SAAS,EAAI,CAAA,KAAI,mBAAmB,CAAC;AACxC,aAAG,QAAQ,IAAO,IAAG,kBAAkB,EAAC,QAAO,EAAC,CAAA,IAAG,SAAS,EAAC,IAAE,CAAA,CAAC;QACpE;AAlBM,AAoBV,aApBiB,CAAA,CAAC,eAAc,YAAY,CAAC,AAAC,wBAmB1C,QAAO,CAAP,UAAQ,AAAC,CAAE;AAAE,iBAAO,CAAA,IAAG,QAAQ,CAAC;UAAE,MAlB4B,SAAO,CAAC,CAAC;MACnE,AAAC,CAUiC,aAAY,CAV3B,CAJS,CAAA;AAApC,cAAQ,AAAC,8CAAqC,CAAA;IAEf;EAC3B,CAAA;AADI,CAAC,CAAC;AAqB2B","file":"src/change_detection/exceptions.js","sourceRoot":"/Users/yamaguchi/Desktop/mean-edge/node_modules/angular2/es6/dev/","sourcesContent":["import { BaseException } from \"angular2/src/facade/lang\";\r\n// HACK: workaround for Traceur behavior.\r\n// It expects all transpiled modules to contain this marker.\r\n// TODO: remove this when we no longer use traceur\r\nexport var __esModule = true;\r\nexport class ExpressionChangedAfterItHasBeenChecked extends BaseException {\r\n    constructor(proto, change) {\r\n        super();\r\n        this.message =\r\n            `Expression '${proto.expressionAsString}' has changed after it was checked. ` +\r\n                `Previous value: '${change.previousValue}'. Current value: '${change.currentValue}'`;\r\n    }\r\n    toString() { return this.message; }\r\n}\r\nexport class ChangeDetectionError extends BaseException {\r\n    constructor(proto, originalException) {\r\n        super();\r\n        this.originalException = originalException;\r\n        this.location = proto.expressionAsString;\r\n        this.message = `${this.originalException} in [${this.location}]`;\r\n    }\r\n    toString() { return this.message; }\r\n}\r\n//# sourceMappingURL=exceptions.js.map"]}