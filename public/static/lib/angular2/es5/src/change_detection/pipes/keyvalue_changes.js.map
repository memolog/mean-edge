{"version":3,"sources":["keyvalue_changes.js"],"names":[],"mappings":"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","file":"src/change_detection/pipes/keyvalue_changes.js","sourceRoot":"/Users/yamaguchi/Desktop/mean-edge/node_modules/angular2/es6/dev/","sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") return Reflect.decorate(decorators, target, key, desc);\r\n    switch (arguments.length) {\r\n        case 2: return decorators.reduceRight(function(o, d) { return (d && d(o)) || o; }, target);\r\n        case 3: return decorators.reduceRight(function(o, d) { return (d && d(target, key)), void 0; }, void 0);\r\n        case 4: return decorators.reduceRight(function(o, d) { return (d && d(target, key, o)) || o; }, desc);\r\n    }\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nimport { ListWrapper, MapWrapper, StringMapWrapper } from 'angular2/src/facade/collection';\r\nimport { stringify, looseIdentical, isJsObject, CONST } from 'angular2/src/facade/lang';\r\nimport { WrappedValue, Pipe, PipeFactory } from './pipe';\r\n// HACK: workaround for Traceur behavior.\r\n// It expects all transpiled modules to contain this marker.\r\n// TODO: remove this when we no longer use traceur\r\nexport var __esModule = true;\r\n/**\r\n * @exportedAs angular2/pipes\r\n */\r\nexport let KeyValueChangesFactory = class extends PipeFactory {\r\n    constructor() {\r\n        super();\r\n    }\r\n    supports(obj) { return KeyValueChanges.supportsObj(obj); }\r\n    create(cdRef) { return new KeyValueChanges(); }\r\n};\r\nKeyValueChangesFactory = __decorate([\r\n    CONST(), \r\n    __metadata('design:paramtypes', [])\r\n], KeyValueChangesFactory);\r\n/**\r\n * @exportedAs angular2/pipes\r\n */\r\nexport class KeyValueChanges extends Pipe {\r\n    constructor() {\r\n        super();\r\n        this._records = MapWrapper.create();\r\n        this._mapHead = null;\r\n        this._previousMapHead = null;\r\n        this._changesHead = null;\r\n        this._changesTail = null;\r\n        this._additionsHead = null;\r\n        this._additionsTail = null;\r\n        this._removalsHead = null;\r\n        this._removalsTail = null;\r\n    }\r\n    static supportsObj(obj) { return obj instanceof Map || isJsObject(obj); }\r\n    supports(obj) { return KeyValueChanges.supportsObj(obj); }\r\n    transform(map) {\r\n        if (this.check(map)) {\r\n            return WrappedValue.wrap(this);\r\n        }\r\n        else {\r\n            return this;\r\n        }\r\n    }\r\n    get isDirty() {\r\n        return this._additionsHead !== null || this._changesHead !== null ||\r\n            this._removalsHead !== null;\r\n    }\r\n    forEachItem(fn) {\r\n        var record;\r\n        for (record = this._mapHead; record !== null; record = record._next) {\r\n            fn(record);\r\n        }\r\n    }\r\n    forEachPreviousItem(fn) {\r\n        var record;\r\n        for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\r\n            fn(record);\r\n        }\r\n    }\r\n    forEachChangedItem(fn) {\r\n        var record;\r\n        for (record = this._changesHead; record !== null; record = record._nextChanged) {\r\n            fn(record);\r\n        }\r\n    }\r\n    forEachAddedItem(fn) {\r\n        var record;\r\n        for (record = this._additionsHead; record !== null; record = record._nextAdded) {\r\n            fn(record);\r\n        }\r\n    }\r\n    forEachRemovedItem(fn) {\r\n        var record;\r\n        for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\r\n            fn(record);\r\n        }\r\n    }\r\n    check(map) {\r\n        this._reset();\r\n        var records = this._records;\r\n        var oldSeqRecord = this._mapHead;\r\n        var lastOldSeqRecord = null;\r\n        var lastNewSeqRecord = null;\r\n        var seqChanged = false;\r\n        this._forEach(map, (value, key) => {\r\n            var newSeqRecord;\r\n            if (oldSeqRecord !== null && key === oldSeqRecord.key) {\r\n                newSeqRecord = oldSeqRecord;\r\n                if (!looseIdentical(value, oldSeqRecord.currentValue)) {\r\n                    oldSeqRecord.previousValue = oldSeqRecord.currentValue;\r\n                    oldSeqRecord.currentValue = value;\r\n                    this._addToChanges(oldSeqRecord);\r\n                }\r\n            }\r\n            else {\r\n                seqChanged = true;\r\n                if (oldSeqRecord !== null) {\r\n                    oldSeqRecord._next = null;\r\n                    this._removeFromSeq(lastOldSeqRecord, oldSeqRecord);\r\n                    this._addToRemovals(oldSeqRecord);\r\n                }\r\n                if (MapWrapper.contains(records, key)) {\r\n                    newSeqRecord = MapWrapper.get(records, key);\r\n                }\r\n                else {\r\n                    newSeqRecord = new KVChangeRecord(key);\r\n                    MapWrapper.set(records, key, newSeqRecord);\r\n                    newSeqRecord.currentValue = value;\r\n                    this._addToAdditions(newSeqRecord);\r\n                }\r\n            }\r\n            if (seqChanged) {\r\n                if (this._isInRemovals(newSeqRecord)) {\r\n                    this._removeFromRemovals(newSeqRecord);\r\n                }\r\n                if (lastNewSeqRecord == null) {\r\n                    this._mapHead = newSeqRecord;\r\n                }\r\n                else {\r\n                    lastNewSeqRecord._next = newSeqRecord;\r\n                }\r\n            }\r\n            lastOldSeqRecord = oldSeqRecord;\r\n            lastNewSeqRecord = newSeqRecord;\r\n            oldSeqRecord = oldSeqRecord === null ? null : oldSeqRecord._next;\r\n        });\r\n        this._truncate(lastOldSeqRecord, oldSeqRecord);\r\n        return this.isDirty;\r\n    }\r\n    _reset() {\r\n        if (this.isDirty) {\r\n            var record;\r\n            // Record the state of the mapping\r\n            for (record = this._previousMapHead = this._mapHead; record !== null; record = record._next) {\r\n                record._nextPrevious = record._next;\r\n            }\r\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\r\n                record.previousValue = record.currentValue;\r\n            }\r\n            for (record = this._additionsHead; record != null; record = record._nextAdded) {\r\n                record.previousValue = record.currentValue;\r\n            }\r\n            // todo(vicb) once assert is supported\r\n            // assert(() {\r\n            //  var r = _changesHead;\r\n            //  while (r != null) {\r\n            //    var nextRecord = r._nextChanged;\r\n            //    r._nextChanged = null;\r\n            //    r = nextRecord;\r\n            //  }\r\n            //\r\n            //  r = _additionsHead;\r\n            //  while (r != null) {\r\n            //    var nextRecord = r._nextAdded;\r\n            //    r._nextAdded = null;\r\n            //    r = nextRecord;\r\n            //  }\r\n            //\r\n            //  r = _removalsHead;\r\n            //  while (r != null) {\r\n            //    var nextRecord = r._nextRemoved;\r\n            //    r._nextRemoved = null;\r\n            //    r = nextRecord;\r\n            //  }\r\n            //\r\n            //  return true;\r\n            //});\r\n            this._changesHead = this._changesTail = null;\r\n            this._additionsHead = this._additionsTail = null;\r\n            this._removalsHead = this._removalsTail = null;\r\n        }\r\n    }\r\n    _truncate(lastRecord, record) {\r\n        while (record !== null) {\r\n            if (lastRecord === null) {\r\n                this._mapHead = null;\r\n            }\r\n            else {\r\n                lastRecord._next = null;\r\n            }\r\n            var nextRecord = record._next;\r\n            // todo(vicb) assert\r\n            // assert((() {\r\n            //  record._next = null;\r\n            //  return true;\r\n            //}));\r\n            this._addToRemovals(record);\r\n            lastRecord = record;\r\n            record = nextRecord;\r\n        }\r\n        for (var rec = this._removalsHead; rec !== null; rec = rec._nextRemoved) {\r\n            rec.previousValue = rec.currentValue;\r\n            rec.currentValue = null;\r\n            MapWrapper.delete(this._records, rec.key);\r\n        }\r\n    }\r\n    _isInRemovals(record) {\r\n        return record === this._removalsHead || record._nextRemoved !== null ||\r\n            record._prevRemoved !== null;\r\n    }\r\n    _addToRemovals(record) {\r\n        // todo(vicb) assert\r\n        // assert(record._next == null);\r\n        // assert(record._nextAdded == null);\r\n        // assert(record._nextChanged == null);\r\n        // assert(record._nextRemoved == null);\r\n        // assert(record._prevRemoved == null);\r\n        if (this._removalsHead === null) {\r\n            this._removalsHead = this._removalsTail = record;\r\n        }\r\n        else {\r\n            this._removalsTail._nextRemoved = record;\r\n            record._prevRemoved = this._removalsTail;\r\n            this._removalsTail = record;\r\n        }\r\n    }\r\n    _removeFromSeq(prev, record) {\r\n        var next = record._next;\r\n        if (prev === null) {\r\n            this._mapHead = next;\r\n        }\r\n        else {\r\n            prev._next = next;\r\n        }\r\n        // todo(vicb) assert\r\n        // assert((() {\r\n        //  record._next = null;\r\n        //  return true;\r\n        //})());\r\n    }\r\n    _removeFromRemovals(record) {\r\n        // todo(vicb) assert\r\n        // assert(record._next == null);\r\n        // assert(record._nextAdded == null);\r\n        // assert(record._nextChanged == null);\r\n        var prev = record._prevRemoved;\r\n        var next = record._nextRemoved;\r\n        if (prev === null) {\r\n            this._removalsHead = next;\r\n        }\r\n        else {\r\n            prev._nextRemoved = next;\r\n        }\r\n        if (next === null) {\r\n            this._removalsTail = prev;\r\n        }\r\n        else {\r\n            next._prevRemoved = prev;\r\n        }\r\n        record._prevRemoved = record._nextRemoved = null;\r\n    }\r\n    _addToAdditions(record) {\r\n        // todo(vicb): assert\r\n        // assert(record._next == null);\r\n        // assert(record._nextAdded == null);\r\n        // assert(record._nextChanged == null);\r\n        // assert(record._nextRemoved == null);\r\n        // assert(record._prevRemoved == null);\r\n        if (this._additionsHead === null) {\r\n            this._additionsHead = this._additionsTail = record;\r\n        }\r\n        else {\r\n            this._additionsTail._nextAdded = record;\r\n            this._additionsTail = record;\r\n        }\r\n    }\r\n    _addToChanges(record) {\r\n        // todo(vicb) assert\r\n        // assert(record._nextAdded == null);\r\n        // assert(record._nextChanged == null);\r\n        // assert(record._nextRemoved == null);\r\n        // assert(record._prevRemoved == null);\r\n        if (this._changesHead === null) {\r\n            this._changesHead = this._changesTail = record;\r\n        }\r\n        else {\r\n            this._changesTail._nextChanged = record;\r\n            this._changesTail = record;\r\n        }\r\n    }\r\n    toString() {\r\n        var items = [];\r\n        var previous = [];\r\n        var changes = [];\r\n        var additions = [];\r\n        var removals = [];\r\n        var record;\r\n        for (record = this._mapHead; record !== null; record = record._next) {\r\n            ListWrapper.push(items, stringify(record));\r\n        }\r\n        for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\r\n            ListWrapper.push(previous, stringify(record));\r\n        }\r\n        for (record = this._changesHead; record !== null; record = record._nextChanged) {\r\n            ListWrapper.push(changes, stringify(record));\r\n        }\r\n        for (record = this._additionsHead; record !== null; record = record._nextAdded) {\r\n            ListWrapper.push(additions, stringify(record));\r\n        }\r\n        for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\r\n            ListWrapper.push(removals, stringify(record));\r\n        }\r\n        return \"map: \" + items.join(', ') + \"\\n\" + \"previous: \" + previous.join(', ') + \"\\n\" +\r\n            \"additions: \" + additions.join(', ') + \"\\n\" + \"changes: \" + changes.join(', ') + \"\\n\" +\r\n            \"removals: \" + removals.join(', ') + \"\\n\";\r\n    }\r\n    _forEach(obj, fn) {\r\n        if (obj instanceof Map) {\r\n            MapWrapper.forEach(obj, fn);\r\n        }\r\n        else {\r\n            StringMapWrapper.forEach(obj, fn);\r\n        }\r\n    }\r\n}\r\n/**\r\n * @exportedAs angular2/pipes\r\n */\r\nexport class KVChangeRecord {\r\n    constructor(key) {\r\n        this.key = key;\r\n        this.previousValue = null;\r\n        this.currentValue = null;\r\n        this._nextPrevious = null;\r\n        this._next = null;\r\n        this._nextAdded = null;\r\n        this._nextRemoved = null;\r\n        this._prevRemoved = null;\r\n        this._nextChanged = null;\r\n    }\r\n    toString() {\r\n        return looseIdentical(this.previousValue, this.currentValue) ?\r\n            stringify(this.key) :\r\n            (stringify(this.key) + '[' + stringify(this.previousValue) + '->' +\r\n                stringify(this.currentValue) + ']');\r\n    }\r\n}\r\n//# sourceMappingURL=keyvalue_changes.js.map"]}