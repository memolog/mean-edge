{"version":3,"sources":["lang.js"],"names":[],"mappings":"AAAA,KAAK,SAAS,AAAC,IAAoB,UAAS,SAAQ;;;;;;;;;;;;;;;;;;;;;;AAiC7C,SAAS,WAAS,CAAE,IAAG,CAAG;AAC7B,SAAO,KAAG,CAAC;EACf;AAAA,AACO,SAAS,MAAI,CAAC,AAAC;AAClB,WAAO,SAAC,MAAK;WAAM,OAAK;IAAA,EAAC;EAC7B;AAKO,SAAS,UAAQ,CAAE,GAAE,CAAG;AAC3B,SAAO,CAAA,GAAE,IAAM,UAAQ,CAAA,EAAK,CAAA,GAAE,IAAM,KAAG,CAAC;EAC5C;AAAA,AACO,SAAS,QAAM,CAAE,GAAE,CAAG;AACzB,SAAO,CAAA,GAAE,IAAM,UAAQ,CAAA,EAAK,CAAA,GAAE,IAAM,KAAG,CAAC;EAC5C;AAAA,AACO,SAAS,SAAO,CAAE,GAAE,CAAG;AAC1B,SAAO,CAAA,MAAO,IAAE,CAAA,GAAM,SAAO,CAAC;EAClC;AAAA,AACO,SAAS,WAAS,CAAE,GAAE,CAAG;AAC5B,SAAO,CAAA,MAAO,IAAE,CAAA,GAAM,WAAS,CAAC;EACpC;AAAA,AACO,SAAS,OAAK,CAAE,GAAE,CAAG;AACxB,SAAO,CAAA,UAAS,AAAC,CAAC,GAAE,CAAC,CAAC;EAC1B;AAAA,AACO,SAAS,UAAQ,CAAE,KAAI,CAAG;AAC7B,OAAI,MAAO,MAAI,CAAA,GAAM,SAAO,CAAG;AAC3B,WAAO,MAAI,CAAC;IAChB;AAAA,AACA,OAAI,KAAI,IAAM,UAAQ,CAAA,EAAK,CAAA,KAAI,IAAM,KAAG,CAAG;AACvC,WAAO,CAAA,EAAC,EAAI,MAAI,CAAC;IACrB;AAAA,AACA,OAAI,KAAI,KAAK,CAAG;AACZ,WAAO,CAAA,KAAI,KAAK,CAAC;IACrB;AAAA,AACA,SAAO,CAAA,KAAI,SAAS,AAAC,EAAC,CAAC;EAC3B;AAAA,AAsGO,SAAS,eAAa,CAAE,CAAA,CAAG,CAAA,CAAA,CAAG;AACjC,SAAO,CAAA,CAAA,IAAM,EAAA,CAAA,EAAK,CAAA,MAAO,EAAA,CAAA,GAAM,SAAO,CAAA,EAAK,CAAA,MAAO,EAAA,CAAA,GAAM,SAAO,CAAA,EAAK,CAAA,KAAI,AAAC,CAAC,CAAA,CAAC,CAAA,EAAK,CAAA,KAAI,AAAC,CAAC,CAAA,CAAC,CAAC;EAC5F;AAAA,AAGO,SAAS,UAAQ,CAAE,KAAI,CAAG;AAC7B,SAAO,MAAI,CAAC;EAChB;AAAA,AACO,SAAS,eAAa,CAAE,GAAE,CAAG;AAChC,SAAO,CAAA,OAAM,AAAC,CAAC,GAAE,CAAC,CAAA,CAAI,KAAG,EAAI,IAAE,CAAC;EACpC;AAAA,AACO,SAAS,WAAS,CAAE,CAAA,CAAG;AAC1B,SAAO,CAAA,CAAA,IAAM,KAAG,CAAA,EAAK,EAAC,MAAO,EAAA,CAAA,GAAM,WAAS,CAAA,EAAK,CAAA,MAAO,EAAA,CAAA,GAAM,SAAO,CAAC,CAAC;EAC3E;AAAA,AACO,SAAS,kBAAgB,CAAC,AAAC,CAAE;AAChC,SAAO,mBAAiB,CAAC;EAC7B;AAAA,AACO,SAAS,MAAI,CAAE,GAAE,CAAG;AACvB,OAAI,GAAE,WAAa,MAAI,CAAG;AACtB,YAAM,IAAI,AAAC,CAAC,GAAE,MAAM,CAAC,CAAC;IAC1B,KACK;AACD,YAAM,IAAI,AAAC,CAAC,GAAE,CAAC,CAAC;IACpB;AAAA,EACJ;AAnMA,AAmMA,UAnMQ,AAAC,0BAAqC,CAAA;AAA9C,UAAQ,AAAC,gBAAqC,CAAA;AAA9C,UAAQ,AAAC,wBAAqC,CAAA;AAA9C,UAAQ,AAAC,oBAAqC,CAAA;AAA9C,UAAQ,AAAC,sBAAqC,CAAA;AAA9C,UAAQ,AAAC,0BAAqC,CAAA;AAA9C,UAAQ,AAAC,kBAAqC,CAAA;AAA9C,UAAQ,AAAC,wBAAqC,CAAA;AAA9C,UAAQ,AAAC,kCAAqC,CAAA;AAA9C,UAAQ,AAAC,wBAAqC,CAAA;AAA9C,UAAQ,AAAC,kCAAqC,CAAA;AAA9C,UAAQ,AAAC,0BAAqC,CAAA;AAA9C,UAAQ,AAAC,wCAAqC,CAAA;AAA9C,UAAQ,AAAC,gBAAqC,CAAA;AAA9C,OAAO;AACD,UAAM,IAAmB;AACzB,UAAM;cAFE,CAAA,MAAO,OAAK,CAAA,GAAM,YAAU,CAAA,CAAI,OAAK,EAAI,OAAK;AAA5D,AACO,cADC,AAAC,mBAAqC,AACnB,CAAA;iBAIH,KAAG;AAL3B,cAAQ,AAAC,0BAAqC,CAAA;WAM5B,SAAO;AANzB,cAAQ,AAAC,cAAqC,CAAA;AAA9C,sBAAA,SAAS,QAAO;AAOT,eAAM,cAAY,CACT,OAAM,CAAG;AARzB,AASQ,wBATM,iBAAiB,AAAC,eAAkB,KAAK,MASzC,QAAM,CATsD,CASpD;AACd,aAAG,QAAQ,EAAI,QAAM,CAAC;AACtB,aAAG,MAAM,EAAI,CAAA,CAAC,GAAI,MAAI,AAAC,EAAC,CAAC,MAAM,CAAC;QACpC;AAVM,AAYV,aAZiB,CAAA,CAAC,eAAc,YAAY,CAAC,AAAC,iBAW1C,QAAO,CAAP,UAAQ,AAAC,CAAE;AAAE,iBAAO,CAAA,IAAG,QAAQ,CAAC;UAAE,MAV4B,SAAO,CAAC,CAAC;MACnE,AAAC,CAG0B,KAAI,CAHZ,CAJS,CAAA;AAApC,cAAQ,AAAC,gCAAqC,CAAA;WAe5B,CAAA,OAAM,KAAK;AAf7B,cAAQ,AAAC,cAAqC,CAAA;WAgB5B,CAAA,OAAM,KAAK;AAhB7B,cAAQ,AAAC,cAAqC,CAAA;yBAiBrB,CAAA,MAAO,OAAK,CAAA,GAAM,YAAU;AAIrD,SAAI,kBAAiB,CAAG;AACpB,cAAM,OAAO,EAAI,OAAK,CAAC;AAtB3B,AAwBI,gBAxBI,AAAC,OAwBL,CAAA,GAAE,EAAI,CAAA,MAAK,OAAO,AAAC,CAAC,KAAI,CAAG,UAAU,KAAI,CAAG;AAAE,eAAO,CAAA,MAAO,MAAI,CAAA,GAAM,SAAO,CAAA,EAAK,CAAA,KAAI,EAAI,EAAA,CAAA,GAAM,EAAA,CAAC;QAAE,CAAC,CAxB1D,CAwB2D;MACzG,KACK;AA1BL,AA2BI,gBA3BI,AAAC,OA2BL,CAAA,GAAE,EAAI,GAAC,CA3BmC,CA2BlC;AACR,cAAM,OAAO,EAAI,UAAS,AAAC,CAAE,GAAE,CAAC;MACpC;AA7BA,AA6BA,cA7BQ,AAAC,YAAqC,AA8BjC,CAAA;AA9Bb,iBAAA,SAAQ,AAAC,CAAE;AAuCJ,eAAM,SAAO,KACpB;AAtCU,aAAO,CAAA,CAAC,eAAc,YAAY,CAAC,AAAC,kBACkB,CAAC;MACzD,AAAC,EAAC,CAJ0B,CAAA;AAApC,cAAQ,AAAC,sBAAqC,CAAA;AAA9C,mBAAA,SAAQ,AAAC,CAAE;AAyCJ,eAAM,WAAS,KACtB;AAxCU,aAAO,CAAA,CAAC,eAAc,YAAY,CAAC,AAAC,oBACkB,CAAC;MACzD,AAAC,EAAC,CAJ0B,CAAA;AAApC,cAAQ,AAAC,0BAAqC,CAAA;AAA9C,sBAAA,SAAQ,AAAC;AAsEF,eAAM,cAAY,KAwBzB;AA5FU,aAAO,CAAA,CAAC,eAAc,YAAY,CAAC,AAAC;AAqEnC,qBAAW,CAAlB,UAAoB,IAAG,CAAG;AAAE,iBAAO,CAAA,MAAK,aAAa,AAAC,CAAC,IAAG,CAAC,CAAC;UAAE;AACvD,mBAAS,CAAhB,UAAkB,CAAA,CAAG,CAAA,KAAI,CAAG;AAAE,iBAAO,CAAA,CAAA,WAAW,AAAC,CAAC,KAAI,CAAC,CAAC;UAAE;AACnD,cAAI,CAAX,UAAa,CAAA,CAAG,CAAA,MAAK,CAAG;AAAE,iBAAO,CAAA,CAAA,MAAM,AAAC,CAAC,MAAK,CAAC,CAAC;UAAE;AAC3C,eAAK,CAAZ,UAAc,CAAA,CAAG,CAAA,EAAC,CAAG;AAAE,iBAAO,CAAA,CAAA,IAAM,GAAC,CAAC;UAAE;AACjC,gBAAM,CAAb,UAAe,CAAA,CAAG,CAAA,IAAG,CAAG,CAAA,OAAM,CAAG;AAC7B,iBAAO,CAAA,CAAA,QAAQ,AAAC,CAAC,IAAG,CAAG,QAAM,CAAC,CAAC;UACnC;AACO,mBAAS,CAAhB,UAAkB,CAAA,CAAG,CAAA,IAAG,CAAG,CAAA,OAAM,CAAG;AAChC,iBAAO,CAAA,CAAA,QAAQ,AAAC,CAAC,IAAG,CAAG,QAAM,CAAC,CAAC;UACnC;AACO,mBAAS,CAAhB,UAAkB,CAAA,CAAG,CAAA,KAAI,CAAG;AAAE,iBAAO,CAAA,CAAA,WAAW,AAAC,CAAC,KAAI,CAAC,CAAC;UAAE;AACnD,kBAAQ,CAAf,UAAiB,CAAA,CAAG,CAAA,KAAI,AAAY,CAAG;cAAZ,IAAE,6CAAI,KAAG;AAChC,iBAAO,CAAA,CAAA,UAAU,AAAC,CAAC,KAAI,CAAG,CAAA,GAAE,IAAM,KAAG,CAAA,CAAI,UAAQ,EAAI,IAAE,CAAC,CAAC;UAC7D;AACO,yBAAe,CAAtB,UAAwB,CAAA,CAAG,CAAA,IAAG,CAAG,CAAA,EAAC;AAC9B,iBAAO,CAAA,CAAA,QAAQ,AAAC,CAAC,IAAG,CAAG,UAAU,AAAS,CAAG;AArFzC,kBAAS,GAAA,UAAoB,GAAC;AAAG,uBAAoB,EAAA,CAChD,OAAoB,CAAA,SAAQ,OAAO,CAAG,OAAkB;AAC3D,4BAAmC,EAAI,CAAA,SAAQ,MAAmB,CAAC;AAAA,AAqFrE,oBAAM,OAAO,AAAC,CAAC,CAAC,CAAA,CAAG,EAAA,CAAC,CAAC;AAErB,mBAAO,CAAA,EAAC,AAAC,CAAC,OAAM,CAAC,CAAC;YACtB,CAAC,CAAC;UACN;AACO,iBAAO,CAAd,UAAgB,CAAA,CAAG,CAAA,MAAK,CAAG;AAAE,iBAAO,CAAA,CAAA,QAAQ,AAAC,CAAC,MAAK,CAAC,CAAA,EAAK,EAAC,CAAA,CAAC;UAAE;AAAA,SA1FD,CAAC;MACzD,AAAC,EAAC,CAJ0B,CAAA;AAApC,cAAQ,AAAC,gCAAqC,CAAA;AAA9C,qBAAA,SAAQ,AAAC;AA+FF,eAAM,aAAW,CACR,AAAS,CAAG;YAAZ,MAAI,6CAAI,GAAC;AACjB,aAAG,MAAM,EAAI,MAAI,CAAC;QACtB;AAhGM,AAmGV,aAnGiB,CAAA,CAAC,eAAc,YAAY,CAAC,AAAC;AAiG1C,YAAE,CAAF,UAAI,IAAG,CAAG;AAAE,eAAG,MAAM,KAAK,AAAC,CAAC,IAAG,CAAC,CAAC;UAAE;AACnC,iBAAO,CAAP,UAAQ,AAAC,CAAE;AAAE,iBAAO,CAAA,IAAG,MAAM,KAAK,AAAC,CAAC,EAAC,CAAC,CAAC;UAAE;AAAA,aAjGmB,CAAC;MACzD,AAAC,EAAC,CAJ0B,CAAA;AAApC,cAAQ,AAAC,8BAAqC,CAAA;AAA9C,yBAAA,SAAS,QAAO;AAsGT,eAAM,iBAAe,CACZ,OAAM,CAAG;AAvGzB,AAwGQ,wBAxGM,iBAAiB,AAAC,kBAAkB,KAAK,MAAmB,CAwG3D;AACP,aAAG,QAAQ,EAAI,QAAM,CAAC;QAC1B;AAxGM,AA0GV,aA1GiB,CAAA,CAAC,eAAc,YAAY,CAAC,AAAC,oBAyG1C,QAAO,CAAP,UAAQ,AAAC,CAAE;AAAE,iBAAO,CAAA,IAAG,QAAQ,CAAC;UAAE,MAxG4B,SAAO,CAAC,CAAC;MACnE,AAAC,CAkG6B,aAAY,CAlGvB,CAJS,CAAA;AAApC,cAAQ,AAAC,sCAAqC,CAAA;AAA9C,sBAAA,SAAQ,AAAC;AA6GF,eAAM,cAAY,KAmCzB;AA9IU,aAAO,CAAA,CAAC,eAAc,YAAY,CAAC,AAAC;AA4GnC,gBAAM,CAAb,UAAe,CAAA,CAAG,CAAA,cAAa,CAAG;AAAE,iBAAO,CAAA,CAAA,QAAQ,AAAC,CAAC,cAAa,CAAC,CAAC;UAAE;AAC/D,cAAI,CAAX,UAAa,CAAA,CAAG,CAAA,CAAA,CAAG;AAAE,iBAAO,CAAA,CAAA,IAAM,EAAA,CAAC;UAAE;AAC9B,0BAAgB,CAAvB,UAAyB,IAAG,CAAG;AAC3B,AAAI,cAAA,CAAA,MAAK,EAAI,CAAA,QAAO,AAAC,CAAC,IAAG,CAAC,CAAC;AAC3B,eAAI,KAAI,AAAC,CAAC,MAAK,CAAC,CAAG;AACf,kBAAM,IAAI,iBAAe,AAAC,CAAC,uCAAsC,EAAI,KAAG,CAAC,CAAC;YAC9E;AAAA,AACA,iBAAO,OAAK,CAAC;UACjB;AACO,iBAAO,CAAd,UAAgB,IAAG,CAAG,CAAA,KAAI,CAAG;AACzB,eAAI,KAAI,GAAK,GAAC,CAAG;AACb,iBAAI,kBAAiB,KAAK,AAAC,CAAC,IAAG,CAAC,CAAG;AAC/B,qBAAO,CAAA,QAAO,AAAC,CAAC,IAAG,CAAG,MAAI,CAAC,CAAC;cAChC;AAAA,YACJ,KACK,KAAI,KAAI,GAAK,GAAC,CAAG;AAClB,iBAAI,8BAA6B,KAAK,AAAC,CAAC,IAAG,CAAC,CAAG;AAC3C,qBAAO,CAAA,QAAO,AAAC,CAAC,IAAG,CAAG,MAAI,CAAC,CAAC;cAChC;AAAA,YACJ,KACK;AACD,AAAI,gBAAA,CAAA,MAAK,EAAI,CAAA,QAAO,AAAC,CAAC,IAAG,CAAG,MAAI,CAAC,CAAC;AAClC,iBAAI,CAAC,KAAI,AAAC,CAAC,MAAK,CAAC,CAAG;AAChB,qBAAO,OAAK,CAAC;cACjB;AAAA,YACJ;AAAA,AACA,gBAAM,IAAI,iBAAe,AAAC,CAAC,uCAAsC,EAAI,KAAG,CAAA,CAAI,YAAU,CAAA,CAClF,MAAI,CAAC,CAAC;UACd;AAEO,mBAAS,CAAhB,UAAkB,IAAG,CAAG;AAAE,iBAAO,CAAA,UAAS,AAAC,CAAC,IAAG,CAAC,CAAC;UAAE;AACnD,YAAW,IAAE,EAAI;AAAE,iBAAO,IAAE,CAAC;UAAE;AACxB,cAAI,CAAX,UAAa,KAAI,CAAG;AAAE,iBAAO,CAAA,KAAI,AAAC,CAAC,KAAI,CAAC,CAAC;UAAE;AACpC,kBAAQ,CAAf,UAAiB,KAAI,CAAG;AAAE,iBAAO,CAAA,MAAK,UAAU,AAAC,CAAC,KAAI,CAAC,CAAC;UAAE;AAAA,SA5IE,CAAC;MACzD,AAAC,EAAC,CAJ0B,CAAA;AAApC,cAAQ,AAAC,gCAAqC,CAAA;aAiJ1B,CAAA,OAAM,OAAO;AAjJjC,cAAQ,AAAC,kBAAqC,CAAA;AAA9C,sBAAA,SAAQ,AAAC;AAkJF,eAAM,cAAY,KAiBzB;AAjKU,aAAO,CAAA,CAAC,eAAc,YAAY,CAAC,AAAC;AAiJnC,eAAK,CAAZ,UAAc,SAAQ,AAAY,CAAG;cAAZ,MAAI,6CAAI,GAAC;AAC9B,gBAAI,EAAI,CAAA,KAAI,QAAQ,AAAC,CAAC,IAAG,CAAG,GAAC,CAAC,CAAC;AAC/B,iBAAO,IAAI,CAAA,OAAM,OAAO,AAAC,CAAC,SAAQ,CAAG,CAAA,KAAI,EAAI,IAAE,CAAC,CAAC;UACrD;AACO,mBAAS,CAAhB,UAAkB,MAAK,CAAG,CAAA,KAAI,CAAG;AAE7B,iBAAK,UAAU,EAAI,EAAA,CAAC;AACpB,iBAAO,CAAA,MAAK,KAAK,AAAC,CAAC,KAAI,CAAC,CAAC;UAC7B;AACO,gBAAM,CAAb,UAAe,MAAK,CAAG,CAAA,KAAI,CAAG;AAI1B,iBAAK,UAAU,EAAI,EAAA,CAAC;AACpB,iBAAO;AAAE,eAAC,CAAG,OAAK;AAAG,kBAAI,CAAG,MAAI;AAAA,YAAE,CAAC;UACvC;AAAA,SA/J4D,CAAC;MACzD,AAAC,EAAC,CAJ0B,CAAA;AAApC,cAAQ,AAAC,gCAAqC,CAAA;AAA9C,6BAAA,SAAQ,AAAC;AAoKF,eAAM,qBAAmB,KAEhC;AApKU,aAAO,CAAA,CAAC,eAAc,YAAY,CAAC,AAAC,4BAmKnC,IAAG,CAAV,UAAY,OAAM,CAAG;AAAE,iBAAO,CAAA,OAAM,GAAG,KAAK,AAAC,CAAC,OAAM,MAAM,CAAC,CAAC;UAAE,EAlKF,CAAC;MACzD,AAAC,EAAC,CAJ0B,CAAA;AAApC,cAAQ,AAAC,8CAAqC,CAAA;AAA9C,wBAAA,SAAQ,AAAC;AAuKF,eAAM,gBAAc,KAE3B;AAvKU,aAAO,CAAA,CAAC,eAAc,YAAY,CAAC,AAAC,uBAsKnC,KAAI,CAAX,UAAa,EAAC,CAAG,CAAA,OAAM,CAAG;AAAE,iBAAO,CAAA,EAAC,MAAM,AAAC,CAAC,IAAG,CAAG,QAAM,CAAC,CAAC;UAAE,EArKA,CAAC;MACzD,AAAC,EAAC,CAJ0B,CAAA;AAApC,cAAQ,AAAC,oCAAqC,CAAA;WAqM5B,CAAA,OAAM,KAAK;AArM7B,cAAQ,AAAC,cAAqC,CAAA;AAA9C,oBAAA,SAAQ,AAAC;AAsMF,eAAM,YAAU,KAKvB;AAzMU,aAAO,CAAA,CAAC,eAAc,YAAY,CAAC,AAAC;AAqMnC,mBAAS,CAAhB,UAAkB,EAAC,CAAG;AAAE,iBAAO,IAAI,KAAG,AAAC,CAAC,EAAC,CAAC,CAAC;UAAE;AACtC,iBAAO,CAAd,UAAgB,IAAG,CAAG;AAAE,iBAAO,CAAA,IAAG,QAAQ,AAAC,EAAC,CAAC;UAAE;AACxC,YAAE,CAAT,UAAU,AAAC,CAAE;AAAE,iBAAO,IAAI,KAAG,AAAC,EAAC,CAAC;UAAE;AAC3B,eAAK,CAAZ,UAAc,IAAG,CAAG;AAAE,iBAAO,CAAA,IAAG,OAAO,AAAC,EAAC,CAAC;UAAE;AAAA,SAvMgB,CAAC;MACzD,AAAC,EAAC,CAJ0B,CAAA;AAApC,cAAQ,AAAC,4BAAqC,CAAA;IAEf;EAC3B,CAAA;AADI,CAAC,CAAC;AA0MqB","file":"src/facade/lang.js","sourceRoot":"/Users/yamaguchi/Desktop/mean-edge/node_modules/angular2/es6/dev/","sourcesContent":["var _global = typeof window === 'undefined' ? global : window;\r\nexport { _global as global };\r\n// HACK: workaround for Traceur behavior.\r\n// It expects all transpiled modules to contain this marker.\r\n// TODO: remove this when we no longer use traceur\r\nexport var __esModule = true;\r\nexport var Type = Function;\r\nexport class BaseException extends Error {\r\n    constructor(message) {\r\n        super(message);\r\n        this.message = message;\r\n        this.stack = (new Error()).stack;\r\n    }\r\n    toString() { return this.message; }\r\n}\r\nexport var Math = _global.Math;\r\nexport var Date = _global.Date;\r\nvar assertionsEnabled_ = typeof assert !== 'undefined';\r\nvar int;\r\n// global assert support, as Dart has it...\r\n// TODO: `assert` calls need to be removed in production code!\r\nif (assertionsEnabled_) {\r\n    _global.assert = assert;\r\n    // `int` is not a valid JS type\r\n    int = assert.define('int', function (value) { return typeof value === 'number' && value % 1 === 0; });\r\n}\r\nelse {\r\n    int = {};\r\n    _global.assert = function () { };\r\n}\r\nexport { int };\r\n// This function is needed only to properly support Dart's const expressions\r\n// see https://github.com/angular/ts2dart/pull/151 for more info\r\nexport function CONST_EXPR(expr) {\r\n    return expr;\r\n}\r\nexport function CONST() {\r\n    return (target) => target;\r\n}\r\nexport class ABSTRACT {\r\n}\r\nexport class IMPLEMENTS {\r\n}\r\nexport function isPresent(obj) {\r\n    return obj !== undefined && obj !== null;\r\n}\r\nexport function isBlank(obj) {\r\n    return obj === undefined || obj === null;\r\n}\r\nexport function isString(obj) {\r\n    return typeof obj === \"string\";\r\n}\r\nexport function isFunction(obj) {\r\n    return typeof obj === \"function\";\r\n}\r\nexport function isType(obj) {\r\n    return isFunction(obj);\r\n}\r\nexport function stringify(token) {\r\n    if (typeof token === 'string') {\r\n        return token;\r\n    }\r\n    if (token === undefined || token === null) {\r\n        return '' + token;\r\n    }\r\n    if (token.name) {\r\n        return token.name;\r\n    }\r\n    return token.toString();\r\n}\r\nexport class StringWrapper {\r\n    static fromCharCode(code) { return String.fromCharCode(code); }\r\n    static charCodeAt(s, index) { return s.charCodeAt(index); }\r\n    static split(s, regExp) { return s.split(regExp); }\r\n    static equals(s, s2) { return s === s2; }\r\n    static replace(s, from, replace) {\r\n        return s.replace(from, replace);\r\n    }\r\n    static replaceAll(s, from, replace) {\r\n        return s.replace(from, replace);\r\n    }\r\n    static startsWith(s, start) { return s.startsWith(start); }\r\n    static substring(s, start, end = null) {\r\n        return s.substring(start, end === null ? undefined : end);\r\n    }\r\n    static replaceAllMapped(s, from, cb) {\r\n        return s.replace(from, function (...matches) {\r\n            // Remove offset & string from the result array\r\n            matches.splice(-2, 2);\r\n            // The callback receives match, p1, ..., pn\r\n            return cb(matches);\r\n        });\r\n    }\r\n    static contains(s, substr) { return s.indexOf(substr) != -1; }\r\n}\r\nexport class StringJoiner {\r\n    constructor(parts = []) {\r\n        this.parts = parts;\r\n    }\r\n    add(part) { this.parts.push(part); }\r\n    toString() { return this.parts.join(\"\"); }\r\n}\r\nexport class NumberParseError extends BaseException {\r\n    constructor(message) {\r\n        super();\r\n        this.message = message;\r\n    }\r\n    toString() { return this.message; }\r\n}\r\nexport class NumberWrapper {\r\n    static toFixed(n, fractionDigits) { return n.toFixed(fractionDigits); }\r\n    static equal(a, b) { return a === b; }\r\n    static parseIntAutoRadix(text) {\r\n        var result = parseInt(text);\r\n        if (isNaN(result)) {\r\n            throw new NumberParseError(\"Invalid integer literal when parsing \" + text);\r\n        }\r\n        return result;\r\n    }\r\n    static parseInt(text, radix) {\r\n        if (radix == 10) {\r\n            if (/^(\\-|\\+)?[0-9]+$/.test(text)) {\r\n                return parseInt(text, radix);\r\n            }\r\n        }\r\n        else if (radix == 16) {\r\n            if (/^(\\-|\\+)?[0-9ABCDEFabcdef]+$/.test(text)) {\r\n                return parseInt(text, radix);\r\n            }\r\n        }\r\n        else {\r\n            var result = parseInt(text, radix);\r\n            if (!isNaN(result)) {\r\n                return result;\r\n            }\r\n        }\r\n        throw new NumberParseError(\"Invalid integer literal when parsing \" + text + \" in base \" +\r\n            radix);\r\n    }\r\n    // TODO: NaN is a valid literal but is returned by parseFloat to indicate an error.\r\n    static parseFloat(text) { return parseFloat(text); }\r\n    static get NaN() { return NaN; }\r\n    static isNaN(value) { return isNaN(value); }\r\n    static isInteger(value) { return Number.isInteger(value); }\r\n}\r\nexport var RegExp = _global.RegExp;\r\nexport class RegExpWrapper {\r\n    static create(regExpStr, flags = '') {\r\n        flags = flags.replace(/g/g, '');\r\n        return new _global.RegExp(regExpStr, flags + 'g');\r\n    }\r\n    static firstMatch(regExp, input) {\r\n        // Reset multimatch regex state\r\n        regExp.lastIndex = 0;\r\n        return regExp.exec(input);\r\n    }\r\n    static matcher(regExp, input) {\r\n        // Reset regex state for the case\r\n        // someone did not loop over all matches\r\n        // last time.\r\n        regExp.lastIndex = 0;\r\n        return { re: regExp, input: input };\r\n    }\r\n}\r\nexport class RegExpMatcherWrapper {\r\n    static next(matcher) { return matcher.re.exec(matcher.input); }\r\n}\r\nexport class FunctionWrapper {\r\n    static apply(fn, posArgs) { return fn.apply(null, posArgs); }\r\n}\r\n// JS has NaN !== NaN\r\nexport function looseIdentical(a, b) {\r\n    return a === b || typeof a === \"number\" && typeof b === \"number\" && isNaN(a) && isNaN(b);\r\n}\r\n// JS considers NaN is the same as NaN for map Key (while NaN !== NaN otherwise)\r\n// see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map\r\nexport function getMapKey(value) {\r\n    return value;\r\n}\r\nexport function normalizeBlank(obj) {\r\n    return isBlank(obj) ? null : obj;\r\n}\r\nexport function isJsObject(o) {\r\n    return o !== null && (typeof o === \"function\" || typeof o === \"object\");\r\n}\r\nexport function assertionsEnabled() {\r\n    return assertionsEnabled_;\r\n}\r\nexport function print(obj) {\r\n    if (obj instanceof Error) {\r\n        console.log(obj.stack);\r\n    }\r\n    else {\r\n        console.log(obj);\r\n    }\r\n}\r\n// Can't be all uppercase as our transpiler would think it is a special directive...\r\nexport var Json = _global.JSON;\r\nexport class DateWrapper {\r\n    static fromMillis(ms) { return new Date(ms); }\r\n    static toMillis(date) { return date.getTime(); }\r\n    static now() { return new Date(); }\r\n    static toJson(date) { return date.toJSON(); }\r\n}\r\n//# sourceMappingURL=lang.js.map"]}