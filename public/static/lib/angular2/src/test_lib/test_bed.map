{"version":3,"sources":["test_bed.js"],"names":[],"mappings":"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","file":"angular2/src/test_lib/test_bed.js","sourcesContent":["import {Injector, bind} from 'angular2/di';\n\nimport {Type, isPresent, BaseException} from 'angular2/src/facade/lang';\nimport {Promise} from 'angular2/src/facade/async';\nimport {isBlank} from 'angular2/src/facade/lang';\nimport {List} from 'angular2/src/facade/collection';\n\nimport {View} from 'angular2/src/core/annotations_impl/view';\n\nimport {TemplateResolver} from 'angular2/src/core/compiler/template_resolver';\nimport {AppView} from 'angular2/src/core/compiler/view';\nimport {internalView} from 'angular2/src/core/compiler/view_ref';\nimport {DynamicComponentLoader, ComponentRef} from 'angular2/src/core/compiler/dynamic_component_loader';\n\nimport {queryView, viewRootNodes, el} from './utils';\nimport {instantiateType, getTypeOf} from './lang_utils';\n\nimport {DOCUMENT_TOKEN} from 'angular2/src/render/dom/dom_renderer';\nimport {DOM} from 'angular2/src/dom/dom_adapter';\n\n/**\n * @exportedAs angular2/test\n */\nexport class TestBed {\n  _injector: Injector;\n\n  constructor(injector: Injector) {\n    this._injector = injector;\n  }\n\n  /**\n   * Overrides the {@link View} of a {@link Component}.\n   *\n   * @see setInlineTemplate() to only override the html\n   *\n   * @param {Type} component\n   * @param {ViewDefinition} template\n   */\n  overrideView(component: Type, template: View): void {\n    this._injector.get(TemplateResolver).setView(component, template);\n  }\n\n  /**\n   * Overrides only the html of a {@link Component}.\n   * All the other propoerties of the component's {@link View} are preserved.\n   *\n   * @param {Type} component\n   * @param {string} html\n   */\n  setInlineTemplate(component: Type, html: string): void {\n    this._injector.get(TemplateResolver).setInlineTemplate(component, html);\n  }\n\n  /**\n   * Overrides the directives from the component {@link View}.\n   *\n   * @param {Type} component\n   * @param {Type} from\n   * @param {Type} to\n   */\n  overrideDirective(component: Type, from: Type, to: Type): void {\n    this._injector.get(TemplateResolver).overrideTemplateDirective(component, from, to);\n  }\n\n  /**\n   * Creates an `AppView` for the given component.\n   *\n   * Only either a component or a context needs to be specified but both can be provided for\n   * advanced use cases (ie subclassing the context).\n   *\n   * @param {Type} component\n   * @param {*} context\n   * @param {string} html Use as the component template when specified (shortcut for setInlineTemplate)\n   * @return {Promise<ViewProxy>}\n   */\n  createView(component: Type,\n             {context = null, html = null}: {context:any, html: string} = {}): Promise<ViewProxy> {\n    if (isBlank(component) && isBlank(context)) {\n      throw new BaseException('You must specified at least a component or a context');\n    }\n\n    if (isBlank(component)) {\n      component = getTypeOf(context);\n    } else if (isBlank(context)) {\n      context = instantiateType(component);\n    }\n\n    if (isPresent(html)) {\n      this.setInlineTemplate(component, html);\n    }\n\n    var doc = this._injector.get(DOCUMENT_TOKEN);\n    var rootEl = el('<div id=\"root\"></div>');\n    DOM.appendChild(doc.body, rootEl);\n\n    var componentBinding = bind(component).toValue(context);\n    return this._injector.get(DynamicComponentLoader).loadIntoNewLocation(componentBinding, null, '#root', this._injector).then((hostComponentRef) => {\n      return new ViewProxy(hostComponentRef);\n    });\n  }\n}\n\n/**\n * Proxy to `AppView` return by `createView` in {@link TestBed} which offers a high level API for tests.\n */\nexport class ViewProxy {\n  _componentRef: ComponentRef;\n  _view: AppView;\n\n  constructor(componentRef: ComponentRef) {\n    this._componentRef = componentRef;\n    this._view = internalView(componentRef.hostView).componentChildViews[0];\n  }\n\n  get context(): any {\n    return this._view.context;\n  }\n\n  get rootNodes(): List {\n    return viewRootNodes(this._view);\n  }\n\n  detectChanges(): void {\n    this._view.changeDetector.detectChanges();\n    this._view.changeDetector.checkNoChanges();\n  }\n\n  querySelector(selector) {\n    return queryView(this._view, selector);\n  }\n\n  destroy() {\n    this._componentRef.dispose();\n  }\n\n  /**\n   * @returns `AppView` returns the underlying `AppView`.\n   *\n   * Prefer using the other methods which hide implementation details.\n   */\n  get rawView(): AppView {\n    return this._view;\n  }\n}\n"]}