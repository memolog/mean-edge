{"version":3,"sources":["pipeline.js"],"names":[],"mappings":"AAAA;AAAA,KAAK,iBAAiB,AAAC,CAAC,MAAK,QAAQ;UAArC,EAAC,GAAE,YAAqB;AAAE,qBAAwB;IAAE,AAA9B,CAAC;AAAvB,WAAS,CAAT,EAAC,KAAI,CAAO,KAAG,AAAS,CAAC;CAAgC,CAAC;;;;SAA1D,EAAC,yCAAoB,CAAA,OAAM,AAAC,6BAAkB,CACtC,CAAA,0CAAqB,mDAA2B,CAAA,0CAAqB,GAAK,EAAC,OAAM,yCAAmB,CAAC,AAD/D,CACgE;AADtG,UAAM;AAAG,iBAAa;SAA9B,EAAC,8CAAoB,CAAA,OAAM,AAAC,kCAAkB,CACtC,CAAA,+CAAqB,wDAA2B,CAAA,+CAAqB,GAAK,EAAC,OAAM,8CAAmB,CAAC,AAD/D,CACgE;AAAtG,OAAG;AAAG,cAAU;EAChB,YAAU,EAFlB,EAAC,kBAAoB,CAAA,OAAM,AAAC,iBAAkB,CACtC,CAAA,mBAAqB,4BAA2B,CAAA,mBAAqB,GAAK,EAAC,OAAM,kBAAmB,CAAC,AAD/D,CACgE;AAD9G,AAAI,EAAA,WAQG,SAAM,SAAO,CAEN,AAAD;AACT,KAAG,MAAM,EAAI,GACX,SAAA,WAAU;SAAK,CAAA,WAAU,aAAa,AAAC,EAAC,SAAC,iBAAgB,CAAG,CAAA,gBAAe,CAAM;AAC/E,qBAAe,OAAO,EAAI,CAAA,iBAAgB,OAAO,YAAY,AAAC,CAAC,gBAAe,UAAU,CAAC,CAAC;IAC5F,EAAC;EAAA,IACD,SAAA,WAAU;SAAK,CAAA,WAAU,OAAO,gBAAgB,AAAC,EAAC,SAAC,MAAK,CAAG,CAAA,IAAG,CAAM;AAClE,WAAO,CAAA,MAAK,cAAc,AAAC,CAAC,WAAU,oBAAoB,AAAC,CAAC,IAAG,CAAC,CAAC,CAAC;IACpE,EAAC;EAAA,IACD,SAAA,WAAU;SAAK,CAAA,WAAU,OAAO,gBAAgB,AAAC,EAAC,SAAC,MAAK,CAAG,CAAA,IAAG,CAAM;AAClE,WAAO,CAAA,MAAK,YAAY,AAAC,CAAC,WAAU,oBAAoB,AAAC,CAAC,IAAG,CAAC,CAAC,CAAC;IAClE,EAAC;EAAA,IACD,SAAA,WAAU;SAAK,CAAA,WAAU,OAAO,gBAAgB,AAAC,CAAC,WAAU,CAAC;EAAA,EAC/D,CAAC;AAkBL,AAxCwC,CAAA;AAAxC,AAAC,eAAc,YAAY,CAAC,AAAC,YAyB3B,OAAM,CAAN,UAAQ,WAAU,AAAY;AAC5B,AAAI,MAAA,CAAA,KAAI,EAAI,CAAA,IAAG,MAAM;AACjB,kBAAU,EAAI,EAAA,CAAC;AAEnB,WAAS,WAAS,CAAE,AAAgB,CAAW;QAA3B,OAAK,6CAAQ,KAAG;AAClC,SAAI,WAAU,GAAK,CAAA,KAAI,OAAO,CAAG;AAC/B,aAAO,CAAA,cAAa,QAAQ,AAAC,CAAC,MAAK,CAAC,CAAC;MACvC;AAAA,AACI,QAAA,CAAA,IAAG,EAAI,CAAA,KAAI,CAAE,WAAU,CAAC,CAAC;AAC7B,gBAAU,GAAK,EAAA,CAAC;AAChB,WAAO,CAAA,cAAa,QAAQ,AAAC,CAAC,IAAG,AAAC,CAAC,WAAU,CAAC,CAAC,KAAK,AAAC,CAAC,UAAS,CAAC,CAAC;IACnE;AAAA,AApCJ,SAAK,eAAe,AAAC,0BACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,gBAD1B,eAAc,KAAO,OAC4B;MAAC,CAAC,CAAC,CAAC;AAqCjD,SAAO,CAAA,UAAS,AAAC,EAAC,CAAC;EACrB,MAvCmF;AAArF,KAAK,eAAe,AAAC,0CACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YAwBJ,WAAU,GAxBiB;EAAC,CAAC,CAAC,CAAC;AAwCrD","file":"angular2/src/router/pipeline.js","sourcesContent":["import {Promise, PromiseWrapper} from 'angular2/src/facade/async';\nimport {List, ListWrapper} from 'angular2/src/facade/collection';\nimport {Instruction} from './instruction';\n\n/**\n * Responsible for performing each step of navigation.\n * \"Steps\" are conceptually similar to \"middleware\"\n */\nexport class Pipeline {\n  steps:List;\n  constructor() {\n    this.steps = [\n      instruction => instruction.traverseSync((parentInstruction, childInstruction) => {\n        childInstruction.router = parentInstruction.router.childRouter(childInstruction.component);\n      }),\n      instruction => instruction.router.traverseOutlets((outlet, name) => {\n        return outlet.canDeactivate(instruction.getChildInstruction(name));\n      }),\n      instruction => instruction.router.traverseOutlets((outlet, name) => {\n        return outlet.canActivate(instruction.getChildInstruction(name));\n      }),\n      instruction => instruction.router.activateOutlets(instruction)\n    ];\n  }\n\n  process(instruction:Instruction):Promise {\n    var steps = this.steps,\n        currentStep = 0;\n\n    function processOne(result:any = true):Promise {\n      if (currentStep >= steps.length) {\n        return PromiseWrapper.resolve(result);\n      }\n      var step = steps[currentStep];\n      currentStep += 1;\n      return PromiseWrapper.resolve(step(instruction)).then(processOne);\n    }\n\n    return processOne();\n  }\n}\n"]}