{"version":3,"sources":["proto_view_factory.js"],"names":[],"mappings":"AAAA;AAAA,KAAK,iBAAiB,AAAC,CAAC,MAAK,QAAQ;kBAArC,EAAC,GAAE,YAAqB;AAAE,6BAAwB;IAAE,AAA9B,CAAC;AAAvB,WAAS,CAAT,EAAC,KAAI,CAAO,KAAG,AAAS,CAAC;CAAgC,CAAC;;;;;;;;;;EAAlD,WAAS,EAAjB,EAAC,mDAAoB,CAAA,OAAM,AAAC,oCAAkB,CACtC,CAAA,oDAAqB,6DAA2B,CAAA,oDAAqB,GAAK,EAAC,OAAM,mDAAmB,CAAC,AAD/D,CACgE;SAD9G,EAAC,8CAAoB,CAAA,OAAM,AAAC,kCAAkB,CACtC,CAAA,+CAAqB,wDAA2B,CAAA,+CAAqB,GAAK,EAAC,OAAM,8CAAmB,CAAC,AAD/D,CACgE;AACtG,OAAG;AAAG,cAAU;AAAG,aAAS;SAFpC,EAAC,wCAAoB,CAAA,OAAM,AAAC,4BAAkB,CACtC,CAAA,yCAAqB,kDAA2B,CAAA,yCAAqB,GAAK,EAAC,OAAM,wCAAmB,CAAC,AAD/D,CACgE;AAEtG,YAAQ;AAAG,UAAM;EACjB,UAAQ,EAJhB,EAAC,kDAAoB,CAAA,OAAM,AAAC,sCAAkB,CACtC,CAAA,mDAAqB,4DAA2B,CAAA,mDAAqB,GAAK,EAAC,OAAM,kDAAmB,CAAC,AAD/D,CACgE;SAD9G,EAAC,sCAAoB,CAAA,OAAM,AAAC,6BAAkB,CACtC,CAAA,uCAAqB,gDAA2B,CAAA,uCAAqB,GAAK,EAAC,OAAM,sCAAmB,CAAC,AAD/D,CACgE;AAKtG,kBAAc;AAAG,iBAAa;AAAG,gBAAY;AAAG,kBAAc;AAAG,sBAAkB;EACnF,UAAQ,EAPhB,EAAC,qDAAoB,CAAA,OAAM,AAAC,mCAAkB,CACtC,CAAA,sDAAqB,+DAA2B,CAAA,sDAAqB,GAAK,EAAC,OAAM,qDAAmB,CAAC,AAD/D,CACgE;EAQlG,UAAQ,EATpB,EAAC,uCAAoB,CAAA,OAAM,AAAC,2BAAkB,CACtC,CAAA,wCAAqB,iDAA2B,CAAA,wCAAqB,GAAK,EAAC,OAAM,uCAAmB,CAAC,AAD/D,CACgE;EAStG,aAAW,EAVnB,EAAC,WAAoB,CAAA,OAAM,AAAC,UAAkB,CACtC,CAAA,YAAqB,qBAA2B,CAAA,YAAqB,GAAK,EAAC,OAAM,WAAmB,CAAC,AAD/D,CACgE;SAD9G,EAAC,0BAAoB,CAAA,OAAM,AAAC,sBAAkB,CACtC,CAAA,2BAAqB,oCAA2B,CAAA,2BAAqB,GAAK,EAAC,OAAM,0BAAmB,CAAC,AAD/D,CACgE;AAUtG,uBAAmB;AAAG,mBAAe;AAX7C,AAAI,EAAA,wBAcJ,SAAM,sBAAoB,CAIZ,AAAD,CAAG;AACZ,KAAG,qBAAqB,EAAI,CAAA,UAAS,OAAO,AAAC,EAAC,CAAC;AAC/C,KAAG,eAAe,EAAI,EAAA,CAAC;AACzB,AArBsC,CAAA;AAAxC,AAAC,eAAc,YAAY,CAAC,AAAC;AAuB3B,kBAAgB,CAAhB,UAAkB,cAAa,AAA8B,CAAG,CAAA,gBAAe,AAAuB,CAAuB;AAC3H,AAAI,MAAA,CAAA,QAAO,EAAI,GAAC,CAAC;AAEjB,QAAS,GAAA,CAAA,iBAAgB,EAAI,EAAA,CAAG,CAAA,iBAAgB,EAAI,CAAA,cAAa,OAAO,CAAG,CAAA,iBAAgB,EAAE,CAAG;AAC9F,AAAI,QAAA,CAAA,mBAAkB,EAAI,CAAA,cAAa,CAAE,iBAAgB,CAAC,CAAC;AAC3D,aAAO,EAAI,CAAA,WAAU,OAAO,AAAC,CAAC,QAAO,CAAG,CAAA,IAAG,uBAAuB,AAAC,CAAC,mBAAkB,CAAC,CAAC,CAAC;AACzF,aAAO,EAAI,CAAA,WAAU,OAAO,AAAC,CAAC,QAAO,CAAG,CAAA,IAAG,8BAA8B,AAAC,CAAC,iBAAgB,CAAG,oBAAkB,CAAC,CAAC,CAAC;AACnH,aAAO,EAAI,CAAA,WAAU,OAAO,AAAC,CAAC,QAAO,CAAG,CAAA,IAAG,wBAAwB,AAAC,CAAC,iBAAgB,CAAG,CAAA,gBAAe,CAAE,iBAAgB,CAAC,CAAC,CAAC,CAAC;IAC/H;AAAA,AAEA,SAAO,SAAO,CAAC;EACjB;AAEA,oBAAkB,CAAlB,UAAoB,gBAAe,AAAuB,CAAS;AACjE,AAAI,MAAA,CAAA,gBAAe,EAAI,GAAC,CAAC;AAEzB,QAAS,GAAA,CAAA,YAAW,EAAI,EAAA,CAAG,CAAA,YAAW,EAAI,CAAA,gBAAe,OAAO,CAAG,GAAE,YAAW,CAAG;AACjF,AAAI,QAAA,CAAA,IAAG,EAAI,CAAA,gBAAe,CAAE,YAAW,CAAC,WAAW,CAAC;AACpD,UAAS,GAAA,CAAA,QAAO,EAAI,EAAA,CAAG,CAAA,QAAO,EAAI,CAAA,IAAG,OAAO,CAAG,GAAE,QAAO,CAAG;AACzD,kBAAU,KAAK,AAAC,CAAC,gBAAe,CAAG,CAAA,IAAG,oBAAoB,AAAC,CAAC,YAAW,CAAG,SAAO,CAAG,CAAA,IAAG,CAAE,QAAO,CAAC,CAAC,CAAC,CAAC;MACtG;AAAA,IACF;AAAA,AAEA,SAAO,iBAAe,CAAC;EACzB;AAEA,uBAAqB,CAArB,UAAuB,mBAAkB,AAAwB;;AAC/D,OAAI,OAAM,AAAC,CAAC,mBAAkB,aAAa,CAAC;AAAG,WAAO,GAAC,CAAC;AAAA,AACxD,SAAO,CAAA,WAAU,IAAI,AAAC,CAAC,mBAAkB,aAAa,GAAG,SAAA,CAAA;WAAK,CAAA,aAAY,kBAAkB,AAAC,CAAC,CAAA,CAAG,CAAA,mBAAkB,EAAE,CAAC;IAAA,EAAC,CAAC;EAC1H;AAEA,8BAA4B,CAA5B,UAA8B,iBAAgB,AAAO,CAAG,CAAA,mBAAkB,AAAwB;AAChG,AAAI,MAAA,CAAA,GAAE,EAAI,GAAC,CAAC;AACZ,aAAS,QAAQ,AAAC,CAAC,mBAAkB,iBAAiB,GAAG,SAAC,aAAY,CAAG,CAAA,YAAW,CAAM;AACxF,gBAAU,KAAK,AAAC,CAAC,GAAE,CAAG,CAAA,aAAY,iBAAiB,AAAC,CAAC,aAAY,CAAG,kBAAgB,CAAG,aAAW,CAAC,CAAC,CAAC;IACvG,EAAC,CAAC;AACF,SAAO,IAAE,CAAC;EACZ;AAEA,wBAAsB,CAAtB,UAAwB,iBAAgB,AAAO,CAAG,CAAA,gBAAe,AAAiB;;AAChF,AAAI,MAAA,CAAA,GAAE,EAAI,GAAC,CAAC;AACZ,QAAS,GAAA,CAAA,CAAA,EAAI,EAAA,CAAG,CAAA,CAAA,EAAI,CAAA,gBAAe,iBAAiB,OAAO,CAAG,CAAA,CAAA,EAAE,CAAG;AACjE,AAAI,QAAA,CAAA,eAAc,EAAI,CAAA,gBAAe,iBAAiB,CAAE,CAAA,CAAC,CAAC;AAG1D,eAAS,QAAQ,AAAC,CAAC,eAAc,iBAAiB,GAAG,SAAC,aAAY,CAAG,CAAA,YAAW,CAAM;AAGpF,AAAI,UAAA,CAAA,MAAK,EAAI,CAAA,SAAQ,OAAO,AAAC,CAAC,YAAW,CAAC,CAAC;AAC3C,AAAI,UAAA,CAAA,eAAc,EAAI,CAAA,wBAAuB,AAAC,CAAC,iBAAgB,CAAG,EAAA,CAAG,CAAA,gBAAe,WAAW,CAAE,CAAA,CAAC,CAAC,CAAC;AACpG,AAAI,UAAA,CAAA,CAAA,EAAI,CAAA,aAAY,mBAAmB,AAAC,CAAC,aAAY,CAAG,aAAW,CAAG,OAAK,CAAG,gBAAc,CAAC,CAAC;AAC9F,kBAAU,KAAK,AAAC,CAAC,GAAE,CAAG,EAAA,CAAC,CAAC;MAC1B,EAAC,CAAC;AAGF,eAAS,QAAQ,AAAC,CAAC,eAAc,qBAAqB,GAAG,SAAC,aAAY,CAAG,CAAA,YAAW,CAAM;AACxF,AAAI,UAAA,CAAA,QAAO,EAAI,IAAI,eAAa,AAAC,CAAC,iBAAgB,CAAG,EAAA,CAAC,CAAC;AACvD,AAAI,UAAA,CAAA,CAAA,EAAI,CAAA,aAAY,sBAAsB,AAAC,CAAC,QAAO,CAAG,cAAY,CAAG,aAAW,CAAC,CAAC;AAClF,kBAAU,KAAK,AAAC,CAAC,GAAE,CAAG,EAAA,CAAC,CAAC;MAC1B,EAAC,CAAC;IACJ;AAAA,AACA,SAAO,IAAE,CAAC;EACZ;AAEA,oBAAkB,CAAlB,UAAoB,iBAAgB,AAAO,CAAG,CAAA,cAAa,AAAO,CAAG,CAAA,OAAM,AAAiB,CAAoB;AAC9G,AAAI,MAAA,CAAA,EAAC,EAAI,CAAA,iBAAgB,EAAI,IAAE,CAAA,CAAI,eAAa,CAAC;AAEjD,OAAI,CAAC,UAAS,SAAS,AAAC,CAAC,IAAG,qBAAqB,CAAG,GAAC,CAAC,CAAG;AACvD,AAAI,QAAA,CAAA,eAAc,EAAI,CAAA,OAAM,gBAAgB,CAAC;AAE7C,eAAS,IAAI,AAAC,CAAC,IAAG,qBAAqB,CAAG,GAAC,CACzC,IAAI,gBAAc,AAAC,CAAC,GAAI,eAAa,AAAC,CAAC,iBAAgB,CAAG,eAAa,CAAC,CACtE,CAAA,OAAM,qBAAqB,CAAG,CAAA,OAAM,aAAa,CAAG,gBAAc,CAAC,CAAC,CAAC;IAC3E;AAAA,AAEA,SAAO,CAAA,UAAS,IAAI,AAAC,CAAC,IAAG,qBAAqB,CAAG,GAAC,CAAC,CAAC;EACtD;AAAA,KAnGmF;AAArF,KAAK,eAAe,AAAC,iEACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YAD1B,eAAc,YAAc,AAuBO,CAAA,IAAG,CAAE,CAAA,SAAQ,cAAc,CAAC,AAvBhB,IAA/C,eAAc,YAAc,AAuBuD,CAAA,IAAG,CAAE,iBAAe,CAAC,AAvBzD,GACE;EAAC,CAAC,CAAC,CAAC;AADrD,KAAK,eAAe,AAAC,mEACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YAD1B,eAAc,YAAc,AAoCW,CAAA,IAAG,CAAE,iBAAe,CAAC,AApCb,GACE;EAAC,CAAC,CAAC,CAAC;AADrD,KAAK,eAAe,AAAC,sEACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YAgDmB,SAAQ,cAAc,GAhDlB;EAAC,CAAC,CAAC,CAAC;AADrD,KAAK,eAAe,AAAC,6EACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YAD1B,eAAc,KAAO,WAsDyD,SAAQ,cAAc,GArDnD;EAAC,CAAC,CAAC,CAAC;AADrD,KAAK,eAAe,AAAC,uEACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YAD1B,eAAc,KAAO,WA8DgD,gBAAe,GA7DnC;EAAC,CAAC,CAAC,CAAC;AADrD,KAAK,eAAe,AAAC,mEACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YAD1B,eAAc,KAAO,WAArB,eAAc,KAAO,WAuF0D,gBAAe,GAtF7C;EAAC,CAAC,CAAC,CAAC;AADrD,AAAI,EAAA,mBAwGG,SAAM,iBAAe,CAGd,eAAc,AAAgB,CAAG;AAC3C,KAAG,iBAAiB,EAAI,gBAAc,CAAC;AACzC,AA7GsC,CAAA;AAAxC,AAAC,eAAc,YAAY,CAAC,AAAC;AA+G3B,gBAAc,CAAd,UAAgB,eAAc,AAAa,CAAG,CAAA,gBAAe,AAAiB,CAC9D,CAAA,eAAc,AAAwB,CAAG,CAAA,UAAS,AAAuB;AAEvF,AAAI,MAAA,CAAA,cAAa,EAAI,CAAA,eAAc,eAAe,CAAC;AACnD,AAAI,MAAA,CAAA,gBAAe,EAAI,CAAA,WAAU,IAAI,AAAC,CAAC,cAAa,GAAG,SAAA,CAAA;WAAK,IAAI,iBAAe,AAAC,CAAC,CAAA,WAAW,CAAG,WAAS,CAAC;IAAA,EAAC,CAAC;AAE3G,AAAI,MAAA,CAAA,gBAAe,EAAI,CAAA,IAAG,wBAAwB,AAAC,CAAC,eAAc,CAAC,CAAC;AACpE,AAAI,MAAA,CAAA,WAAU,EAAI,CAAA,IAAG,mBAAmB,AAAC,CAAC,gBAAe,CAAC,CAAC;AAC3D,AAAI,MAAA,CAAA,aAAY,EAAI,CAAA,IAAG,qBAAqB,AAAC,CAAC,eAAc,CAAG,YAAU,CAAC,CAAC;AAE3E,AAAI,MAAA,CAAA,mBAAkB,EAAI,CAAA,IAAG,2BAA2B,AAAC,CAAC,cAAa,CAAG,iBAAe,CAAG,iBAAe,CAAG,cAAY,CAAC,CAAC;AAC5H,AAAI,MAAA,CAAA,SAAQ,EAAI,IAAI,aAAW,AAAC,CAAC,eAAc,OAAO,CAAG,oBAAkB,CAAG,iBAAe,CAAG,YAAU,CAAG,cAAY,CAAC,CAAC;AAG3H,OAAG,sBAAsB,AAAC,CAAC,SAAQ,CAAG,eAAa,CAAG,iBAAe,CAAC,CAAA;AACtE,OAAG,qBAAqB,AAAC,CAAC,SAAQ,CAAG,iBAAe,CAAC,CAAC;AAEtD,SAAO,UAAQ,CAAC;EAClB;AAEA,mBAAiB,CAAjB,UAAmB,WAAU,AAAI;AAC/B,AAAI,MAAA,CAAA,WAAU,EAAI,CAAA,UAAS,OAAO,AAAC,EAAC,CAAC;AACrC,aAAS,QAAQ,AAAC,CAAC,WAAU,GAAG,SAAC,UAAS,CAAG,CAAA,OAAM,CAAM;AACvD,eAAS,IAAI,AAAC,CAAC,WAAU,CAAG,WAAS,CAAG,KAAG,CAAC,CAAC;IAC/C,EAAC,CAAC;AACF,SAAO,YAAU,CAAC;EACpB;AAEA,wBAAsB,CAAtB,UAAwB,eAAc;AACpC,AAAI,MAAA,CAAA,gBAAe,EAAI,CAAA,UAAS,OAAO,AAAC,EAAC,CAAC;AAC1C,aAAS,QAAQ,AAAC,CAAC,eAAc,iBAAiB,GAAG,SAAC,UAAS,CAAG,CAAA,OAAM,CAAM;AAC5E,eAAS,IAAI,AAAC,CAAC,gBAAe,CAAG,QAAM,CAAG,WAAS,CAAC,CAAC;IACvD,EAAC,CAAC;AACF,cAAU,QAAQ,AAAC,CAAC,eAAc,eAAe,GAAG,SAAA,MAAK;AACvD,eAAS,QAAQ,AAAC,CAAC,MAAK,iBAAiB,GAAG,SAAC,UAAS,CAAG,CAAA,OAAM,CAAM;AACnE,iBAAS,IAAI,AAAC,CAAC,gBAAe,CAAG,QAAM,CAAG,WAAS,CAAC,CAAC;MACvD,EAAC,CAAC;IACJ,EAAC,CAAC;AACF,SAAO,iBAAe,CAAC;EACzB;AAEA,qBAAmB,CAAnB,UAAqB,eAAc,CAAG,CAAA,WAAU;AAC9C,AAAI,MAAA,CAAA,aAAY,EAAI,CAAA,SAAQ,AAAC,CAAC,eAAc,CAAC,CAAA,CAAI,CAAA,WAAU,MAAM,AAAC,CAAC,eAAc,cAAc,CAAC,CAAA,CAAI,GAAC,CAAC;AACtG,aAAS,QAAQ,AAAC,CAAC,WAAU,GAAG,SAAC,CAAA,CAAG,CAAA,KAAI,CAAM;AAC5C,gBAAU,KAAK,AAAC,CAAC,aAAY,CAAG,MAAI,CAAC,CAAC;IACxC,EAAC,CAAC;AACF,SAAO,cAAY,CAAC;EACtB;AAEA,2BAAyB,CAAzB,UAA2B,cAAa,CAAG,CAAA,gBAAe,CAAG,CAAA,gBAAe,CAAG,CAAA,aAAY,CAAuB;AAChH,AAAI,MAAA,CAAA,qBAAoB,EAAI,IAAI,sBAAoB,AAAC,EAAC,CAAC;AACvD,AAAI,MAAA,CAAA,cAAa,EAAI,CAAA,qBAAoB,kBAAkB,AAAC,CAAC,cAAa,CAAG,iBAAe,CAAC,CAAC;AAC9F,AAAI,MAAA,CAAA,gBAAe,EAAI,CAAA,qBAAoB,oBAAoB,AAAC,CAAC,gBAAe,CAAC,CAAC;AAElF,AAAI,MAAA,CAAA,eAAc,EAAI,KAAG,CAAC;AAC1B,AAAI,MAAA,CAAA,IAAG,EAAI,OAAK,CAAC;AACjB,OAAI,SAAQ,AAAC,CAAC,gBAAe,CAAC,CAAG;AAC/B,AAAI,QAAA,CAAA,mBAAkB,EAAc,CAAA,gBAAe,WAAW,CAAC;AAC/D,oBAAc,EAAI,CAAA,mBAAkB,gBAAgB,CAAC;AACrD,SAAG,EAAI,QAAM,CAAC;IAChB;AAAA,AAEA,SAAO,CAAA,IAAG,iBAAiB,0BAA0B,AAAC,CACpD,IAAG,CACH,eAAa,CACb,cAAY,CACZ,iBAAe,CACf,gBAAc,CAChB,CAAC;EACH;AAEA,sBAAoB,CAApB,UAAsB,SAAQ,CAAG,CAAA,cAAa,CAAG,CAAA,gBAAe,CAAG;AACjE,QAAS,GAAA,CAAA,CAAA,EAAE,EAAA,CAAG,CAAA,CAAA,EAAE,CAAA,cAAa,OAAO,CAAG,CAAA,CAAA,EAAE,CAAG;AAC1C,AAAI,QAAA,CAAA,mBAAkB,EAAI,CAAA,cAAa,CAAE,CAAA,CAAC,CAAC;AAC3C,AAAI,QAAA,CAAA,IAAG,EAAI,CAAA,gBAAe,CAAE,CAAA,CAAC,CAAC;AAE9B,AAAI,QAAA,CAAA,qBAAoB,EAAI,CAAA,IAAG,4CAA4C,AAAC,CACxE,CAAA,CAAG,CAAA,SAAQ,eAAe,CAAG,eAAa,CAAC,CAAC;AAChD,AAAI,QAAA,CAAA,oBAAmB,EAAI,CAAA,IAAG,4BAA4B,AAAC,CACvD,CAAA,CAAG,sBAAoB,CAAG,KAAG,CAAG,oBAAkB,CAAC,CAAC;AAExD,SAAG,qBAAqB,AAAC,CAAC,SAAQ,CAAG,EAAA,CAAG,oBAAkB,CAAG,qBAAmB,CAAG,KAAG,CAAC,CAAC;IAC1F;AAAA,EACF;AAEA,4CAA0C,CAA1C,UAA4C,WAAU,CAAG,CAAA,cAAa,CAAG,CAAA,oBAAmB,CAAG;AAC7F,AAAI,MAAA,CAAA,QAAO,EAAI,EAAA,CAAC;AAChB,KAAG;AACD,AAAI,QAAA,CAAA,mBAAkB,EAAI,CAAA,oBAAmB,CAAE,WAAU,CAAC,CAAC;AAC3D,gBAAU,EAAI,CAAA,mBAAkB,YAAY,CAAC;AAC7C,SAAI,WAAU,IAAM,EAAC,CAAA,CAAG;AACtB,eAAO,GAAK,CAAA,mBAAkB,iBAAiB,CAAC;AAChD,AAAI,UAAA,CAAA,aAAY,EAAI,CAAA,cAAa,CAAE,WAAU,CAAC,CAAC;AAC/C,WAAI,SAAQ,AAAC,CAAC,aAAY,qBAAqB,CAAC,CAAG;AACjD,eAAO,IAAI,uCAAqC,AAAC,CAAC,aAAY,qBAAqB,CAAG,SAAO,CAAC,CAAC;QACjG;AAAA,MACF;AAAA,IACF,QAAS,WAAU,IAAM,EAAC,CAAA,EAAE;AAC5B,SAAO,IAAI,uCAAqC,AAAC,CAAC,IAAG,CAAG,EAAC,CAAA,CAAC,CAAC;EAC7D;AAEA,4BAA0B,CAA1B,UAA4B,WAAU,CAAG,CAAA,qBAAoB,CAAG,CAAA,gBAAe,CAAG,CAAA,mBAAkB,CAAG;AACrG,AAAI,MAAA,CAAA,oBAAmB,EAAI,KAAG,CAAC;AAI/B,AAAI,MAAA,CAAA,YAAW,EAAI,CAAA,UAAS,KAAK,AAAC,CAAC,mBAAkB,iBAAiB,CAAC,CAAA,CAAI,EAAA,CAAC;AAC5E,OAAI,gBAAe,WAAW,OAAO,EAAI,EAAA,CAAA,EAAK,aAAW,CAAG;AAC1D,yBAAmB,EAAI,IAAI,qBAAmB,AAAC,CAC3C,qBAAoB,qBAAqB,CAAG,YAAU,CACtD,CAAA,gBAAe,WAAW,CAC1B,CAAA,SAAQ,AAAC,CAAC,gBAAe,mBAAmB,CAAC,CAAG,CAAA,qBAAoB,SAAS,CACjF,CAAC;AACD,yBAAmB,WAAW,EAAI,CAAA,mBAAkB,eAAe,CAAC;AACpE,SAAI,YAAW,CAAG;AAChB,2BAAmB,gBAAgB,EAAI,CAAA,SAAQ,AAAC,CAAC,gBAAe,mBAAmB,CAAC,CAAC;AACrF,2BAAmB,cAAc,EAAI,CAAA,OAAM,AAAC,CAAC,gBAAe,mBAAmB,CAAC,CAAC;AAGjF,AAAI,UAAA,CAAA,kBAAiB,EAAI,CAAA,UAAS,IAAI,AAAC,CAAC,mBAAkB,iBAAiB,CAAG,aAAW,CAAC,CAAC;AAC3F,WAAI,SAAQ,AAAC,CAAC,kBAAiB,CAAC,CAAG;AACjC,6BAAmB,mBAAmB,EAAI,mBAAiB,CAAC;QAC9D;AAAA,MACF;AAAA,IACF;AAAA,AACA,SAAO,qBAAmB,CAAC;EAC7B;AAEA,qBAAmB,CAAnB,UAAqB,SAAQ,CAAG,CAAA,iBAAgB,CAAG,CAAA,mBAAkB,CAAG,CAAA,oBAAmB,CAAG,CAAA,gBAAe;AAC3G,AAAI,MAAA,CAAA,MAAK,EAAI,KAAG,CAAC;AACjB,OAAI,mBAAkB,YAAY,IAAM,EAAC,CAAA,CAAG;AAC1C,WAAK,EAAI,CAAA,SAAQ,eAAe,CAAE,mBAAkB,YAAY,CAAC,CAAC;IACpE;AAAA,AACI,MAAA,CAAA,QAAO,EAAI,CAAA,SAAQ,YAAY,AAAC,CAClC,MAAK,CACL,CAAA,mBAAkB,iBAAiB,CACnC,qBAAmB,CACnB,CAAA,gBAAe,mBAAmB,CACpC,CAAC;AACD,YAAQ,UAAU,AAAC,CAAC,mBAAkB,cAAc,CAAG,kBAAgB,CAAG,EAAC,CAAA,CAAC,CAAC;AAM7E,aAAS,QAAQ,AAAC,CAAC,mBAAkB,iBAAiB,GAAG,SAAC,UAAS,CAAG,CAAA,OAAM,CAAM;AAChF,eAAS,IAAI,AAAC,CAAC,SAAQ,YAAY,CAAG,WAAS,CAAG,KAAG,CAAC,CAAC;IACzD,EAAC,CAAC;AACF,SAAO,SAAO,CAAC;EACjB;AAEA,qBAAmB,CAAnB,UAAqB,SAAQ,CAAG,CAAA,gBAAe,AAAuB,CAAG;AACvE,QAAS,GAAA,CAAA,iBAAgB,EAAI,EAAA,CAAG,CAAA,iBAAgB,EAAI,CAAA,gBAAe,OAAO,CAAG,GAAE,iBAAgB,CAAG;AAChG,AAAI,QAAA,CAAA,IAAG,EAAI,CAAA,gBAAe,CAAE,iBAAgB,CAAC,iBAAiB,CAAC;AAC/D,UAAS,GAAA,CAAA,CAAA,EAAI,EAAA,CAAG,CAAA,CAAA,EAAI,CAAA,IAAG,OAAO,CAAG,CAAA,CAAA,EAAE,CAAG;AACpC,AAAI,UAAA,CAAA,eAAc,EAAI,CAAA,IAAG,CAAE,CAAA,CAAC,CAAC;AAG7B,gBAAQ,UAAU,AAAC,CAAC,eAAc,cAAc,CAAG,kBAAgB,CAAG,EAAA,CAAC,CAAC;MAC1E;AAAA,IACF;AAAA,EACF;AAAA,KAhRmF;AAArF,KAAK,eAAe,AAAC,iCACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,cAsGzB,WAAS,AAAC,EAAC,EAtGqC;EAAC,CAAC,CAAC,CAAC;AADrD,KAAK,eAAe,AAAC,gCACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YA0GI,eAAc,GA1GK;EAAC,CAAC,CAAC,CAAC;AADrD,KAAK,eAAe,AAAC,0DACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YA8GQ,YAAW,IAAoB,gBAAe,IAC7C,SAAQ,aAAa,IAhHxD,eAAc,YAAc,AAgH0C,CAAA,IAAG,CAAE,iBAAe,CAAC,AAhH5C,GACE;EAAC,CAAC,CAAC,CAAC;AADrD,KAAK,eAAe,AAAC,6DACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YAkIO,GAAE,GAlIc;EAAC,CAAC,CAAC,CAAC;AADrD,KAAK,eAAe,AAAC,+DACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,gBAD1B,eAAc,YAAc,AAsQuB,CAAA,IAAG,CAAE,iBAAe,CAAC,AAtQzB,GACE;EAAC,CAAC,CAAC,CAAC;AADrD,AAAI,EAAA,mBAmRJ,SAAM,iBAAe,CAKP,gBAAe,CAAG,CAAA,aAAY;;AACxC,KAAG,iBAAiB,EAAI,GAAC,CAAC;AAC1B,KAAG,WAAW,EAAI,GAAC,CAAC;AACpB,KAAG,mBAAmB,EAAI,KAAG,CAAC;AAC9B,YAAU,QAAQ,AAAC,CAAC,gBAAe,GAAG,SAAC,qBAAoB,CAAM;AAC/D,AAAI,MAAA,CAAA,gBAAe,EAAI,CAAA,aAAY,CAAE,qBAAoB,eAAe,CAAC,CAAC;AAC1E,OAAI,gBAAe,WAAW,WAAa,UAAQ,CAAG;AAEpD,4BAAsB,EAAI,iBAAe,CAAC;AAC1C,gBAAU,OAAO,AAAC,CAAC,qBAAoB,CAAG,EAAA,CAAG,sBAAoB,CAAC,CAAC;AACnE,gBAAU,OAAO,AAAC,CAAC,eAAc,CAAG,EAAA,CAAG,iBAAe,CAAC,CAAC;IAC1D,KAAO;AACL,gBAAU,KAAK,AAAC,CAAC,qBAAoB,CAAG,sBAAoB,CAAC,CAAC;AAC9D,gBAAU,KAAK,AAAC,CAAC,eAAc,CAAG,iBAAe,CAAC,CAAC;IACrD;AAAA,EACF,EAAC,CAAC;AAGN,AA1SwC,CAAA;AAAxC,AAAC,eAAc,YAAY,CAAC,AAAC,0BAAwD;AAArF,AAAI,EAAA,yCA4SJ,SAAM,uCAAqC,CAG7B,oBAAmB,AAAqB,CAAG,CAAA,QAAO,AAAO,CAAG;AACtE,KAAG,qBAAqB,EAAI,qBAAmB,CAAC;AAChD,KAAG,SAAS,EAAI,SAAO,CAAC;AAC1B,AAlTsC,CAAA;AAAxC,AAAC,eAAc,YAAY,CAAC,AAAC,gDAAwD;AAArF,KAAK,eAAe,AAAC,sDACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YA8SS,oBAAmB,IA/StD,eAAc,KAAO,UAC4B;EAAC,CAAC,CAAC,CAAC;AAmTrD","file":"angular2/src/core/compiler/proto_view_factory.js","sourcesContent":["import {Injectable} from 'angular2/src/di/annotations_impl';\n\nimport {List, ListWrapper, MapWrapper} from 'angular2/src/facade/collection';\nimport {isPresent, isBlank} from 'angular2/src/facade/lang';\nimport {reflector} from 'angular2/src/reflection/reflection';\n\nimport {ChangeDetection, DirectiveIndex, BindingRecord, DirectiveRecord, ProtoChangeDetector} from 'angular2/change_detection';\nimport {Component} from '../annotations_impl/annotations';\n\nimport * as renderApi from 'angular2/src/render/api';\nimport {AppProtoView} from './view';\nimport {ProtoElementInjector, DirectiveBinding} from './element_injector';\n\n\nclass BindingRecordsCreator {\n  _directiveRecordsMap;\n  _textNodeIndex:number;\n\n  constructor() {\n    this._directiveRecordsMap = MapWrapper.create();\n    this._textNodeIndex = 0;\n  }\n\n  getBindingRecords(elementBinders:List<renderApi.ElementBinder>, sortedDirectives:List<SortedDirectives>):List<BindingRecord> {\n    var bindings = [];\n\n    for (var boundElementIndex = 0; boundElementIndex < elementBinders.length; boundElementIndex++) {\n      var renderElementBinder = elementBinders[boundElementIndex];\n      bindings = ListWrapper.concat(bindings, this._createTextNodeRecords(renderElementBinder));\n      bindings = ListWrapper.concat(bindings, this._createElementPropertyRecords(boundElementIndex, renderElementBinder));\n      bindings = ListWrapper.concat(bindings, this._createDirectiveRecords(boundElementIndex, sortedDirectives[boundElementIndex]));\n    }\n\n    return bindings;\n  }\n\n  getDirectiveRecords(sortedDirectives:List<SortedDirectives>): List {\n    var directiveRecords = [];\n\n    for (var elementIndex = 0; elementIndex < sortedDirectives.length; ++elementIndex) {\n      var dirs = sortedDirectives[elementIndex].directives;\n      for (var dirIndex = 0; dirIndex < dirs.length; ++dirIndex) {\n        ListWrapper.push(directiveRecords, this._getDirectiveRecord(elementIndex, dirIndex, dirs[dirIndex]));\n      }\n    }\n\n    return directiveRecords;\n  }\n\n  _createTextNodeRecords(renderElementBinder:renderApi.ElementBinder) {\n    if (isBlank(renderElementBinder.textBindings)) return [];\n    return ListWrapper.map(renderElementBinder.textBindings, b => BindingRecord.createForTextNode(b, this._textNodeIndex++));\n  }\n\n  _createElementPropertyRecords(boundElementIndex:number, renderElementBinder:renderApi.ElementBinder) {\n    var res = [];\n    MapWrapper.forEach(renderElementBinder.propertyBindings, (astWithSource, propertyName) => {\n      ListWrapper.push(res, BindingRecord.createForElement(astWithSource, boundElementIndex, propertyName));\n    });\n    return res;\n  }\n\n  _createDirectiveRecords(boundElementIndex:number, sortedDirectives:SortedDirectives) {\n    var res = [];\n    for (var i = 0; i < sortedDirectives.renderDirectives.length; i++) {\n      var directiveBinder = sortedDirectives.renderDirectives[i];\n\n      // directive properties\n      MapWrapper.forEach(directiveBinder.propertyBindings, (astWithSource, propertyName) => {\n        // TODO: these setters should eventually be created by change detection, to make\n        // it monomorphic!\n        var setter = reflector.setter(propertyName);\n        var directiveRecord = this._getDirectiveRecord(boundElementIndex, i, sortedDirectives.directives[i]);\n        var b = BindingRecord.createForDirective(astWithSource, propertyName, setter, directiveRecord);\n        ListWrapper.push(res, b);\n      });\n\n      // host properties\n      MapWrapper.forEach(directiveBinder.hostPropertyBindings, (astWithSource, propertyName) => {\n        var dirIndex = new DirectiveIndex(boundElementIndex, i);\n        var b = BindingRecord.createForHostProperty(dirIndex, astWithSource, propertyName);\n        ListWrapper.push(res, b);\n      });\n    }\n    return res;\n  }\n\n  _getDirectiveRecord(boundElementIndex:number, directiveIndex:number, binding:DirectiveBinding): DirectiveRecord {\n    var id = boundElementIndex * 100 + directiveIndex;\n\n    if (!MapWrapper.contains(this._directiveRecordsMap, id)) {\n      var changeDetection = binding.changeDetection;\n\n      MapWrapper.set(this._directiveRecordsMap, id,\n        new DirectiveRecord(new DirectiveIndex(boundElementIndex, directiveIndex),\n          binding.callOnAllChangesDone, binding.callOnChange, changeDetection));\n    }\n\n    return MapWrapper.get(this._directiveRecordsMap, id);\n  }\n}\n\n\n@Injectable()\nexport class ProtoViewFactory {\n  _changeDetection:ChangeDetection;\n\n  constructor(changeDetection:ChangeDetection) {\n    this._changeDetection = changeDetection;\n  }\n\n  createProtoView(parentProtoView:AppProtoView, componentBinding:DirectiveBinding,\n                  renderProtoView: renderApi.ProtoViewDto, directives:List<DirectiveBinding>):AppProtoView {\n\n    var elementBinders = renderProtoView.elementBinders;\n    var sortedDirectives = ListWrapper.map(elementBinders, b => new SortedDirectives(b.directives, directives));\n\n    var variableBindings = this._createVariableBindings(renderProtoView);\n    var protoLocals = this._createProtoLocals(variableBindings);\n    var variableNames = this._createVariableNames(parentProtoView, protoLocals);\n\n    var protoChangeDetector = this._createProtoChangeDetector(elementBinders, sortedDirectives, componentBinding, variableNames);\n    var protoView = new AppProtoView(renderProtoView.render, protoChangeDetector, variableBindings, protoLocals, variableNames);\n\n    // TODO: vsavkin refactor to pass element binders into proto view\n    this._createElementBinders(protoView, elementBinders, sortedDirectives)\n    this._bindDirectiveEvents(protoView, sortedDirectives);\n\n    return protoView;\n  }\n\n  _createProtoLocals(varBindings:Map):Map {\n    var protoLocals = MapWrapper.create();\n    MapWrapper.forEach(varBindings, (mappedName, varName) => {\n      MapWrapper.set(protoLocals, mappedName, null);\n    });\n    return protoLocals;\n  }\n\n  _createVariableBindings(renderProtoView):Map {\n    var variableBindings = MapWrapper.create();\n    MapWrapper.forEach(renderProtoView.variableBindings, (mappedName, varName) => {\n      MapWrapper.set(variableBindings, varName, mappedName);\n    });\n    ListWrapper.forEach(renderProtoView.elementBinders, binder => {\n      MapWrapper.forEach(binder.variableBindings, (mappedName, varName) => {\n        MapWrapper.set(variableBindings, varName, mappedName);\n      });\n    });\n    return variableBindings;\n  }\n\n  _createVariableNames(parentProtoView, protoLocals):List {\n    var variableNames = isPresent(parentProtoView) ? ListWrapper.clone(parentProtoView.variableNames) : [];\n    MapWrapper.forEach(protoLocals, (v, local) => {\n      ListWrapper.push(variableNames, local);\n    });\n    return variableNames;\n  }\n\n  _createProtoChangeDetector(elementBinders, sortedDirectives, componentBinding, variableNames):ProtoChangeDetector {\n    var bindingRecordsCreator = new BindingRecordsCreator();\n    var bindingRecords = bindingRecordsCreator.getBindingRecords(elementBinders, sortedDirectives);\n    var directiveRecords = bindingRecordsCreator.getDirectiveRecords(sortedDirectives);\n\n    var changeDetection = null;\n    var name = 'root';\n    if (isPresent(componentBinding)) {\n      var componentAnnotation:Component = componentBinding.annotation;\n      changeDetection = componentAnnotation.changeDetection;\n      name = 'dummy';\n    }\n\n    return this._changeDetection.createProtoChangeDetector(\n      name,\n      bindingRecords,\n      variableNames,\n      directiveRecords,\n      changeDetection\n    );\n  }\n\n  _createElementBinders(protoView, elementBinders, sortedDirectives) {\n    for (var i=0; i<elementBinders.length; i++) {\n      var renderElementBinder = elementBinders[i];\n      var dirs = sortedDirectives[i];\n\n      var parentPeiWithDistance = this._findParentProtoElementInjectorWithDistance(\n          i, protoView.elementBinders, elementBinders);\n      var protoElementInjector = this._createProtoElementInjector(\n          i, parentPeiWithDistance, dirs, renderElementBinder);\n\n      this._createElementBinder(protoView, i, renderElementBinder, protoElementInjector, dirs);\n    }\n  }\n\n  _findParentProtoElementInjectorWithDistance(binderIndex, elementBinders, renderElementBinders) {\n    var distance = 0;\n    do {\n      var renderElementBinder = renderElementBinders[binderIndex];\n      binderIndex = renderElementBinder.parentIndex;\n      if (binderIndex !== -1) {\n        distance += renderElementBinder.distanceToParent;\n        var elementBinder = elementBinders[binderIndex];\n        if (isPresent(elementBinder.protoElementInjector)) {\n          return new ParentProtoElementInjectorWithDistance(elementBinder.protoElementInjector, distance);\n        }\n      }\n    } while (binderIndex !== -1);\n    return new ParentProtoElementInjectorWithDistance(null, -1);\n  }\n\n  _createProtoElementInjector(binderIndex, parentPeiWithDistance, sortedDirectives, renderElementBinder) {\n    var protoElementInjector = null;\n    // Create a protoElementInjector for any element that either has bindings *or* has one\n    // or more var- defined. Elements with a var- defined need a their own element injector\n    // so that, when hydrating, $implicit can be set to the element.\n    var hasVariables = MapWrapper.size(renderElementBinder.variableBindings) > 0;\n    if (sortedDirectives.directives.length > 0 || hasVariables) {\n      protoElementInjector = new ProtoElementInjector(\n          parentPeiWithDistance.protoElementInjector, binderIndex,\n          sortedDirectives.directives,\n          isPresent(sortedDirectives.componentDirective), parentPeiWithDistance.distance\n      );\n      protoElementInjector.attributes = renderElementBinder.readAttributes;\n      if (hasVariables) {\n        protoElementInjector.exportComponent = isPresent(sortedDirectives.componentDirective);\n        protoElementInjector.exportElement = isBlank(sortedDirectives.componentDirective);\n\n        // experiment\n        var exportImplicitName = MapWrapper.get(renderElementBinder.variableBindings, '\\$implicit');\n        if (isPresent(exportImplicitName)) {\n          protoElementInjector.exportImplicitName = exportImplicitName;\n        }\n      }\n    }\n    return protoElementInjector;\n  }\n\n  _createElementBinder(protoView, boundElementIndex, renderElementBinder, protoElementInjector, sortedDirectives) {\n    var parent = null;\n    if (renderElementBinder.parentIndex !== -1) {\n      parent = protoView.elementBinders[renderElementBinder.parentIndex];\n    }\n    var elBinder = protoView.bindElement(\n      parent,\n      renderElementBinder.distanceToParent,\n      protoElementInjector,\n      sortedDirectives.componentDirective\n    );\n    protoView.bindEvent(renderElementBinder.eventBindings, boundElementIndex, -1);\n    // variables\n    // The view's locals needs to have a full set of variable names at construction time\n    // in order to prevent new variables from being set later in the lifecycle. Since we don't want\n    // to actually create variable bindings for the $implicit bindings, add to the\n    // protoLocals manually.\n    MapWrapper.forEach(renderElementBinder.variableBindings, (mappedName, varName) => {\n      MapWrapper.set(protoView.protoLocals, mappedName, null);\n    });\n    return elBinder;\n  }\n\n  _bindDirectiveEvents(protoView, sortedDirectives:List<SortedDirectives>) {\n    for (var boundElementIndex = 0; boundElementIndex < sortedDirectives.length; ++boundElementIndex) {\n      var dirs = sortedDirectives[boundElementIndex].renderDirectives;\n      for (var i = 0; i < dirs.length; i++) {\n        var directiveBinder = dirs[i];\n\n        // directive events\n        protoView.bindEvent(directiveBinder.eventBindings, boundElementIndex, i);\n      }\n    }\n  }\n}\n\nclass SortedDirectives {\n  componentDirective: DirectiveBinding;\n  renderDirectives: List<renderApi.DirectiveBinder>;\n  directives: List<DirectiveBinding>;\n\n  constructor(renderDirectives, allDirectives) {\n    this.renderDirectives = [];\n    this.directives = [];\n    this.componentDirective = null;\n    ListWrapper.forEach(renderDirectives, (renderDirectiveBinder) => {\n      var directiveBinding = allDirectives[renderDirectiveBinder.directiveIndex];\n      if (directiveBinding.annotation instanceof Component) {\n        // component directives need to be the first binding in ElementInjectors!\n        this.componentDirective = directiveBinding;\n        ListWrapper.insert(this.renderDirectives, 0, renderDirectiveBinder);\n        ListWrapper.insert(this.directives, 0, directiveBinding);\n      } else {\n        ListWrapper.push(this.renderDirectives, renderDirectiveBinder);\n        ListWrapper.push(this.directives, directiveBinding);\n      }\n    });\n\n  }\n}\n\nclass ParentProtoElementInjectorWithDistance {\n  protoElementInjector:ProtoElementInjector;\n  distance:number;\n  constructor(protoElementInjector:ProtoElementInjector, distance:number) {\n    this.protoElementInjector = protoElementInjector;\n    this.distance = distance;\n  }\n}\n"]}