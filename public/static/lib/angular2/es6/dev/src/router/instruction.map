{"version":3,"sources":["instruction.js"],"names":[],"mappings":"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","file":"angular2/src/router/instruction.es6","sourcesContent":["import {Map, MapWrapper, StringMap, StringMapWrapper,  List, ListWrapper} from 'angular2/src/facade/collection';\nimport {Promise, PromiseWrapper} from 'angular2/src/facade/async';\nimport {isPresent} from 'angular2/src/facade/lang';\n\nexport class RouteParams {\n  params:Map<string, string>;\n  constructor(params:StringMap) {\n    this.params = params;\n  }\n\n  get(param:string) {\n    return StringMapWrapper.get(this.params, param);\n  }\n}\n\nexport class Instruction {\n  component:any;\n  _children:Map<string, Instruction>;\n  router:any;\n  matchedUrl:string;\n  params:Map<string, string>;\n  reuse:boolean;\n\n  constructor({params, component, children, matchedUrl}:{params:StringMap, component:any, children:Map, matchedUrl:string} = {}) {\n    this.reuse = false;\n    this.matchedUrl = matchedUrl;\n    if (isPresent(children)) {\n      this._children = children;\n      var childUrl;\n      StringMapWrapper.forEach(this._children, (child, _) => {\n        childUrl = child.matchedUrl;\n      });\n      if (isPresent(childUrl)) {\n        this.matchedUrl += childUrl;\n      }\n    } else {\n      this._children = StringMapWrapper.create();\n    }\n    this.component = component;\n    this.params = params;\n  }\n\n  getChildInstruction(outletName:string) {\n    return StringMapWrapper.get(this._children, outletName);\n  }\n\n  forEachChild(fn:Function) {\n    StringMapWrapper.forEach(this._children, fn);\n  }\n\n  mapChildrenAsync(fn):Promise {\n    return mapObjAsync(this._children, fn);\n  }\n\n  /**\n   * Does a synchronous, breadth-first traversal of the graph of instructions.\n   * Takes a function with signature:\n   * (parent:Instruction, child:Instruction) => {}\n   */\n  traverseSync(fn:Function) {\n    this.forEachChild((childInstruction, _) => fn(this, childInstruction));\n    this.forEachChild((childInstruction, _) => childInstruction.traverseSync(fn));\n  }\n\n  /**\n   * Does an asynchronous, breadth-first traversal of the graph of instructions.\n   * Takes a function with signature:\n   * (child:Instruction, parentOutletName:string) => {}\n   */\n  traverseAsync(fn:Function) {\n    return this.mapChildrenAsync(fn)\n        .then((_) => this.mapChildrenAsync((childInstruction, _) => childInstruction.traverseAsync(fn)));\n  }\n\n\n  /**\n   * Takes a currently active instruction and sets a reuse flag on this instruction\n   */\n  reuseComponentsFrom(oldInstruction:Instruction) {\n    this.forEachChild((childInstruction, outletName) => {\n      var oldInstructionChild = oldInstruction.getChildInstruction(outletName);\n      if (shouldReuseComponent(childInstruction, oldInstructionChild)) {\n        childInstruction.reuse = true;\n      }\n    });\n  }\n}\n\nfunction shouldReuseComponent(instr1:Instruction, instr2:Instruction) {\n  return instr1.component == instr2.component &&\n    StringMapWrapper.equals(instr1.params, instr2.params);\n}\n\nfunction mapObjAsync(obj:StringMap, fn) {\n  return PromiseWrapper.all(mapObj(obj, fn));\n}\n\nfunction mapObj(obj:StringMap, fn):List {\n  var result = ListWrapper.create();\n  StringMapWrapper.forEach(obj, (value, key) => ListWrapper.push(result, fn(value, key)));\n  return result;\n}\n\nexport var noopInstruction = new Instruction();\n"]}