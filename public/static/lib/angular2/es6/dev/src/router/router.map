{"version":3,"sources":["router.js"],"names":[],"mappings":"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","file":"angular2/src/router/router.es6","sourcesContent":["import {Promise, PromiseWrapper, EventEmitter, ObservableWrapper} from 'angular2/src/facade/async';\nimport {Map, MapWrapper, List, ListWrapper} from 'angular2/src/facade/collection';\nimport {isBlank, isPresent, Type} from 'angular2/src/facade/lang';\n\nimport {RouteRegistry} from './route_registry';\nimport {Pipeline} from './pipeline';\nimport {Instruction} from './instruction';\nimport {RouterOutlet} from './router_outlet';\nimport {Location} from './location';\n\n/**\n * # Router\n * The router is responsible for mapping URLs to components.\n *\n * You can see the state of the router by inspecting the read-only field `router.navigating`.\n * This may be useful for showing a spinner, for instance.\n *\n * @exportedAs angular2/router\n */\nexport class Router {\n  hostComponent:any;\n  parent:Router;\n  navigating:boolean;\n  lastNavigationAttempt: string;\n  previousUrl:string;\n\n  _currentInstruction:Instruction;\n\n  _pipeline:Pipeline;\n  _registry:RouteRegistry;\n  _outlets:Map<any, RouterOutlet>;\n  _children:Map<any, Router>;\n  _subject:EventEmitter;\n  _location:Location;\n\n  constructor(registry:RouteRegistry, pipeline:Pipeline, location:Location, parent:Router, hostComponent) {\n    this.hostComponent = hostComponent;\n    this.navigating = false;\n    this.parent = parent;\n    this.previousUrl = null;\n    this._outlets = MapWrapper.create();\n    this._children = MapWrapper.create();\n    this._location = location;\n    this._registry = registry;\n    this._pipeline = pipeline;\n    this._subject = new EventEmitter();\n    this._currentInstruction = null;\n  }\n\n\n  /**\n   * Constructs a child router. You probably don't need to use this unless you're writing a reusable component.\n   */\n  childRouter(outletName = 'default') {\n    if (!MapWrapper.contains(this._children, outletName)) {\n      MapWrapper.set(this._children, outletName, new ChildRouter(this, outletName));\n    }\n    return MapWrapper.get(this._children, outletName);\n  }\n\n\n  /**\n   * Register an object to notify of route changes. You probably don't need to use this unless you're writing a reusable component.\n   */\n  registerOutlet(outlet:RouterOutlet, name = 'default'):Promise {\n    MapWrapper.set(this._outlets, name, outlet);\n    if (isPresent(this._currentInstruction)) {\n      var childInstruction = this._currentInstruction.getChildInstruction(name);\n      return outlet.activate(childInstruction);\n    }\n    return PromiseWrapper.resolve(true);\n  }\n\n\n  /**\n   * Update the routing configuration and trigger a navigation.\n   *\n   * # Usage\n   *\n   * ```\n   * router.config({ 'path': '/', 'component': IndexCmp});\n   * ```\n   *\n   * Or:\n   *\n   * ```\n   * router.config([\n   *   { 'path': '/', 'component': IndexComp },\n   *   { 'path': '/user/:id', 'component': UserComp },\n   * ]);\n   * ```\n   *\n   */\n  config(config:any) {\n    if (config instanceof List) {\n      config.forEach((configObject) => {\n        // TODO: this is a hack\n        this._registry.config(this.hostComponent, configObject);\n      })\n    } else {\n      this._registry.config(this.hostComponent, config);\n    }\n    return this.renavigate();\n  }\n\n\n  /**\n   * Navigate to a URL. Returns a promise that resolves to the canonical URL for the route.\n   */\n  navigate(url:string):Promise {\n    if (this.navigating) {\n      return PromiseWrapper.resolve(true);\n    }\n\n    this.lastNavigationAttempt = url;\n\n    var matchedInstruction = this.recognize(url);\n\n    if (isBlank(matchedInstruction)) {\n      return PromiseWrapper.resolve(false);\n    }\n\n    if(isPresent(this._currentInstruction)) {\n      matchedInstruction.reuseComponentsFrom(this._currentInstruction);\n    }\n\n    matchedInstruction.router = this;\n    this._startNavigating();\n\n    var result = this._pipeline.process(matchedInstruction)\n        .then((_) => {\n          this._location.go(matchedInstruction.matchedUrl);\n          ObservableWrapper.callNext(this._subject, matchedInstruction.matchedUrl);\n          this._finishNavigating();\n          this._currentInstruction = matchedInstruction;\n        });\n\n    PromiseWrapper.catchError(result, (_) => this._finishNavigating());\n\n    return result;\n  }\n\n  _startNavigating() {\n    this.navigating = true;\n  }\n\n  _finishNavigating() {\n    this.navigating = false;\n  }\n\n  /**\n   * Subscribe to URL updates from the router\n   */\n  subscribe(onNext) {\n    ObservableWrapper.subscribe(this._subject, onNext);\n  }\n\n\n  activateOutlets(instruction:Instruction):Promise {\n    return this._queryOutlets((outlet, name) => {\n      var childInstruction = instruction.getChildInstruction(name);\n      if (childInstruction.reuse) {\n        return PromiseWrapper.resolve(true);\n      }\n      return outlet.activate(childInstruction);\n    })\n    .then((_) => instruction.mapChildrenAsync((instruction, _) => {\n      return instruction.router.activateOutlets(instruction);\n    }));\n  }\n\n  traverseOutlets(fn):Promise {\n    return this._queryOutlets(fn)\n        .then((_) => mapObjAsync(this._children, (child, _) => child.traverseOutlets(fn)));\n  }\n\n  _queryOutlets(fn):Promise {\n    return mapObjAsync(this._outlets, fn);\n  }\n\n\n  /**\n   * Given a URL, returns an instruction representing the component graph\n   */\n  recognize(url:string) {\n    return this._registry.recognize(url, this.hostComponent);\n  }\n\n\n  /**\n   * Navigates to either the last URL successfully navigated to, or the last URL requested if the router has yet to successfully navigate.\n   */\n  renavigate():Promise {\n    var destination = isBlank(this.previousUrl) ? this.lastNavigationAttempt : this.previousUrl;\n    if (this.navigating || isBlank(destination)) {\n      return PromiseWrapper.resolve(false);\n    }\n    return this.navigate(destination);\n  }\n\n\n  /**\n   * Generate a URL from a component name and optional map of parameters. The URL is relative to the app's base href.\n   */\n  generate(name:string, params:any) {\n    return this._registry.generate(name, params, this.hostComponent);\n  }\n}\n\nexport class RootRouter extends Router {\n  constructor(registry:RouteRegistry, pipeline:Pipeline, location:Location, hostComponent:Type) {\n    super(registry, pipeline, location, null, hostComponent);\n    this._location.subscribe((change) => this.navigate(change['url']));\n    this._registry.configFromComponent(hostComponent);\n    this.navigate(location.path());\n  }\n}\n\nclass ChildRouter extends Router {\n  constructor(parent:Router, hostComponent) {\n    super(parent._registry, parent._pipeline, parent._location, parent, hostComponent);\n    this.parent = parent;\n  }\n}\n\nfunction mapObjAsync(obj:Map, fn) {\n  return PromiseWrapper.all(mapObj(obj, fn));\n}\n\nfunction mapObj(obj:Map, fn):List {\n  var result = ListWrapper.create();\n  MapWrapper.forEach(obj, (value, key) => ListWrapper.push(result, fn(value, key)));\n  return result;\n}\n"]}