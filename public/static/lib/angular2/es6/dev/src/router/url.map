{"version":3,"sources":["url.js"],"names":[],"mappings":"AAAA,KAAO,EAAC,aAAY;AAAG,cAAY,CAAC,KAAO,2BAAyB,CAAC;AAErE,AAAI,EAAA,CAAA,iBAAgB,EAAI,EACtB,GAAE,CAAG,IAAE,CAAG,IAAE,CAAG,IAAE,CAAG,IAAE,CAAG,IAAE,CAAG,IAAE,CAAG,IAAE,CAAG,IAAE,CAAG,IAAE,CAAG,IAAE,CAAG,IAAE,CAAG,KAAG,CACjE,CAAC;AAED,AAAI,EAAA,CAAA,QAAO,EAAI,CAAA,aAAY,OAAO,AAAC,CAAC,KAAI,EAAI,CAAA,iBAAgB,KAAK,AAAC,CAAC,KAAI,CAAC,CAAA,CAAI,IAAE,CAAG,IAAE,CAAC,CAAC;AAErF,KAAO,SAAS,YAAU,CAAE,MAAK,AAAO,CAAG;AACzC,OAAO,CAAA,aAAY,iBAAiB,AAAC,CAAC,MAAK,CAAG,SAAO,CAAG,EAAC,KAAI,IAAM;AACjE,SAAO,CAAA,IAAG,EAAI,MAAI,CAAC;EACrB,CAAC,CAAC;AACJ;AAAA,AAZA,KAAK,eAAe,AAAC,2BACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YAD1B,MAAK,KAAgB,UAC4B;EAAC,CAAC,CAAC,CAAC;AAYrD","file":"angular2/src/router/url.es6","sourcesContent":["import {RegExpWrapper, StringWrapper} from 'angular2/src/facade/lang';\n\nvar specialCharacters = [\n  '/', '.', '*', '+', '?', '|', '(', ')', '[', ']', '{', '}', '\\\\'\n];\n\nvar escapeRe = RegExpWrapper.create('(\\\\' + specialCharacters.join('|\\\\') + ')', 'g');\n\nexport function escapeRegex(string:string) {\n  return StringWrapper.replaceAllMapped(string, escapeRe, (match) => {\n    return \"\\\\\" + match;\n  });\n}\n"]}