{"version":3,"sources":["convert.js"],"names":[],"mappings":"AAAA,KAAO,EAAC,WAAU;AAAG,WAAS,CAAC,KAAO,iCAA+B,CAAC;AACtE,KAAO,EAAC,SAAQ,CAAC,KAAO,2BAAyB,CAAC;AAClD,KAAO,EAAC,iBAAgB,CAAC,KAAO,0BAAwB,CAAC;AAMzD,KAAO,SAAS,uBAAqB,CAAE,IAAG,AAAmB,CAAQ;AACnE,OAAO,CAAA,UAAS,gBAAgB,AAAC,CAAC,CAChC,CAAC,IAAG,CAAG,CAAA,IAAG,GAAG,CAAC,CACd,EAAC,UAAS,CAAG,CAAA,IAAG,SAAS,CAAC,CAC1B,EAAC,iBAAgB,CAAG,CAAA,IAAG,gBAAgB,CAAC,CACxC,EAAC,eAAc,CAAG,CAAA,eAAc,AAAC,CAAC,IAAG,cAAc,CAAC,CAAC,CACrD,EAAC,gBAAe,CAAG,CAAA,eAAc,AAAC,CAAC,IAAG,eAAe,CAAC,CAAC,CACvD,EAAC,gBAAe,CAAG,CAAA,eAAc,AAAC,CAAC,IAAG,eAAe,CAAC,CAAC,CACvD,EAAC,aAAY,CAAG,CAAA,eAAc,AAAC,CAAC,IAAG,YAAY,CAAC,CAAC,CACjD,EAAC,YAAW,CAAG,CAAA,eAAc,AAAC,CAAC,IAAG,WAAW,CAAC,CAAC,CAC/C,EAAC,gBAAe,CAAG,CAAA,eAAc,AAAC,CAAC,IAAG,eAAe,CAAC,CAAC,CACvD,EAAC,MAAK,CAAG,CAAA,IAAG,KAAK,CAAC,CAClB,EAAC,SAAQ,CAAG,EAAA,CAAC,CACf,CAAC,CAAC;AACJ;AAAA,AAtBA,KAAK,eAAe,AAAC,sCACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YAOmB,iBAAgB,GAPZ;EAAC,CAAC,CAAC,CAAC;AA4BrD,KAAO,SAAS,yBAAuB,CAAE,GAAE,AAAK,CAAsB;AACpE,OAAO,IAAI,kBAAgB,AAAC,CAAC;AAC3B,KAAC,CAAG,CAAA,UAAS,IAAI,AAAC,CAAC,GAAE,CAAG,KAAG,CAAC;AAC5B,WAAO,CAAG,CAAA,UAAS,IAAI,AAAC,CAAC,GAAE,CAAG,WAAS,CAAC;AACxC,kBAAc,CAAG,CAAA,UAAS,IAAI,AAAC,CAAC,GAAE,CAAG,kBAAgB,CAAC;AACtD,gBAAY,CAAG,CAAA,eAAc,AAAC,CAAC,UAAS,IAAI,AAAC,CAAC,GAAE,CAAG,gBAAc,CAAC,CAAC;AACnE,iBAAa,CAAG,CAAA,eAAc,AAAC,CAAC,UAAS,IAAI,AAAC,CAAC,GAAE,CAAG,iBAAe,CAAC,CAAC;AACrE,cAAU,CAAG,CAAA,eAAc,AAAC,CAAC,UAAS,IAAI,AAAC,CAAC,GAAE,CAAG,cAAY,CAAC,CAAC;AAC/D,iBAAa,CAAG,CAAA,eAAc,AAAC,CAAC,UAAS,IAAI,AAAC,CAAC,GAAE,CAAG,iBAAe,CAAC,CAAC;AACrE,aAAS,CAAG,CAAA,eAAc,AAAC,CAAC,UAAS,IAAI,AAAC,CAAC,GAAE,CAAG,aAAW,CAAC,CAAC;AAC7D,iBAAa,CAAG,CAAA,eAAc,AAAC,CAAC,UAAS,IAAI,AAAC,CAAC,GAAE,CAAG,iBAAe,CAAC,CAAC;AACrE,OAAG,CAAG,CAAA,UAAS,IAAI,AAAC,CAAC,GAAE,CAAG,OAAK,CAAC;AAAA,EAClC,CAAC,CAAC;AACJ;AAAA,AA1CA,KAAK,eAAe,AAAC,wCACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YA4BoB,GAAE,GA5BC;EAAC,CAAC,CAAC,CAAC;AA8CrD,OAAS,gBAAc,CAAE,CAAA,CAAG;AAC1B,KAAI,CAAC,SAAQ,AAAC,CAAC,CAAA,CAAC;AAAG,SAAO,KAAG,CAAC;AAAA,AAC9B,OAAO,CAAA,WAAU,OAAO,AAAC,CAAC,CAAA,CAAC,CAAA,CAAI,CAAA,WAAU,MAAM,AAAC,CAAC,CAAA,CAAC,CAAA,CAAI,CAAA,UAAS,MAAM,AAAC,CAAC,CAAA,CAAC,CAAC;AAC3E;AAAA","file":"angular2/src/render/dom/convert.es6","sourcesContent":["import {ListWrapper, MapWrapper} from 'angular2/src/facade/collection';\nimport {isPresent} from 'angular2/src/facade/lang';\nimport {DirectiveMetadata} from 'angular2/src/render/api';\n\n/**\n * Converts a [DirectiveMetadata] to a map representation. This creates a copy,\n * that is, subsequent changes to `meta` will not be mirrored in the map.\n */\nexport function directiveMetadataToMap(meta: DirectiveMetadata): Map {\n  return MapWrapper.createFromPairs([\n    ['id', meta.id],\n    ['selector', meta.selector],\n    ['compileChildren', meta.compileChildren],\n    ['hostListeners', _cloneIfPresent(meta.hostListeners)],\n    ['hostProperties', _cloneIfPresent(meta.hostProperties)],\n    ['hostAttributes', _cloneIfPresent(meta.hostAttributes)],\n    ['hostActions', _cloneIfPresent(meta.hostActions)],\n    ['properties', _cloneIfPresent(meta.properties)],\n    ['readAttributes', _cloneIfPresent(meta.readAttributes)],\n    ['type', meta.type],\n    ['version', 1]\n  ]);\n}\n\n/**\n * Converts a map representation of [DirectiveMetadata] into a\n * [DirectiveMetadata] object. This creates a copy, that is, subsequent changes\n * to `map` will not be mirrored in the [DirectiveMetadata] object.\n */\nexport function directiveMetadataFromMap(map: Map): DirectiveMetadata {\n  return new DirectiveMetadata({\n    id: MapWrapper.get(map, 'id'),\n    selector: MapWrapper.get(map, 'selector'),\n    compileChildren: MapWrapper.get(map, 'compileChildren'),\n    hostListeners: _cloneIfPresent(MapWrapper.get(map, 'hostListeners')),\n    hostProperties: _cloneIfPresent(MapWrapper.get(map, 'hostProperties')),\n    hostActions: _cloneIfPresent(MapWrapper.get(map, 'hostActions')),\n    hostAttributes: _cloneIfPresent(MapWrapper.get(map, 'hostAttributes')),\n    properties: _cloneIfPresent(MapWrapper.get(map, 'properties')),\n    readAttributes: _cloneIfPresent(MapWrapper.get(map, 'readAttributes')),\n    type: MapWrapper.get(map, 'type')\n  });\n}\n\n/**\n * Clones the [List] or [Map] `o` if it is present.\n */\nfunction _cloneIfPresent(o) {\n  if (!isPresent(o)) return null;\n  return ListWrapper.isList(o) ? ListWrapper.clone(o) : MapWrapper.clone(o);\n}\n"]}