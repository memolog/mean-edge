{"version":3,"sources":["dom_renderer.js"],"names":[],"mappings":"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","file":"angular2/src/render/dom/dom_renderer.es6","sourcesContent":["import {Inject, Injectable} from 'angular2/src/di/annotations_impl';\nimport {int, isPresent, isBlank, BaseException, RegExpWrapper} from 'angular2/src/facade/lang';\nimport {ListWrapper, MapWrapper, Map, StringMapWrapper, List} from 'angular2/src/facade/collection';\n\nimport {DOM} from 'angular2/src/dom/dom_adapter';\n\nimport {Content} from './shadow_dom/content_tag';\nimport {ShadowDomStrategy} from './shadow_dom/shadow_dom_strategy';\nimport {EventManager} from './events/event_manager';\n\nimport {DomProtoView, DomProtoViewRef, resolveInternalDomProtoView} from './view/proto_view';\nimport {DomView, DomViewRef, resolveInternalDomView} from './view/view';\nimport {DomViewContainer} from './view/view_container';\nimport {NG_BINDING_CLASS_SELECTOR, NG_BINDING_CLASS} from './util';\n\nimport {Renderer, RenderProtoViewRef, RenderViewRef} from '../api';\n\n// TODO(tbosch): use an OpaqueToken here once our transpiler supports\n// const expressions!\nexport const DOCUMENT_TOKEN = 'DocumentToken';\n\nvar _DOCUMENT_SELECTOR_REGEX = RegExpWrapper.create('\\\\:document(.+)');\n\n@Injectable()\nexport class DomRenderer extends Renderer {\n  _eventManager:EventManager;\n  _shadowDomStrategy:ShadowDomStrategy;\n  _document;\n\n  constructor(eventManager:EventManager, shadowDomStrategy:ShadowDomStrategy, @Inject(DOCUMENT_TOKEN) document) {\n    super();\n    this._eventManager = eventManager;\n    this._shadowDomStrategy = shadowDomStrategy;\n    this._document = document;\n  }\n\n  createInPlaceHostView(parentHostViewRef:RenderViewRef, hostElementSelector:string, hostProtoViewRef:RenderProtoViewRef):RenderViewRef {\n    var containerNode;\n    var documentSelectorMatch = RegExpWrapper.firstMatch(_DOCUMENT_SELECTOR_REGEX, hostElementSelector);\n    if (isPresent(documentSelectorMatch)) {\n      containerNode = this._document;\n      hostElementSelector = documentSelectorMatch[1];\n    } else if (isPresent(parentHostViewRef)) {\n      var parentHostView = resolveInternalDomView(parentHostViewRef);\n      containerNode = parentHostView.shadowRoot;\n    } else {\n      containerNode = this._document;\n    }\n    var element = DOM.querySelector(containerNode, hostElementSelector);\n    if (isBlank(element)) {\n      throw new BaseException(`The selector \"${hostElementSelector}\" did not match any elements`);\n    }\n    var hostProtoView = resolveInternalDomProtoView(hostProtoViewRef);\n    return new DomViewRef(this._createView(hostProtoView, element));\n  }\n\n  destroyInPlaceHostView(parentHostViewRef:RenderViewRef, hostViewRef:RenderViewRef) {\n    var hostView = resolveInternalDomView(hostViewRef);\n    this._removeViewNodes(hostView);\n  }\n\n  createView(protoViewRef:RenderProtoViewRef):RenderViewRef {\n    var protoView = resolveInternalDomProtoView(protoViewRef);\n    return new DomViewRef(this._createView(protoView, null));\n  }\n\n  destroyView(view:RenderViewRef) {\n    // noop for now\n  }\n\n  attachComponentView(hostViewRef:RenderViewRef, elementIndex:number, componentViewRef:RenderViewRef) {\n    var hostView = resolveInternalDomView(hostViewRef);\n    var componentView = resolveInternalDomView(componentViewRef);\n    var element = hostView.boundElements[elementIndex];\n    var lightDom = hostView.lightDoms[elementIndex];\n    if (isPresent(lightDom)) {\n      lightDom.attachShadowDomView(componentView);\n    }\n    var shadowRoot = this._shadowDomStrategy.prepareShadowRoot(element);\n    this._moveViewNodesIntoParent(shadowRoot, componentView);\n    componentView.hostLightDom = lightDom;\n    componentView.shadowRoot = shadowRoot;\n  }\n\n  setComponentViewRootNodes(componentViewRef:RenderViewRef, rootNodes:List) {\n    var componentView = resolveInternalDomView(componentViewRef);\n    this._removeViewNodes(componentView);\n    componentView.rootNodes = rootNodes;\n    this._moveViewNodesIntoParent(componentView.shadowRoot, componentView);\n  }\n\n  detachComponentView(hostViewRef:RenderViewRef, boundElementIndex:number, componentViewRef:RenderViewRef) {\n    var hostView = resolveInternalDomView(hostViewRef);\n    var componentView = resolveInternalDomView(componentViewRef);\n    this._removeViewNodes(componentView);\n    var lightDom = hostView.lightDoms[boundElementIndex];\n    if (isPresent(lightDom)) {\n      lightDom.detachShadowDomView();\n    }\n    componentView.hostLightDom = null;\n    componentView.shadowRoot = null;\n  }\n\n  attachViewInContainer(parentViewRef:RenderViewRef, boundElementIndex:number, atIndex:number, viewRef:RenderViewRef) {\n    var parentView = resolveInternalDomView(parentViewRef);\n    var view = resolveInternalDomView(viewRef);\n    var viewContainer = this._getOrCreateViewContainer(parentView, boundElementIndex);\n    ListWrapper.insert(viewContainer.views, atIndex, view);\n    view.hostLightDom = parentView.hostLightDom;\n\n    var directParentLightDom = parentView.getDirectParentLightDom(boundElementIndex);\n    if (isBlank(directParentLightDom)) {\n      var siblingToInsertAfter;\n      if (atIndex == 0) {\n        siblingToInsertAfter = parentView.boundElements[boundElementIndex];\n      } else {\n        siblingToInsertAfter = ListWrapper.last(viewContainer.views[atIndex - 1].rootNodes);\n      }\n      this._moveViewNodesAfterSibling(siblingToInsertAfter, view);\n    } else {\n      directParentLightDom.redistribute();\n    }\n    // new content tags might have appeared, we need to redistribute.\n    if (isPresent(parentView.hostLightDom)) {\n      parentView.hostLightDom.redistribute();\n    }\n  }\n\n  detachViewInContainer(parentViewRef:RenderViewRef, boundElementIndex:number, atIndex:number, viewRef:RenderViewRef) {\n    var parentView = resolveInternalDomView(parentViewRef);\n    var view = resolveInternalDomView(viewRef);\n    var viewContainer = parentView.viewContainers[boundElementIndex];\n    var detachedView = viewContainer.views[atIndex];\n    ListWrapper.removeAt(viewContainer.views, atIndex);\n    var directParentLightDom = parentView.getDirectParentLightDom(boundElementIndex);\n    if (isBlank(directParentLightDom)) {\n      this._removeViewNodes(detachedView);\n    } else {\n      directParentLightDom.redistribute();\n    }\n    view.hostLightDom = null;\n    // content tags might have disappeared we need to do redistribution.\n    if (isPresent(parentView.hostLightDom)) {\n      parentView.hostLightDom.redistribute();\n    }\n  }\n\n  hydrateView(viewRef:RenderViewRef) {\n    var view = resolveInternalDomView(viewRef);\n    if (view.hydrated) throw new BaseException('The view is already hydrated.');\n    view.hydrated = true;\n\n    for (var i = 0; i < view.lightDoms.length; ++i) {\n      var lightDom = view.lightDoms[i];\n      if (isPresent(lightDom)) {\n        lightDom.redistribute();\n      }\n    }\n\n    //add global events\n    view.eventHandlerRemovers = ListWrapper.create();\n    var binders = view.proto.elementBinders;\n    for (var binderIdx = 0; binderIdx < binders.length; binderIdx++) {\n      var binder = binders[binderIdx];\n      if (isPresent(binder.globalEvents)) {\n        for (var i = 0; i < binder.globalEvents.length; i++) {\n          var globalEvent = binder.globalEvents[i];\n          var remover = this._createGlobalEventListener(view, binderIdx, globalEvent.name, globalEvent.target, globalEvent.fullName);\n          ListWrapper.push(view.eventHandlerRemovers, remover);\n        }\n      }\n    }\n    if (isPresent(view.hostLightDom)) {\n      view.hostLightDom.redistribute();\n    }\n  }\n\n  dehydrateView(viewRef:RenderViewRef) {\n    var view = resolveInternalDomView(viewRef);\n\n    //remove global events\n    for (var i = 0; i < view.eventHandlerRemovers.length; i++) {\n      view.eventHandlerRemovers[i]();\n    }\n\n    view.eventHandlerRemovers = null;\n    view.hydrated = false;\n  }\n\n  setElementProperty(viewRef:RenderViewRef, elementIndex:number, propertyName:string, propertyValue:any):void {\n    var view = resolveInternalDomView(viewRef);\n    view.setElementProperty(elementIndex, propertyName, propertyValue);\n  }\n\n  callAction(viewRef:RenderViewRef, elementIndex:number, actionExpression:string, actionArgs:any):void {\n    var view = resolveInternalDomView(viewRef);\n    view.callAction(elementIndex, actionExpression, actionArgs);\n  }\n\n  setText(viewRef:RenderViewRef, textNodeIndex:number, text:string):void {\n    var view = resolveInternalDomView(viewRef);\n    DOM.setText(view.boundTextNodes[textNodeIndex], text);\n  }\n\n  setEventDispatcher(viewRef:RenderViewRef, dispatcher:any/*api.EventDispatcher*/):void {\n    var view = resolveInternalDomView(viewRef);\n    view.eventDispatcher = dispatcher;\n  }\n\n  _createView(protoView:DomProtoView, inplaceElement): DomView {\n    var rootElementClone = isPresent(inplaceElement) ? inplaceElement : DOM.importIntoDoc(protoView.element);\n    var elementsWithBindingsDynamic;\n    if (protoView.isTemplateElement) {\n      elementsWithBindingsDynamic = DOM.querySelectorAll(DOM.content(rootElementClone), NG_BINDING_CLASS_SELECTOR);\n    } else {\n      elementsWithBindingsDynamic = DOM.getElementsByClassName(rootElementClone, NG_BINDING_CLASS);\n    }\n\n    var elementsWithBindings = ListWrapper.createFixedSize(elementsWithBindingsDynamic.length);\n    for (var binderIdx = 0; binderIdx < elementsWithBindingsDynamic.length; ++binderIdx) {\n      elementsWithBindings[binderIdx] = elementsWithBindingsDynamic[binderIdx];\n    }\n\n    var viewRootNodes;\n    if (protoView.isTemplateElement) {\n      var childNode = DOM.firstChild(DOM.content(rootElementClone));\n      viewRootNodes = []; // TODO(perf): Should be fixed size, since we could pre-compute in in DomProtoView\n      // Note: An explicit loop is the fastest way to convert a DOM array into a JS array!\n      while(childNode != null) {\n        ListWrapper.push(viewRootNodes, childNode);\n        childNode = DOM.nextSibling(childNode);\n      }\n    } else {\n      viewRootNodes = [rootElementClone];\n    }\n    var binders = protoView.elementBinders;\n    var boundTextNodes = [];\n    var boundElements = ListWrapper.createFixedSize(binders.length);\n    var contentTags = ListWrapper.createFixedSize(binders.length);\n\n    for (var binderIdx = 0; binderIdx < binders.length; binderIdx++) {\n      var binder = binders[binderIdx];\n      var element;\n      if (binderIdx === 0 && protoView.rootBindingOffset === 1) {\n        element = rootElementClone;\n      } else {\n        element = elementsWithBindings[binderIdx - protoView.rootBindingOffset];\n      }\n      boundElements[binderIdx] = element;\n\n      // boundTextNodes\n      var childNodes = DOM.childNodes(DOM.templateAwareRoot(element));\n      var textNodeIndices = binder.textNodeIndices;\n      for (var i = 0; i<textNodeIndices.length; i++) {\n        ListWrapper.push(boundTextNodes, childNodes[textNodeIndices[i]]);\n      }\n\n      // contentTags\n      var contentTag = null;\n      if (isPresent(binder.contentTagSelector)) {\n        contentTag = new Content(element, binder.contentTagSelector);\n      }\n      contentTags[binderIdx] = contentTag;\n    }\n\n    var view = new DomView(\n      protoView, viewRootNodes,\n      boundTextNodes, boundElements, contentTags\n    );\n\n    for (var binderIdx = 0; binderIdx < binders.length; binderIdx++) {\n      var binder = binders[binderIdx];\n      var element = boundElements[binderIdx];\n\n      // lightDoms\n      var lightDom = null;\n      if (isPresent(binder.componentId)) {\n        lightDom = this._shadowDomStrategy.constructLightDom(view, boundElements[binderIdx]);\n      }\n      view.lightDoms[binderIdx] = lightDom;\n\n      // init contentTags\n      var contentTag = contentTags[binderIdx];\n      if (isPresent(contentTag)) {\n        var destLightDom = view.getDirectParentLightDom(binderIdx);\n        contentTag.init(destLightDom);\n      }\n\n      // events\n      if (isPresent(binder.eventLocals) && isPresent(binder.localEvents)) {\n        for (var i = 0; i < binder.localEvents.length; i++) {\n          this._createEventListener(view, element, binderIdx, binder.localEvents[i].name, binder.eventLocals);\n        }\n      }\n    }\n\n    return view;\n  }\n\n  _createEventListener(view, element, elementIndex, eventName, eventLocals) {\n    this._eventManager.addEventListener(element, eventName, (event) => {\n      view.dispatchEvent(elementIndex, eventName, event);\n    });\n  }\n\n\n  _moveViewNodesAfterSibling(sibling, view) {\n    for (var i = view.rootNodes.length - 1; i >= 0; --i) {\n      DOM.insertAfter(sibling, view.rootNodes[i]);\n    }\n  }\n\n  _moveViewNodesIntoParent(parent, view) {\n    for (var i = 0; i < view.rootNodes.length; ++i) {\n      DOM.appendChild(parent, view.rootNodes[i]);\n    }\n  }\n\n  _removeViewNodes(view) {\n    var len = view.rootNodes.length;\n    if (len == 0) return;\n    var parent = view.rootNodes[0].parentNode;\n    for (var i = len - 1; i >= 0; --i) {\n      DOM.removeChild(parent, view.rootNodes[i]);\n    }\n  }\n\n  _getOrCreateViewContainer(parentView:DomView, boundElementIndex) {\n    var vc = parentView.viewContainers[boundElementIndex];\n    if (isBlank(vc)) {\n      vc = new DomViewContainer();\n      parentView.viewContainers[boundElementIndex] = vc;\n    }\n    return vc;\n  }\n\n  _createGlobalEventListener(view, elementIndex, eventName, eventTarget, fullName): Function {\n    return this._eventManager.addGlobalEventListener(eventTarget, eventName, (event) => {\n      view.dispatchEvent(elementIndex, fullName, event);\n    });\n  }\n\n}\n"]}