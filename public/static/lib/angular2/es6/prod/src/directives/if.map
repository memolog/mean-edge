{"version":3,"sources":["if.js"],"names":[],"mappings":"AAAA,KAAO,EAAC,SAAQ,CAAC,KAAO,iDAA+C,CAAC;AACxE,KAAO,EAAC,gBAAe,CAAC,KAAO,gDAA8C,CAAC;AAC9E,KAAO,EAAC,YAAW,CAAC,KAAO,sCAAoC,CAAC;AAChE,KAAO,EAAC,OAAM,CAAC,KAAO,2BAAyB,CAAC;AA+BhD,KAAO,MAAM,GAAC;AAKZ,YAAU,CAAE,aAAY,AAAkB,CAAG,CAAA,YAAW,AAAa,CAAG;AACtE,OAAG,cAAc,EAAI,cAAY,CAAC;AAClC,OAAG,cAAc,EAAI,KAAG,CAAC;AACzB,OAAG,aAAa,EAAI,aAAW,CAAC;EAClC;AAAA,AAEA,IAAI,UAAQ,CAAE,YAAW,CAAiB;AACxC,OAAI,YAAW,GAAK,EAAC,OAAM,AAAC,CAAC,IAAG,cAAc,CAAC,CAAA,EAAK,EAAC,IAAG,cAAc,CAAC,CAAG;AACxE,SAAG,cAAc,EAAI,KAAG,CAAC;AACzB,SAAG,cAAc,OAAO,AAAC,CAAC,IAAG,aAAa,CAAC,CAAC;IAC9C,KAAO,KAAI,CAAC,YAAW,CAAA,EAAK,EAAC,OAAM,AAAC,CAAC,IAAG,cAAc,CAAC,CAAA,EAAK,CAAA,IAAG,cAAc,CAAC,CAAG;AAC/E,SAAG,cAAc,EAAI,MAAI,CAAC;AAC1B,SAAG,cAAc,MAAM,AAAC,EAAC,CAAC;IAC5B;AAAA,EACF;AAAA,AACF;AAAA,AAtDA,KAAK,eAAe,AAAC,mBACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,cA2BzB,UAAQ,AAAC,CAAC;AACT,aAAO,CAAG,OAAK;AACf,eAAS,CAAG,EACV,WAAU,CAAG,KAAG,CAClB;AAAA,IACF,CAAC,EAhCgD;EAAC,CAAC,CAAC,CAAC;AADrD,KAAK,eAAe,AAAC,kBACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YAsCG,gBAAe,IAAgB,YAAW,GAtCtB;EAAC,CAAC,CAAC,CAAC;AAsDrD","file":"angular2/src/directives/if.es6","sourcesContent":["import {Directive} from 'angular2/src/core/annotations_impl/annotations';\nimport {ViewContainerRef} from 'angular2/src/core/compiler/view_container_ref';\nimport {ProtoViewRef} from 'angular2/src/core/compiler/view_ref';\nimport {isBlank} from 'angular2/src/facade/lang';\n\n/**\n * Removes or recreates a portion of the DOM tree based on an {expression}.\n *\n * If the expression assigned to `if` evaluates to a false value then the element is removed from the\n * DOM, otherwise a clone of the element is reinserted into the DOM.\n *\n * # Example:\n *\n * ```\n * <div *if=\"errorCount > 0\" class=\"error\">\n *   <!-- Error message displayed when the errorCount property on the current context is greater than 0. -->\n *   {{errorCount}} errors detected\n * </div>\n * ```\n *\n * # Syntax\n *\n * - `<div *if=\"condition\">...</div>`\n * - `<div template=\"if condition\">...</div>`\n * - `<template [if]=\"condition\"><div>...</div></template>`\n *\n * @exportedAs angular2/directives\n */\n@Directive({\n  selector: '[if]',\n  properties: {\n    'condition': 'if'\n  }\n})\nexport class If {\n  viewContainer: ViewContainerRef;\n  protoViewRef: ProtoViewRef;\n  prevCondition: boolean;\n\n  constructor(viewContainer: ViewContainerRef, protoViewRef:ProtoViewRef) {\n    this.viewContainer = viewContainer;\n    this.prevCondition = null;\n    this.protoViewRef = protoViewRef;\n  }\n\n  set condition(newCondition /* boolean */) {\n    if (newCondition && (isBlank(this.prevCondition) || !this.prevCondition)) {\n      this.prevCondition = true;\n      this.viewContainer.create(this.protoViewRef);\n    } else if (!newCondition && (isBlank(this.prevCondition) || this.prevCondition)) {\n      this.prevCondition = false;\n      this.viewContainer.clear();\n    }\n  }\n}\n"]}