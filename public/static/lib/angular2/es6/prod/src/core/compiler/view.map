{"version":3,"sources":["view.js"],"names":[],"mappings":"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","file":"angular2/src/core/compiler/view.es6","sourcesContent":["import {ListWrapper, MapWrapper, Map, StringMapWrapper, List} from 'angular2/src/facade/collection';\nimport {AST, Locals, ChangeDispatcher, ProtoChangeDetector, ChangeDetector,\n  ChangeRecord, BindingRecord, DirectiveRecord, DirectiveIndex, ChangeDetectorRef} from 'angular2/change_detection';\n\nimport {ProtoElementInjector, ElementInjector, PreBuiltObjects, DirectiveBinding} from './element_injector';\nimport {ElementBinder} from './element_binder';\nimport {IMPLEMENTS, int, isPresent, isBlank, BaseException} from 'angular2/src/facade/lang';\nimport * as renderApi from 'angular2/src/render/api';\n\nexport class AppViewContainer {\n  views: List<AppView>;\n\n  constructor() {\n    // The order in this list matches the DOM order.\n    this.views = [];\n  }\n}\n\n/**\n * Const of making objects: http://jsperf.com/instantiate-size-of-object\n *\n */\n@IMPLEMENTS(ChangeDispatcher)\n// TODO(tbosch): this is not supported in dart2js (no '.' is allowed)\n// @IMPLEMENTS(renderApi.EventDispatcher)\nexport class AppView {\n  render:renderApi.RenderViewRef;\n  /// This list matches the _nodes list. It is sparse, since only Elements have ElementInjector\n  rootElementInjectors:List<ElementInjector>;\n  elementInjectors:List<ElementInjector>;\n  changeDetector:ChangeDetector;\n  componentChildViews: List<AppView>;\n  /// Host views that were added by an imperative view.\n  /// This is a dynamically growing / shrinking array.\n  inPlaceHostViews: List<AppView>;\n  viewContainers: List<AppViewContainer>;\n  preBuiltObjects: List<PreBuiltObjects>;\n  proto: AppProtoView;\n  renderer: renderApi.Renderer;\n\n  /**\n   * The context against which data-binding expressions in this view are evaluated against.\n   * This is always a component instance.\n   */\n\n  context: any;\n\n  /**\n   * Variables, local to this view, that can be used in binding expressions (in addition to the\n   * context). This is used for thing like `<video #player>` or\n   * `<li template=\"for #item of items\">`, where \"player\" and \"item\" are locals, respectively.\n   */\n  locals:Locals;\n\n  constructor(renderer:renderApi.Renderer, proto:AppProtoView, protoLocals:Map) {\n    this.render = null;\n    this.proto = proto;\n    this.changeDetector = null;\n    this.elementInjectors = null;\n    this.rootElementInjectors = null;\n    this.componentChildViews = null;\n    this.viewContainers = ListWrapper.createFixedSize(this.proto.elementBinders.length);\n    this.preBuiltObjects = null;\n    this.context = null;\n    this.locals = new Locals(null, MapWrapper.clone(protoLocals)); //TODO optimize this\n    this.renderer = renderer;\n    this.inPlaceHostViews = [];\n  }\n\n  init(changeDetector:ChangeDetector, elementInjectors:List, rootElementInjectors:List,\n      preBuiltObjects:List, componentChildViews:List) {\n    this.changeDetector = changeDetector;\n    this.elementInjectors = elementInjectors;\n    this.rootElementInjectors = rootElementInjectors;\n    this.preBuiltObjects = preBuiltObjects;\n    this.componentChildViews = componentChildViews;\n  }\n\n  setLocal(contextName: string, value):void {\n    if (!this.hydrated()) throw new BaseException('Cannot set locals on dehydrated view.');\n    if (!MapWrapper.contains(this.proto.variableBindings, contextName)) {\n      return;\n    }\n    var templateName = MapWrapper.get(this.proto.variableBindings, contextName);\n    this.locals.set(templateName, value);\n  }\n\n  hydrated():boolean {\n    return isPresent(this.context);\n  }\n\n  /**\n   * Triggers the event handlers for the element and the directives.\n   *\n   * This method is intended to be called from directive EventEmitters.\n   *\n   * @param {string} eventName\n   * @param {*} eventObj\n   * @param {int} binderIndex\n   */\n  triggerEventHandlers(eventName: string, eventObj, binderIndex: int): void {\n    var locals = MapWrapper.create();\n    MapWrapper.set(locals, '$event', eventObj);\n    this.dispatchEvent(binderIndex, eventName, locals);\n  }\n\n  // dispatch to element injector or text nodes based on context\n  notifyOnBinding(b:BindingRecord, currentValue:any): void {\n    if (b.isElement()) {\n      this.renderer.setElementProperty(\n        this.render, b.elementIndex, b.propertyName, currentValue\n      );\n    } else {\n      // we know it refers to _textNodes.\n      this.renderer.setText(this.render, b.elementIndex, currentValue);\n    }\n  }\n\n  getDirectiveFor(directive:DirectiveIndex) {\n    var elementInjector = this.elementInjectors[directive.elementIndex];\n    return elementInjector.getDirectiveAtIndex(directive.directiveIndex);\n  }\n\n  getDetectorFor(directive:DirectiveIndex) {\n    var childView = this.componentChildViews[directive.elementIndex];\n    return isPresent(childView) ? childView.changeDetector : null;\n  }\n\n  callAction(elementIndex:number, actionExpression:string, action:Object) {\n    this.renderer.callAction(this.render, elementIndex, actionExpression, action);\n  }\n\n  // implementation of EventDispatcher#dispatchEvent\n  // returns false if preventDefault must be applied to the DOM event\n  dispatchEvent(elementIndex:number, eventName:string, locals:Map<string, any>): boolean {\n    // Most of the time the event will be fired only when the view is in the live document.\n    // However, in a rare circumstance the view might get dehydrated, in between the event\n    // queuing up and firing.\n    var allowDefaultBehavior = true;\n    if (this.hydrated()) {\n      var elBinder = this.proto.elementBinders[elementIndex];\n      if (isBlank(elBinder.hostListeners)) return allowDefaultBehavior;\n      var eventMap = elBinder.hostListeners[eventName];\n      if (isBlank(eventMap)) return allowDefaultBehavior;\n      MapWrapper.forEach(eventMap, (expr, directiveIndex) => {\n        var context;\n        if (directiveIndex === -1) {\n          context = this.context;\n        } else {\n          context = this.elementInjectors[elementIndex].getDirectiveAtIndex(directiveIndex);\n        }\n        var result = expr.eval(context, new Locals(this.locals, locals));\n        if (isPresent(result)) {\n          allowDefaultBehavior = allowDefaultBehavior && result;\n        }\n      });\n    }\n    return allowDefaultBehavior;\n  }\n}\n\n/**\n *\n */\nexport class AppProtoView {\n  elementBinders:List<ElementBinder>;\n  protoChangeDetector:ProtoChangeDetector;\n  variableBindings: Map;\n  protoLocals:Map;\n  bindings:List;\n  variableNames:List;\n  render:renderApi.RenderProtoViewRef;\n\n  constructor(\n      render:renderApi.RenderProtoViewRef,\n      protoChangeDetector:ProtoChangeDetector,\n      variableBindings:Map,\n      protoLocals:Map,\n      variableNames:List) {\n    this.render = render;\n    this.elementBinders = [];\n    this.variableBindings = variableBindings;\n    this.protoLocals = protoLocals;\n    this.variableNames = variableNames;\n    this.protoChangeDetector = protoChangeDetector;\n  }\n\n  bindElement(parent:ElementBinder, distanceToParent:int, protoElementInjector:ProtoElementInjector,\n      componentDirective:DirectiveBinding = null):ElementBinder {\n    var elBinder = new ElementBinder(this.elementBinders.length, parent, distanceToParent,\n        protoElementInjector, componentDirective);\n    ListWrapper.push(this.elementBinders, elBinder);\n    return elBinder;\n  }\n\n  /**\n   * Adds an event binding for the last created ElementBinder via bindElement.\n   *\n   * If the directive index is a positive integer, the event is evaluated in the context of\n   * the given directive.\n   *\n   * If the directive index is -1, the event is evaluated in the context of the enclosing view.\n   *\n   * @param {string} eventName\n   * @param {AST} expression\n   * @param {int} directiveIndex The directive index in the binder or -1 when the event is not bound\n   *                             to a directive\n   */\n  bindEvent(eventBindings: List<renderApi.EventBinding>, boundElementIndex:number, directiveIndex: int = -1): void {\n    var elBinder = this.elementBinders[boundElementIndex];\n    var events = elBinder.hostListeners;\n    if (isBlank(events)) {\n      events = StringMapWrapper.create();\n      elBinder.hostListeners = events;\n    }\n    for (var i = 0; i < eventBindings.length; i++) {\n      var eventBinding = eventBindings[i];\n      var eventName = eventBinding.fullName;\n      var event = StringMapWrapper.get(events, eventName);\n      if (isBlank(event)) {\n        event = MapWrapper.create();\n        StringMapWrapper.set(events, eventName, event);\n      }\n      MapWrapper.set(event, directiveIndex, eventBinding.source);\n    }\n  }\n}\n"]}