{"version":3,"sources":["view_container_ref.js"],"names":[],"mappings":"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","file":"angular2/src/core/compiler/view_container_ref.es6","sourcesContent":["import {ListWrapper, List} from 'angular2/src/facade/collection';\nimport {Injector} from 'angular2/di';\nimport {isPresent, isBlank} from 'angular2/src/facade/lang';\n\nimport * as avmModule from './view_manager';\n\nimport {ElementRef} from './element_ref';\nimport {ViewRef, ProtoViewRef, internalView} from './view_ref';\n/**\n * @exportedAs angular2/core\n */\nexport class ViewContainerRef {\n  _viewManager: avmModule.AppViewManager;\n  _element: ElementRef;\n\n  constructor(viewManager: avmModule.AppViewManager,\n              element: ElementRef) {\n    this._viewManager = viewManager;\n    this._element = element;\n  }\n\n  _getViews() {\n    var vc = internalView(this._element.parentView).viewContainers[this._element.boundElementIndex];\n    return isPresent(vc) ? vc.views : [];\n  }\n\n  clear():void {\n    for (var i = this.length - 1; i >= 0; i--) {\n      this.remove(i);\n    }\n  }\n\n  get(index: number): ViewRef {\n    return new ViewRef(this._getViews()[index]);\n  }\n\n  get length() /* :int */ {\n    return this._getViews().length;\n  }\n\n  // TODO(rado): profile and decide whether bounds checks should be added\n  // to the methods below.\n  create(protoViewRef:ProtoViewRef = null, atIndex:number=-1, context:ElementRef, injector:Injector = null): ViewRef {\n    if (atIndex == -1) atIndex = this.length;\n    return this._viewManager.createViewInContainer(this._element, atIndex, protoViewRef, context, injector);\n  }\n\n  insert(viewRef:ViewRef, atIndex:number=-1): ViewRef {\n    if (atIndex == -1) atIndex = this.length;\n    return this._viewManager.attachViewInContainer(this._element, atIndex, viewRef);\n  }\n\n  indexOf(viewRef:ViewRef) {\n    return ListWrapper.indexOf(this._getViews(), internalView(viewRef));\n  }\n\n  remove(atIndex:number=-1):void {\n    if (atIndex == -1) atIndex = this.length - 1;\n    this._viewManager.destroyViewInContainer(this._element, atIndex);\n    // view is intentionally not returned to the client.\n  }\n\n  /**\n   * The method can be used together with insert to implement a view move, i.e.\n   * moving the dom nodes while the directives in the view stay intact.\n   */\n  detach(atIndex:number=-1): ViewRef {\n    if (atIndex == -1) atIndex = this.length - 1;\n    return this._viewManager.detachViewInContainer(this._element, atIndex);\n  }\n}\n"]}