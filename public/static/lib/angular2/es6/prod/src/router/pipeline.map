{"version":3,"sources":["pipeline.js"],"names":[],"mappings":"AAAA,KAAO,EAAC,OAAM;AAAG,eAAa,CAAC,KAAO,4BAA0B,CAAC;AACjE,KAAO,EAAC,IAAG;AAAG,YAAU,CAAC,KAAO,iCAA+B,CAAC;AAChE,KAAO,EAAC,WAAU,CAAC,KAAO,gBAAc,CAAC;AAMzC,KAAO,MAAM,SAAO;AAElB,YAAU,CAAE,AAAD,CAAG;AACZ,OAAG,MAAM,EAAI,EACX,CAAA,WAAU,IAAK,CAAA,WAAU,aAAa,AAAC,CAAC,CAAC,iBAAgB,CAAG,CAAA,gBAAe,IAAM;AAC/E,qBAAe,OAAO,EAAI,CAAA,iBAAgB,OAAO,YAAY,AAAC,CAAC,gBAAe,UAAU,CAAC,CAAC;IAC5F,CAAC,CACD,EAAA,WAAU,IAAK,CAAA,WAAU,OAAO,gBAAgB,AAAC,CAAC,CAAC,MAAK,CAAG,CAAA,IAAG,IAAM;AAClE,WAAO,CAAA,MAAK,cAAc,AAAC,CAAC,WAAU,oBAAoB,AAAC,CAAC,IAAG,CAAC,CAAC,CAAC;IACpE,CAAC,CACD,EAAA,WAAU,IAAK,CAAA,WAAU,OAAO,gBAAgB,AAAC,CAAC,CAAC,MAAK,CAAG,CAAA,IAAG,IAAM;AAClE,WAAO,CAAA,MAAK,YAAY,AAAC,CAAC,WAAU,oBAAoB,AAAC,CAAC,IAAG,CAAC,CAAC,CAAC;IAClE,CAAC,CACD,EAAA,WAAU,IAAK,CAAA,WAAU,OAAO,gBAAgB,AAAC,CAAC,WAAU,CAAC,CAC/D,CAAC;EACH;AAAA,AAEA,QAAM,CAAE,WAAU,AAAY,CAAW;AACvC,AAAI,MAAA,CAAA,KAAI,EAAI,CAAA,IAAG,MAAM;AACjB,kBAAU,EAAI,EAAA,CAAC;AAEnB,WAAS,WAAS,CAAE,MAAK,EAAQ,KAAG,CAAW;AAC7C,SAAI,WAAU,GAAK,CAAA,KAAI,OAAO,CAAG;AAC/B,aAAO,CAAA,cAAa,QAAQ,AAAC,CAAC,MAAK,CAAC,CAAC;MACvC;AAAA,AACI,QAAA,CAAA,IAAG,EAAI,CAAA,KAAI,CAAE,WAAU,CAAC,CAAC;AAC7B,gBAAU,GAAK,EAAA,CAAC;AAChB,WAAO,CAAA,cAAa,QAAQ,AAAC,CAAC,IAAG,AAAC,CAAC,WAAU,CAAC,CAAC,KAAK,AAAC,CAAC,UAAS,CAAC,CAAC;IACnE;AAAA,AApCJ,SAAK,eAAe,AAAC,0BACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,gBAD1B,MAAK,KAAgB,OAC4B;MAAC,CAAC,CAAC,CAAC;AAqCjD,SAAO,CAAA,UAAS,AAAC,EAAC,CAAC;EACrB;AAAA,AACF;AAAA,AAxCA,KAAK,eAAe,AAAC,0CACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YAwBJ,WAAU,GAxBiB;EAAC,CAAC,CAAC,CAAC;AAwCrD","file":"angular2/src/router/pipeline.es6","sourcesContent":["import {Promise, PromiseWrapper} from 'angular2/src/facade/async';\nimport {List, ListWrapper} from 'angular2/src/facade/collection';\nimport {Instruction} from './instruction';\n\n/**\n * Responsible for performing each step of navigation.\n * \"Steps\" are conceptually similar to \"middleware\"\n */\nexport class Pipeline {\n  steps:List;\n  constructor() {\n    this.steps = [\n      instruction => instruction.traverseSync((parentInstruction, childInstruction) => {\n        childInstruction.router = parentInstruction.router.childRouter(childInstruction.component);\n      }),\n      instruction => instruction.router.traverseOutlets((outlet, name) => {\n        return outlet.canDeactivate(instruction.getChildInstruction(name));\n      }),\n      instruction => instruction.router.traverseOutlets((outlet, name) => {\n        return outlet.canActivate(instruction.getChildInstruction(name));\n      }),\n      instruction => instruction.router.activateOutlets(instruction)\n    ];\n  }\n\n  process(instruction:Instruction):Promise {\n    var steps = this.steps,\n        currentStep = 0;\n\n    function processOne(result:any = true):Promise {\n      if (currentStep >= steps.length) {\n        return PromiseWrapper.resolve(result);\n      }\n      var step = steps[currentStep];\n      currentStep += 1;\n      return PromiseWrapper.resolve(step(instruction)).then(processOne);\n    }\n\n    return processOne();\n  }\n}\n"]}