{"version":3,"sources":["compiler.js"],"names":[],"mappings":"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","file":"angular2/src/render/dom/compiler/compiler.es6","sourcesContent":["import {Injectable} from 'angular2/src/di/annotations_impl';\n\nimport {PromiseWrapper, Promise} from 'angular2/src/facade/async';\nimport {BaseException, isPresent} from 'angular2/src/facade/lang';\nimport {DOM} from 'angular2/src/dom/dom_adapter';\n\nimport {ViewDefinition, ProtoViewDto, DirectiveMetadata, RenderCompiler, RenderProtoViewRef} from '../../api';\nimport {CompilePipeline} from './compile_pipeline';\nimport {TemplateLoader} from 'angular2/src/render/dom/compiler/template_loader';\nimport {CompileStepFactory, DefaultStepFactory} from './compile_step_factory';\nimport {Parser} from 'angular2/change_detection';\nimport {ShadowDomStrategy} from '../shadow_dom/shadow_dom_strategy';\n\n/**\n * The compiler loads and translates the html templates of components into\n * nested ProtoViews. To decompose its functionality it uses\n * the CompilePipeline and the CompileSteps.\n */\nexport class DomCompiler extends RenderCompiler {\n  _templateLoader: TemplateLoader;\n  _stepFactory: CompileStepFactory;\n\n  constructor(stepFactory: CompileStepFactory, templateLoader: TemplateLoader) {\n    super();\n    this._templateLoader = templateLoader;\n    this._stepFactory = stepFactory;\n  }\n\n  compile(template: ViewDefinition):Promise<ProtoViewDto> {\n    var tplPromise = this._templateLoader.load(template);\n    return PromiseWrapper.then(tplPromise,\n      (el) => this._compileTemplate(template, el),\n      (_) => { throw new BaseException(`Failed to load the template \"${template.componentId}\"`); }\n    );\n  }\n\n  compileHost(directiveMetadata: DirectiveMetadata):Promise<ProtoViewDto> {\n    var hostViewDef = new ViewDefinition({\n      componentId: directiveMetadata.id,\n      absUrl: null,\n      template: null,\n      directives: [directiveMetadata]\n    });\n    var element = DOM.createElement(directiveMetadata.selector);\n    return this._compileTemplate(hostViewDef, element);\n  }\n\n  _compileTemplate(viewDef: ViewDefinition, tplElement):Promise<ProtoViewDto> {\n    var subTaskPromises = [];\n    var pipeline = new CompilePipeline(this._stepFactory.createSteps(viewDef, subTaskPromises));\n    var compileElements = pipeline.process(tplElement, viewDef.componentId);\n\n    var protoView = compileElements[0].inheritedProtoView.build();\n\n    if (subTaskPromises.length > 0) {\n      return PromiseWrapper.all(subTaskPromises).then((_) => protoView);\n    } else {\n      return PromiseWrapper.resolve(protoView);\n    }\n  }\n}\n\n@Injectable()\nexport class DefaultDomCompiler extends DomCompiler {\n  constructor(parser:Parser, shadowDomStrategy:ShadowDomStrategy, templateLoader: TemplateLoader) {\n    super(new DefaultStepFactory(parser, shadowDomStrategy), templateLoader);\n  }\n}\n"]}