{"version":3,"sources":["view.js"],"names":[],"mappings":"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","file":"angular2/src/render/dom/view/view.es6","sourcesContent":["import {DOM} from 'angular2/src/dom/dom_adapter';\nimport {ListWrapper, MapWrapper, Map, StringMapWrapper, List} from 'angular2/src/facade/collection';\nimport {Locals} from 'angular2/change_detection';\nimport {int, isPresent, isBlank, BaseException} from 'angular2/src/facade/lang';\n\nimport {DomViewContainer} from './view_container';\nimport {DomProtoView} from './proto_view';\nimport {LightDom} from '../shadow_dom/light_dom';\nimport {Content} from '../shadow_dom/content_tag';\n\nimport {RenderViewRef} from '../../api';\n\n// TODO(tbosch): enable this again!\n// import {EventDispatcher} from '../../api';\n\nexport function resolveInternalDomView(viewRef:RenderViewRef) {\n  var domViewRef:DomViewRef = viewRef;\n  return domViewRef._view;\n}\n\nexport class DomViewRef extends RenderViewRef {\n  _view:DomView;\n  constructor(view:DomView) {\n    super();\n    this._view = view;\n  }\n}\n\n\nconst NG_BINDING_CLASS = 'ng-binding';\n\n/**\n * Const of making objects: http://jsperf.com/instantiate-size-of-object\n */\nexport class DomView {\n  boundElements:List;\n  boundTextNodes:List;\n  /// When the view is part of render tree, the DocumentFragment is empty, which is why we need\n  /// to keep track of the nodes.\n  rootNodes:List;\n  // TODO(tbosch): move componentChildViews, viewContainers, contentTags, lightDoms into\n  // a single array with records inside\n  viewContainers: List<DomViewContainer>;\n  contentTags: List<Content>;\n  lightDoms: List<LightDom>;\n  hostLightDom: LightDom;\n  shadowRoot;\n  proto: DomProtoView;\n  hydrated: boolean;\n  eventDispatcher: any/*EventDispatcher*/;\n  eventHandlerRemovers: List<Function>;\n\n  constructor(\n      proto:DomProtoView, rootNodes:List,\n      boundTextNodes: List, boundElements:List, contentTags:List) {\n    this.proto = proto;\n    this.rootNodes = rootNodes;\n    this.boundTextNodes = boundTextNodes;\n    this.boundElements = boundElements;\n    this.viewContainers = ListWrapper.createFixedSize(boundElements.length);\n    this.contentTags = contentTags;\n    this.lightDoms = ListWrapper.createFixedSize(boundElements.length);\n    this.hostLightDom = null;\n    this.hydrated = false;\n    this.eventHandlerRemovers = [];\n    this.eventDispatcher = null;\n    this.shadowRoot = null;\n  }\n\n  getDirectParentLightDom(boundElementIndex:number) {\n    var binder = this.proto.elementBinders[boundElementIndex];\n    var destLightDom = null;\n    if (binder.parentIndex !== -1 && binder.distanceToParent === 1) {\n      destLightDom = this.lightDoms[binder.parentIndex];\n    }\n    return destLightDom;\n  }\n\n  setElementProperty(elementIndex:number, propertyName:string, value:any) {\n    var setter = MapWrapper.get(this.proto.elementBinders[elementIndex].propertySetters, propertyName);\n    setter(this.boundElements[elementIndex], value);\n  }\n\n  callAction(elementIndex:number, actionExpression:string, actionArgs:any) {\n    var binder = this.proto.elementBinders[elementIndex];\n    var hostAction = MapWrapper.get(binder.hostActions, actionExpression);\n    hostAction.eval(this.boundElements[elementIndex], this._localsWithAction(actionArgs));\n  }\n\n  _localsWithAction(action:Object):Locals {\n    var map = MapWrapper.create();\n    MapWrapper.set(map, '$action', action);\n    return new Locals(null, map);\n  }\n\n  setText(textIndex:number, value:string) {\n    DOM.setText(this.boundTextNodes[textIndex], value);\n  }\n\n  dispatchEvent(elementIndex, eventName, event): boolean {\n    var allowDefaultBehavior = true;\n    if (isPresent(this.eventDispatcher)) {\n      var evalLocals = MapWrapper.create();\n      MapWrapper.set(evalLocals, '$event', event);\n      // TODO(tbosch): reenable this when we are parsing element properties\n      // out of action expressions\n      // var localValues = this.proto.elementBinders[elementIndex].eventLocals.eval(null, new Locals(null, evalLocals));\n      // this.eventDispatcher.dispatchEvent(elementIndex, eventName, localValues);\n      allowDefaultBehavior = this.eventDispatcher.dispatchEvent(elementIndex, eventName, evalLocals);\n      if (!allowDefaultBehavior) {\n        event.preventDefault();\n      }\n    }\n    return allowDefaultBehavior;\n  }\n}\n"]}